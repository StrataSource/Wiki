[
	{"name": "_autosave", "type": "command", "help": "Autosave", "flags": ["norecord"]},
	{"name": "_autosavedangerous", "type": "command", "help": "AutoSaveDangerous", "flags": ["norecord"]},
	{"name": "_fov", "type": "cvar", "help": "Automates fov command to server.", "flags": ["cl"]},
	{"name": "_record", "type": "command", "help": "Record a demo incrementally.", "flags": ["norecord"]},
	{"name": "_resetgamestats", "type": "command", "help": "Erases current game stats and writes out a blank stats file", "flags": ["sv"]},
	{"name": "_restart", "type": "command", "help": "Shutdown and restart the engine.", "flags": ["norecord"]},
	{"name": "achievement_debug", "type": "cvar", "help": "Turn on achievement debug msgs.", "flags": ["cheat","rep","cl"]},
	{"name": "achievement_disable", "type": "cvar", "help": "Turn off achievements.", "flags": ["cheat","rep","cl"]},
	{"name": "addip", "type": "command", "help": "Add an IP address to the ban list.", "flags": []},
	{"name": "adsp_alley_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_courtyard_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_debug", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "adsp_door_height", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_duct_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_hall_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_low_ceiling", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_opencourtyard_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_openspace_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_openstreet_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_openwall_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_reset_nodes", "type": "command", "help": "", "flags": []},
	{"name": "adsp_room_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_scale_delay_feedback", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_scale_delay_gain", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_street_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_tunnel_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_wall_height", "type": "cvar", "help": "", "flags": []},
	{"name": "advisor_use_impact_table", "type": "cvar", "help": "If true, advisor will use her custom impact damage table.", "flags": ["sv"]},
	{"name": "ai_actbusy_search_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_ally_manager_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_auto_contact_solver", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_block_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_citizen_debug_commander", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_clear_bad_links", "type": "command", "help": "Clears bits set on nav links indicating link is unusable ", "flags": ["sv","cheat"]},
	{"name": "ai_debug_actbusy", "type": "cvar", "help": "Used to debug actbusy behavior. Usage:\n1: Constantly draw lines from NPCs to the actbusy nodes they've chosen to actbusy at.\n2: Whenever an NPC makes a decision to use an actbusy, show which actbusy they've chosen.\n3: Selected NPCs (with npc_select) will report why they're not choosing actbusy nodes.\n4: Display debug output of actbusy logic.\n5: Display safe zone volumes and info.\n", "flags": ["sv","cheat"]},
	{"name": "ai_debug_assault", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_avoidancebounds", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_directnavprobe", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_doors", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_dyninteractions", "type": "cvar", "help": "Debug the NPC dynamic interaction system.", "flags": ["sv"]},
	{"name": "ai_debug_efficiency", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_enemies", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_enemyfinders", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_eventresponses", "type": "cvar", "help": "Set to 1 to see all NPC response events trigger, and which NPCs choose to respond to them.", "flags": ["sv"]},
	{"name": "ai_debug_expressions", "type": "cvar", "help": "Show random expression decisions for NPCs.", "flags": ["sv"]},
	{"name": "ai_debug_follow", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_loners", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_looktargets", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_los", "type": "cvar", "help": "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.", "flags": ["sv","cheat"]},
	{"name": "ai_debug_nav", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_node_connect", "type": "command", "help": "Debug the attempted connection between two nodes", "flags": ["sv"]},
	{"name": "ai_debug_ragdoll_magnets", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_readiness", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_shoot_positions", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "ai_debug_speech", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_squads", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_think_ticks", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debugscriptconditions", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_default_efficient", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_disable", "type": "command", "help": "Bi-passes all AI logic routines and puts all NPCs into their idle animations.  Can be used to get NPCs out of your way and to test effect of AI logic routines on frame rate", "flags": ["sv","cheat"]},
	{"name": "ai_drawbattlelines", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "ai_drop_hint", "type": "command", "help": "Drop an ai_hint at the player's current eye position.", "flags": ["sv","cheat"]},
	{"name": "ai_dump_hints", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "ai_ef_hate_npc_duration", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_ef_hate_npc_frequency", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_efficiency_override", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_enable_fear_behavior", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_expression_frametime", "type": "cvar", "help": "Maximum frametime to still play background expressions.", "flags": ["sv"]},
	{"name": "ai_expression_optimization", "type": "cvar", "help": "Disable npc background expressions when you can't see them.", "flags": ["sv"]},
	{"name": "ai_fear_player_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_find_lateral_cover", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_find_lateral_los", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_follow_move_commands", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_follow_use_points", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_follow_use_points_when_moving", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_force_serverside_ragdoll", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_frametime_limit", "type": "cvar", "help": "frametime limit for min efficiency AIE_NORMAL (in sec's).", "flags": ["sv"]},
	{"name": "ai_hull", "type": "command", "help": "Controls which connections are shown when ai_show_hull or ai_show_connect commands are used\n\tArguments:\tNPC name or classname, <none>=NPC under crosshair", "flags": ["sv","cheat"]},
	{"name": "ai_inhibit_spawners", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "ai_lead_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_LOS_mode", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "ai_moveprobe_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_moveprobe_jump_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_moveprobe_usetracelist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_nav_debug_experimental_pathing", "type": "cvar", "help": "Draw paths tried during search for bodysnatcher pathing", "flags": ["sv"]},
	{"name": "ai_navigator_generate_spikes", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_navigator_generate_spikes_strength", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_new_aiming", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_newgroundturret", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_next_hull", "type": "command", "help": "Cycles through the various hull sizes.  Currently selected hull size is written to the screen.  Controls which connections are shown when ai_show_hull or ai_show_connect commands are used\n\tArguments:\t-none-", "flags": ["sv","cheat"]},
	{"name": "ai_no_local_paths", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_no_node_cache", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_no_select_box", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_no_steer", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_no_talk_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_nodes", "type": "command", "help": "Toggles node display.  First call displays the nodes for the given network as green objects.  Second call  displays the nodes and their IDs.  Nodes are color coded as follows:\n\tGreen\t\t- ground node\n\tCyan\t\t- air node\n\tMagenta\t- climb node\n\tGrey\t\t- node not available for selected hull size\n\tOrange \t- node currently locked", "flags": ["sv","cheat"]},
	{"name": "ai_norebuildgraph", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_path_adjust_speed_on_immediate_turns", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_path_insert_pause_at_est_end", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_path_insert_pause_at_obstruction", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_post_frame_navigation", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_radial_max_link_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_reaction_delay_alert", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_reaction_delay_idle", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_readiness_decay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_rebalance_thinks", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_rebuildmessages", "type": "cvar", "help": "Shows nodegraph rebuild messages when enabled.", "flags": ["sv"]},
	{"name": "ai_report_task_timings_on_limit", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "ai_resume", "type": "command", "help": "If NPC is stepping through tasks (see ai_step ) will resume normal processing.", "flags": ["sv","cheat"]},
	{"name": "ai_sequence_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_set_move_height_epsilon", "type": "command", "help": "Set how high AI bumps up ground walkers when checking steps", "flags": ["sv"]},
	{"name": "ai_setenabled", "type": "command", "help": "Like ai_disable but you manually specify the state (with a 0 or 1) instead of toggling it.", "flags": ["sv","cheat"]},
	{"name": "ai_setupbones_debug", "type": "cvar", "help": "Shows that bones that are setup every think", "flags": ["sv"]},
	{"name": "ai_shot_bias", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_shot_bias_max", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "ai_shot_bias_min", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "ai_shot_stats", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_shot_stats_term", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_show_connect", "type": "command", "help": "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:\n\tGreen\t\t- ground movement \n\tBlue\t\t- jumping movement\n\tCyan\t\t- flying movement\n\t\n\tYellow\t\t- crawling movement\n\tMagenta\t- climbing movement\n\tRed\t\t- connection disabled", "flags": ["sv","cheat"]},
	{"name": "ai_show_connect_crawl", "type": "command", "help": "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:\n\tGreen\t\t- ground movement \n\tBlue\t\t- jumping movement\n\tCyan\t\t- flying movement\n\tYellow\t\t- crawling movement\n\tMagenta\t- climbing movement\n\tRed\t\t- connection disabled", "flags": ["sv","cheat"]},
	{"name": "ai_show_connect_fly", "type": "command", "help": "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:\n\tGreen\t\t- ground movement \n\tBlue\t\t- jumping movement\n\tCyan\t\t- flying movement\n\t\n\tYellow\t\t- crawling movement\n\tMagenta\t- climbing movement\n\tRed\t\t- connection disabled", "flags": ["sv","cheat"]},
	{"name": "ai_show_connect_jump", "type": "command", "help": "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:\n\tGreen\t\t- ground movement \n\tBlue\t\t- jumping movement\n\tCyan\t\t- flying movement\n\t\n\tYellow\t\t- crawling movement\n\tMagenta\t- climbing movement\n\tRed\t\t- connection disabled", "flags": ["sv","cheat"]},
	{"name": "ai_show_graph_connect", "type": "command", "help": "Toggles graph connection display for the node that the player is looking at.  Nodes that are connected to the selected node by the net graph will be drawn in red with magenta lines connecting to the selected node.  Nodes that are not connected via the net graph from the selected node will be drawn in blue.", "flags": ["sv","cheat"]},
	{"name": "ai_show_grid", "type": "command", "help": "Draw a grid on the floor where looking.", "flags": ["sv","cheat"]},
	{"name": "ai_show_hints", "type": "command", "help": "Displays all hints as small boxes\n\tBlue\t\t- hint is available for use\n\tRed\t\t- hint is currently being used by an NPC\n\tOrange\t\t- hint not being used by timed out\n\tGrey\t\t- hint has been disabled", "flags": ["sv","cheat"]},
	{"name": "ai_show_hull", "type": "command", "help": "Displays the allowed hulls between each node for the currently selected hull type.  Hulls are color code as follows:\n\tGreen\t\t- ground movement \n\tBlue\t\t- jumping movement\n\tCyan\t\t- flying movement\n\t\n\tYellow\t\t- crawling movement\n\tMagenta\t- climbing movement\n\tArguments: \t-none-", "flags": ["sv","cheat"]},
	{"name": "ai_show_hull_attacks", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_show_node", "type": "command", "help": "Highlight the specified node", "flags": ["sv","cheat"]},
	{"name": "ai_show_think_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_show_visibility", "type": "command", "help": "Toggles visibility display for the node that the player is looking at.  Nodes that are visible from the selected node will be drawn in red with yellow lines connecting to the selected node.  Nodes that are not visible from the selected node will be drawn in blue.", "flags": ["sv","cheat"]},
	{"name": "ai_simulate_task_overtime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_spread_cone_focus_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_spread_defocused_cone_multiplier", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_spread_pattern_focus_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_step", "type": "command", "help": "NPCs will freeze after completing their current task.  To complete the next task, use 'ai_step' again.  To resume processing normally use 'ai_resume'", "flags": ["sv","cheat"]},
	{"name": "ai_strong_optimizations", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_strong_optimizations_no_checkstand", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_task_pre_script", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_test_los", "type": "command", "help": "Test AI LOS from the player's POV", "flags": ["sv"]},
	{"name": "ai_test_moveprobe_ignoresmall", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_think_limit_label", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "ai_use_clipped_paths", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_use_efficiency", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_use_frame_think_limits", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_use_readiness", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_use_think_optimizations", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_use_visibility_cache", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_vehicle_avoidance", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "aim_flickstick_circular_deadzone_max", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_circular_deadzone_max2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_circular_deadzone_min", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_circular_deadzone_min2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_crank_sensitivity", "type": "cvar", "help": "Multiplies sweep rotation", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_crank_sensitivity2", "type": "cvar", "help": "Multiplies sweep rotation", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_crank_tightness", "type": "cvar", "help": "Higher values mean sweep rotation are snappier. Lower values are smoother", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_crank_tightness2", "type": "cvar", "help": "Higher values mean sweep rotation are snappier. Lower values are smoother", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_enable", "type": "cvar", "help": "when enabled, JoystickCamera will use FlickStick behaviour instead of conventional aiming behaviour", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_enable2", "type": "cvar", "help": "when enabled, JoystickCamera will use FlickStick behaviour instead of conventional aiming behaviour", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_flick_snap_mode", "type": "cvar", "help": "Snap initial flick to a quantized direction. 0: No Snap. 1: 180 deg. 2: 90 deg. 3: 60 deg. 4: 45 deg.", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_flick_snap_mode2", "type": "cvar", "help": "Snap initial flick to a quantized direction. 0: No Snap. 1: 180 deg. 2: 90 deg. 3: 60 deg. 4: 45 deg.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_flick_tightness", "type": "cvar", "help": "Flick stick snap tightness percentage", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_flick_tightness2", "type": "cvar", "help": "Flick stick snap tightness percentage", "flags": ["a","cl","ss_added"]},
	{"name": "aim_flickstick_max_depression_speed", "type": "cvar", "help": "Fully diminish the effect of sweep when the stick is returning to zero when the stick returns at this speed.", "flags": ["a","cl","ss"]},
	{"name": "aim_flickstick_max_depression_speed2", "type": "cvar", "help": "Fully diminish the effect of sweep when the stick is returning to zero when the stick returns at this speed.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_circular_deadzone_min", "type": "cvar", "help": "Gyro inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_circular_deadzone_min2", "type": "cvar", "help": "Gyro inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_invert_pitch", "type": "cvar", "help": "Invert pitch of gyro controlling aim.", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_invert_pitch2", "type": "cvar", "help": "Invert pitch of gyro controlling aim.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_invert_yaw", "type": "cvar", "help": "Invert yaw of gyro controlling aim.", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_invert_yaw2", "type": "cvar", "help": "Invert yaw of gyro controlling aim.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_sensitivity_pitch", "type": "cvar", "help": "Gyro's pitch contribution to Aim", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_sensitivity_pitch2", "type": "cvar", "help": "Gyro's pitch contribution to Aim", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_sensitivity_yaw", "type": "cvar", "help": "Gyro's yaw contribution to Aim", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_sensitivity_yaw2", "type": "cvar", "help": "Gyro's yaw contribution to Aim", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_square_deadzone_pitch", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_square_deadzone_pitch2", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_square_deadzone_yaw", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_square_deadzone_yaw2", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_gyro_zoom_dampening", "type": "cvar", "help": "Multiply aim sensitivity by this when zoomed in.", "flags": ["a","cl","ss"]},
	{"name": "aim_gyro_zoom_dampening2", "type": "cvar", "help": "Multiply aim sensitivity by this when zoomed in.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_circular_deadzone_max", "type": "cvar", "help": "Stick inputs at this deflection or more appear as one.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_circular_deadzone_max2", "type": "cvar", "help": "Stick inputs at this deflection or more appear as one.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_circular_deadzone_min", "type": "cvar", "help": "Stick inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_circular_deadzone_min2", "type": "cvar", "help": "Stick inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_extra_pitch", "type": "cvar", "help": "When the stick is fully pegged, gain extra pitch rate over time.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_extra_pitch2", "type": "cvar", "help": "When the stick is fully pegged, gain extra pitch rate over time.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_extra_turning_delay", "type": "cvar", "help": "How long to wait before ramping in extra turning.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_extra_turning_delay2", "type": "cvar", "help": "How long to wait before ramping in extra turning.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_extra_turning_ramp_up_time", "type": "cvar", "help": "How soon does extra turning reach maximum when stick is pegged.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_extra_turning_ramp_up_time2", "type": "cvar", "help": "How soon does extra turning reach maximum when stick is pegged.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_extra_yaw", "type": "cvar", "help": "When the stick is fully pegged, gain extra yaw rate over time.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_extra_yaw2", "type": "cvar", "help": "When the stick is fully pegged, gain extra yaw rate over time.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_invert_pitch", "type": "cvar", "help": "Invert pitch of stick controlling aim.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_invert_pitch2", "type": "cvar", "help": "Invert pitch of stick controlling aim.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_invert_yaw", "type": "cvar", "help": "Invert yaw of stick controlling aim.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_invert_yaw2", "type": "cvar", "help": "Invert yaw of stick controlling aim.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_rate_pitch", "type": "cvar", "help": "How fast the stick turns the camera horizontally at max deflection (degrees per second)", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_rate_pitch2", "type": "cvar", "help": "How fast the stick turns the camera horizontally at max deflection (degrees per second)", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_rate_yaw", "type": "cvar", "help": "How fast the stick turns the camera vertically at max deflection (degrees per second)", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_rate_yaw2", "type": "cvar", "help": "How fast the stick turns the camera vertically at max deflection (degrees per second)", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_response_curve", "type": "cvar", "help": "Larger values allow finer control when feathering the stick.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_response_curve2", "type": "cvar", "help": "Larger values allow finer control when feathering the stick.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_square_deadzone_pitch", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_square_deadzone_pitch2", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_square_deadzone_yaw", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_square_deadzone_yaw2", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_stick_zoom_dampening", "type": "cvar", "help": "Multiply aim sensitivity by this when zoomed in.", "flags": ["a","cl","ss"]},
	{"name": "aim_stick_zoom_dampening2", "type": "cvar", "help": "Multiply aim sensitivity by this when zoomed in.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_circular_deadzone_min", "type": "cvar", "help": "touchpad inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_circular_deadzone_min2", "type": "cvar", "help": "touchpad inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_invert_pitch", "type": "cvar", "help": "Invert pitch of touchpad controlling aim.", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_invert_pitch2", "type": "cvar", "help": "Invert pitch of touchpad controlling aim.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_invert_yaw", "type": "cvar", "help": "Invert yaw of touchpad controlling aim.", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_invert_yaw2", "type": "cvar", "help": "Invert yaw of touchpad controlling aim.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_sensitivity_pitch", "type": "cvar", "help": "touchpad's pitch contribution to Aim", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_sensitivity_pitch2", "type": "cvar", "help": "touchpad's pitch contribution to Aim", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_sensitivity_yaw", "type": "cvar", "help": "touchpad's yaw contribution to Aim", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_sensitivity_yaw2", "type": "cvar", "help": "touchpad's yaw contribution to Aim", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_square_deadzone_pitch", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_square_deadzone_pitch2", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_square_deadzone_yaw", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_square_deadzone_yaw2", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "aim_touchpad_zoom_dampening", "type": "cvar", "help": "Multiply aim sensitivity by this when zoomed in.", "flags": ["a","cl","ss"]},
	{"name": "aim_touchpad_zoom_dampening2", "type": "cvar", "help": "Multiply aim sensitivity by this when zoomed in.", "flags": ["a","cl","ss_added"]},
	{"name": "ainet_generate_report", "type": "command", "help": "Generate a report to the console.", "flags": ["sv"]},
	{"name": "ainet_generate_report_only", "type": "command", "help": "Generate a report to the console.", "flags": ["sv"]},
	{"name": "air_density", "type": "command", "help": "Changes the density of air for drag computations.", "flags": ["sv","cheat"]},
	{"name": "airboat_fatal_stress", "type": "cvar", "help": "Amount of stress in kg that would kill the airboat driver.", "flags": ["sv"]},
	{"name": "airboat_joy_response_move", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "alias", "type": "command", "help": "Alias a command.", "flags": []},
	{"name": "-alt1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+alt1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+alt2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-alt2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "alyx_darkness_force", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "ammo_357_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_AirboatGun_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_AlyxGun_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_AR2_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_Buckshot_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_CombineCannon_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_GaussEnergy_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_HelicopterGun_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_Pistol_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_SMG1_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_SniperPenetratedRound_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_SniperRound_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "ammo_XBowBolt_impulse", "type": "cvar", "help": "You must enable tweaking via tweak_ammo_impulses to use this value.", "flags": ["rep","cl"]},
	{"name": "anim_3wayblend", "type": "cvar", "help": "Toggle the 3-way animation blending code.", "flags": ["rep","cl"]},
	{"name": "anim_showmainactivity", "type": "cvar", "help": "Show the idle, walk, run, and/or sprint activities.", "flags": ["cheat","cl"]},
	{"name": "anim_twistbones_enabled", "type": "cvar", "help": "Enable procedural twist bones.", "flags": ["cheat","rep","cl"]},
	{"name": "antlion_easycrush", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "askconnect_accept", "type": "command", "help": "Accept a redirect request by the server.", "flags": ["norecord"]},
	{"name": "async_allow_held_files", "type": "cvar", "help": "Allow AsyncBegin/EndRead()", "flags": []},
	{"name": "async_mode", "type": "cvar", "help": "Set the async filesystem mode (0 = async, 1 = synchronous)", "flags": []},
	{"name": "async_resume", "type": "command", "help": "", "flags": []},
	{"name": "async_serialize", "type": "cvar", "help": "Force async reads to serialize for profiling", "flags": []},
	{"name": "async_simulate_delay", "type": "cvar", "help": "Simulate a delay of up to a set msec per file operation", "flags": []},
	{"name": "async_suspend", "type": "command", "help": "", "flags": []},
	{"name": "-attack", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+attack", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+attack2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-attack2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "autoaim_max_deflect", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "autoaim_max_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "autosave", "type": "command", "help": "Autosave", "flags": ["norecord"]},
	{"name": "autosavedangerous", "type": "command", "help": "AutoSaveDangerous", "flags": ["norecord"]},
	{"name": "autosavedangerousissafe", "type": "command", "help": "", "flags": ["norecord"]},
	{"name": "+back", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-back", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "banid", "type": "command", "help": "Add a user ID to the ban list.", "flags": []},
	{"name": "banip", "type": "command", "help": "Add an IP address to the ban list.", "flags": []},
	{"name": "bench_end", "type": "command", "help": "Ends gathering of info.", "flags": ["cheat"]},
	{"name": "bench_start", "type": "command", "help": "Starts gathering of info. Arguments: filename to write results into", "flags": ["cheat"]},
	{"name": "benchframe", "type": "command", "help": "Takes a snapshot of a particular frame in a time demo.", "flags": ["norecord"]},
	{"name": "bind", "type": "command", "help": "Bind a key.", "flags": []},
	{"name": "bind_osx", "type": "command", "help": "Bind a key for OSX only.", "flags": []},
	{"name": "BindToggle", "type": "command", "help": "Performs a bind <key> \"increment var <cvar> 0 1 1\"", "flags": []},
	{"name": "bink_preload_videopanel_movies", "type": "cvar", "help": "Preload Bink movies used by VideoPanel.", "flags": ["cl"]},
	{"name": "birds_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "BlendBonesMode", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "blink_duration", "type": "cvar", "help": "How many seconds an eye blink will last.", "flags": ["cl"]},
	{"name": "blobs_paused", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "bot", "type": "command", "help": "Add a bot.", "flags": ["sv","cheat"]},
	{"name": "bot_command", "type": "command", "help": "<bot name> <command string...>.  Sends specified command on behalf of specified bot", "flags": ["sv","cheat"]},
	{"name": "bot_defend", "type": "cvar", "help": "Set to a team number, and that team will all keep their combat shields raised.", "flags": ["sv"]},
	{"name": "bot_dontmove", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "bot_equip", "type": "command", "help": "Generate an item and have the bot equip it.\n\tFormat: bot_equip <bot name> <item name>", "flags": ["sv","cheat"]},
	{"name": "bot_flipout", "type": "cvar", "help": "When on, all bots fire their guns.", "flags": ["sv"]},
	{"name": "bot_follow", "type": "cvar", "help": "When on, bot will follow the player.", "flags": ["sv","cheat"]},
	{"name": "bot_following_distance", "type": "cvar", "help": "distance that bot will follow the player.", "flags": ["sv","cheat"]},
	{"name": "bot_forceattack2", "type": "cvar", "help": "When firing, use attack2.", "flags": ["sv"]},
	{"name": "bot_forceattackon", "type": "cvar", "help": "When firing, don't tap fire, hold it down.", "flags": ["sv"]},
	{"name": "bot_forcefireweapon", "type": "cvar", "help": "Force bots with the specified weapon to fire.", "flags": ["sv"]},
	{"name": "bot_jump", "type": "cvar", "help": "Force all bots to repeatedly jump.", "flags": ["sv","cheat"]},
	{"name": "bot_kill", "type": "command", "help": "<bot id>.  Kills bot.", "flags": ["sv","cheat"]},
	{"name": "bot_look", "type": "cvar", "help": "When on, bot will look at what the player is looking.", "flags": ["sv","cheat"]},
	{"name": "bot_mimic", "type": "cvar", "help": "Bot uses usercmd of player by index.", "flags": ["sv"]},
	{"name": "bot_mimic_yaw_offset", "type": "cvar", "help": "Offsets the bot yaw.", "flags": ["sv"]},
	{"name": "bot_randomnames", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "bot_refill", "type": "command", "help": "Refill all bot ammo counts", "flags": ["sv","cheat"]},
	{"name": "bot_requestswap", "type": "cvar", "help": "Force bot to request swap weapon from player.", "flags": ["sv","cheat"]},
	{"name": "bot_selectweapon", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "bot_selectweaponslot", "type": "cvar", "help": "set to weapon slot that bot should switch to.", "flags": ["sv","cheat"]},
	{"name": "bot_selectweaponsubtype", "type": "cvar", "help": "set to weapon subtype that bot should switch to.", "flags": ["sv","cheat"]},
	{"name": "bot_taunt", "type": "cvar", "help": "Force all bots to repeatedly taunt.", "flags": ["sv","cheat"]},
	{"name": "bot_teleport", "type": "command", "help": "Teleport the specified bot to the specified position & angles.\n\tFormat: bot_teleport <bot name> <X> <Y> <Z> <Pitch> <Yaw> <Roll>", "flags": ["sv","cheat"]},
	{"name": "bot_throw", "type": "cvar", "help": "When on, bot will throw current weapon.", "flags": ["sv","cheat"]},
	{"name": "bounce_paint_color", "type": "cvar", "help": "Color for bounce paint", "flags": ["a","rep","cl"]},
	{"name": "bounce_paint_min_speed", "type": "cvar", "help": "For tweaking how high bounce paint launches the player.", "flags": ["cheat","rep","cl"]},
	{"name": "bounce_paint_wall_jump_upward_speed", "type": "cvar", "help": "The upward velocity added when bouncing off a wall", "flags": ["cheat","rep","cl"]},
	{"name": "box", "type": "command", "help": "Draw a debug box.", "flags": ["cheat"]},
	{"name": "+break", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-break", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "breakable_disable_gib_limit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "breakable_multiplayer", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "buddha", "type": "command", "help": "Toggle.  Player takes damage but won't die. (Shows red cross when health is zero). Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "budget_toggle_group", "type": "command", "help": "Turn a budget group on/off", "flags": []},
	{"name": "bug_swap", "type": "command", "help": "Automatically swaps the current weapon for the bug bait and back again.", "flags": ["sv","cheat"]},
	{"name": "bugbait_distract_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "bugbait_grenade_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "bugbait_hear_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "bugbait_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "buildambientcache", "type": "command", "help": "Stores ambient cache inside BSP", "flags": []},
	{"name": "buildcubemaps", "type": "command", "help": "Rebuild cubemaps.", "flags": []},
	{"name": "buildmodelforworld", "type": "command", "help": "buildmodelforworld", "flags": []},
	{"name": "bulletspeed", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "c_cam_ortho_height", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_cam_ortho_width", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_maxdistance", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_maxpitch", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_maxyaw", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_mindistance", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_minpitch", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_minyaw", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulder", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderaimdist", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderdist", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderheight", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderoffset", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cache_print", "type": "command", "help": "cache_print [section]\nPrint out contents of cache memory.", "flags": []},
	{"name": "cache_print_lru", "type": "command", "help": "cache_print_lru [section]\nPrint out contents of cache memory.", "flags": []},
	{"name": "cache_print_summary", "type": "command", "help": "cache_print_summary [section]\nPrint out a summary contents of cache memory.", "flags": []},
	{"name": "cam_collision", "type": "cvar", "help": "When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls.", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_command", "type": "command", "help": "Tells camera to change modes", "flags": ["cheat","cl"]},
	{"name": "cam_idealdist", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealdistright", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealdistup", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealpitch", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealyaw", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_ortho", "type": "command", "help": "Switch camera between orthographic and perspective view.", "flags": ["cheat","cl"]},
	{"name": "cam_showangles", "type": "cvar", "help": "When in thirdperson, print viewangles/idealangles/cameraoffsets to the console.", "flags": ["cheat","cl"]},
	{"name": "cam_smooth", "type": "cvar", "help": "Use smooth camera movement", "flags": ["a","cl"]},
	{"name": "cam_smooth_lag", "type": "cvar", "help": "Amount of lag used when matching offset to ideal angles when camera smoothing is enabled", "flags": ["a","cl"]},
	{"name": "cam_smooth_lag_delta", "type": "cvar", "help": "Controls the speed when matching offset to ideal angles when camera smoothing is enabled", "flags": ["a","cl"]},
	{"name": "-camdistance", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camdistance", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cameraman_override", "type": "cvar", "help": "Set to 1 when you're secondary cameraman and need to override the primary cameraman's observer target and mode", "flags": []},
	{"name": "-camin", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camin", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-cammousemove", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+cammousemove", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-camout", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camout", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-campitchdown", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+campitchdown", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-campitchup", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+campitchup", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camyawleft", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-camyawleft", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camyawright", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-camyawright", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "can_carry_both_guns", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "cancelselect", "type": "command", "help": "", "flags": ["server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "cast_hull", "type": "command", "help": "Tests hull collision detection", "flags": ["sv","cheat"]},
	{"name": "cast_ray", "type": "command", "help": "Tests collision detection", "flags": ["sv","cheat"]},
	{"name": "cast_ray_paint", "type": "command", "help": "Test paint", "flags": ["sv","cheat"]},
	{"name": "catapult_physics_drag_boost", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "cc_captiontrace", "type": "cvar", "help": "Show missing closecaptions (0 = no, 1 = devconsole, 2 = show in hud)", "flags": ["cl"]},
	{"name": "cc_emit", "type": "command", "help": "Emits a closed caption", "flags": ["cl"]},
	{"name": "cc_findsound", "type": "command", "help": "Searches for soundname which emits specified text.", "flags": ["cl"]},
	{"name": "cc_flush", "type": "command", "help": "Flushes async'd captions.", "flags": ["cl"]},
	{"name": "cc_lang", "type": "cvar", "help": "Current close caption language (emtpy = use game UI language)", "flags": ["a","cl"]},
	{"name": "cc_linger_time", "type": "cvar", "help": "Close caption linger time.", "flags": ["a","cl"]},
	{"name": "cc_minvisibleitems", "type": "cvar", "help": "Minimum number of caption items to show.", "flags": ["cl"]},
	{"name": "cc_norepeat", "type": "cvar", "help": "In multiplayer games, don't repeat captions more often than this many seconds.", "flags": ["sv"]},
	{"name": "cc_predisplay_time", "type": "cvar", "help": "Close caption delay before showing caption.", "flags": ["a","cl"]},
	{"name": "cc_random", "type": "command", "help": "Emits a random caption", "flags": ["cl"]},
	{"name": "cc_sentencecaptionnorepeat", "type": "cvar", "help": "How often a sentence can repeat.", "flags": ["cl"]},
	{"name": "cc_showblocks", "type": "command", "help": "Toggles showing which blocks are pending/loaded async.", "flags": ["cl"]},
	{"name": "cc_showmissing", "type": "cvar", "help": "Show missing closecaption entries.", "flags": ["rep","cl"]},
	{"name": "cc_subtitles", "type": "cvar", "help": "If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players).", "flags": ["a","cl"]},
	{"name": "centerview", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "ch_createairboat", "type": "command", "help": "Spawn airboat in front of the player.", "flags": ["sv","cheat"]},
	{"name": "ch_createjalopy", "type": "command", "help": "Spawn jalopy in front of the player.", "flags": ["sv","cheat"]},
	{"name": "ch_createjeep", "type": "command", "help": "Spawn jeep in front of the player.", "flags": ["sv","cheat"]},
	{"name": "change_paint_to", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "change_portalgun_linkage_id", "type": "command", "help": "Changes the portal linkage ID for the portal gun held by the commanding player. Give it three numbers to cycle through a range (low, high, increment)", "flags": ["sv","cheat"]},
	{"name": "changelevel", "type": "command", "help": "Change server to the specified map", "flags": ["norecord"]},
	{"name": "changelevel2", "type": "command", "help": "Transition to the specified map in single player", "flags": ["norecord"]},
	{"name": "cheap_captions_fadetime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cheap_captions_test", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "chet_debug_idle", "type": "cvar", "help": "If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info", "flags": ["a","sv"]},
	{"name": "choreo_spew_filter", "type": "cvar", "help": "Spew choreo. Use a sub-string or * to display all events.", "flags": ["rep","cl"]},
	{"name": "cl_aggregate_particles", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_allowdownload", "type": "cvar", "help": "Client downloads customization files", "flags": ["a"]},
	{"name": "cl_allowupload", "type": "cvar", "help": "Client uploads customization files", "flags": ["a"]},
	{"name": "cl_anglespeedkey", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_auto_taunt_pip", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_autowepswitch", "type": "cvar", "help": "Automatically switch to picked up weapons (if more powerful)", "flags": ["a","user","cl"]},
	{"name": "cl_backspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_blurClearAlpha", "type": "cvar", "help": "0-255, but 0 has errors at the moment", "flags": ["cl"]},
	{"name": "cl_blurDebug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_blurPasses", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_blurTapSize", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_bob", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_bobcycle", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_bobup", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_brushfastpath", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_burninggibs", "type": "cvar", "help": "A burning player that gibs has burning gibs.", "flags": ["cl"]},
	{"name": "cl_camera_follow_bone_index", "type": "cvar", "help": "Index of the bone to follow.  -2 == disabled.  -1 == root bone.  0+ is bone index.", "flags": ["cheat","cl"]},
	{"name": "cl_chat_active", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_chatfilters", "type": "cvar", "help": "Stores the chat filter settings ", "flags": ["a","cl"]},
	{"name": "cl_clear_input_on_load", "type": "cvar", "help": "Toggles clearing inputs on level load. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "cl_clearhinthistory", "type": "command", "help": "Clear memory of client side hints displayed to the player.", "flags": ["cl"]},
	{"name": "cl_clock_correction", "type": "cvar", "help": "Enable/disable clock correction on the client.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_adjustment_max_amount", "type": "cvar", "help": "Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_adjustment_max_offset", "type": "cvar", "help": "As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_adjustment_min_offset", "type": "cvar", "help": "If the clock offset is less than this amount (in milliseconds), then no clock correction is applied.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_force_server_tick", "type": "cvar", "help": "Force clock correction to match the server tick + this offset (-999 disables it).", "flags": ["cheat"]},
	{"name": "cl_clock_showdebuginfo", "type": "cvar", "help": "Show debugging info about the clock drift. ", "flags": ["cheat"]},
	{"name": "cl_clockdrift_max_ms", "type": "cvar", "help": "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.", "flags": ["cheat"]},
	{"name": "cl_clockdrift_max_ms_threadmode", "type": "cvar", "help": "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.", "flags": ["cheat"]},
	{"name": "cl_cmdrate", "type": "cvar", "help": "Max number of command packets sent to server per second", "flags": ["a","user"]},
	{"name": "cl_color", "type": "cvar", "help": "Preferred teammate color", "flags": ["a","user"]},
	{"name": "cl_colorfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_communitycoop_progress_throttle_rate", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_coop_ping_indicator_scale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_auto_entity", "type": "cvar", "help": "Automatically creates an env_cascade_light entity if it doesn't already exist.\n", "flags": ["sv"]},
	{"name": "cl_csm_auto_entity_maxshadowdistance", "type": "cvar", "help": "Sets the max shadow distance for the automatically created env_cascade_light.\n", "flags": ["sv"]},
	{"name": "cl_csm_capture_state", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_clear_captured_state", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_cull_small_prop_threshold_volume", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_2d", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_3d", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_culling", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_culling_cascade", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_render_ztest", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_vis_hi_range", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_vis_lo_range", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c0", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c1", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c2", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c3", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_disable_culling", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_enabled", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_entity_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_force_enable_displacements", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_force_no_csm_in_reflections", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_hack_proj_matrices_for_cull_debugging", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_ignore_disable_shadow_depth_rendering", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_max_shadow_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_max_visible_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_optimize_static_props", "type": "cvar", "help": "Enable/Disable optimal static prop rendering into CSM's (cull static props that make no visual contribution to shadows)", "flags": ["cl"]},
	{"name": "cl_csm_print_culling_planes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rope_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_override", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_x", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_y", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_z", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_server_status", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "cl_csm_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c0", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c1", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c2", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c3", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_sprite_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_static_prop_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_status", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_translucent_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_translucent_shadows_using_opaque_path", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_use_env_light_direction", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_use_forced_view_matrices", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_depthbias", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_farz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_max_shadow_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_max_visible_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_slopescaledepthbias", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viz_numplanes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viz_polyhedron_quad_size", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_world_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_world_shadows_in_viewmodelcascade", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_xlat_continuity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_customsounds", "type": "cvar", "help": "Enable customized player sound playback", "flags": ["cl"]},
	{"name": "cl_debug_paint_ammo_bar", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_debug_ugc_downloads", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_debugoverlaysthroughportals", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_debugrumble", "type": "cvar", "help": "Turn on rumble debugging spew", "flags": ["a","cl"]},
	{"name": "cl_decryptdata_key", "type": "cvar", "help": "Key to decrypt encrypted GOTV messages", "flags": []},
	{"name": "cl_decryptdata_key_pub", "type": "cvar", "help": "Key to decrypt public encrypted GOTV messages", "flags": []},
	{"name": "cl_demoviewoverride", "type": "cvar", "help": "Override view during demo playback", "flags": ["cl"]},
	{"name": "cl_detail_avoid_force", "type": "cvar", "help": "force with which to avoid players ( in units, percentage of the width of the detail sprite )", "flags": ["a","cl"]},
	{"name": "cl_detail_avoid_radius", "type": "cvar", "help": "radius around detail sprite to avoid players", "flags": ["a","cl"]},
	{"name": "cl_detail_avoid_recover_speed", "type": "cvar", "help": "how fast to recover position after avoiding players", "flags": ["a","cl"]},
	{"name": "cl_detail_max_sway", "type": "cvar", "help": "Amplitude of the detail prop sway", "flags": ["a","cl"]},
	{"name": "cl_detail_multiplier", "type": "cvar", "help": "extra details to create", "flags": ["cheat","cl"]},
	{"name": "cl_disable_ragdolls", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_disable_splitscreen_cpu_level_cfgs_in_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_disable_survey_panel", "type": "cvar", "help": "", "flags": ["a","rep","cl"]},
	{"name": "cl_disable_water_render_targets", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_download_demoplayer", "type": "cvar", "help": "Determines whether downloads of external resources are allowed during demo playback (0:no,1:workshop,2:all)", "flags": []},
	{"name": "cl_downloadfilter", "type": "cvar", "help": "Determines which files can be downloaded from the server (all, none, nosounds, mapsonly)", "flags": ["a"]},
	{"name": "cl_draw_airboat_wake", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_draw_gun_swap_indicator", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_draw_hud_ammo", "type": "cvar", "help": "Enable or disable drawing of the ammo hud element", "flags": ["cl"]},
	{"name": "cl_draw_hud_health", "type": "cvar", "help": "Draw or hide the health HUD element", "flags": ["cl"]},
	{"name": "cl_draw_hud_keypress", "type": "cvar", "help": "Draws the keypress UI element on the hud", "flags": ["a","cl"]},
	{"name": "cl_draw_only_deathnotices", "type": "cvar", "help": "For drawing only the crosshair and death notices (used for moviemaking)", "flags": ["cl"]},
	{"name": "cl_draw_paint_bomb_with_blobs", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_draw_player_model", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_draw_projected_wall_with_paint", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_drawhud", "type": "cvar", "help": "Enable the rendering of the hud", "flags": ["cheat","cl"]},
	{"name": "cl_drawhud_force_deathnotices", "type": "cvar", "help": "0: default; 1: draw deathnotices even if hud disabled; -1: force no deathnotices", "flags": ["cl"]},
	{"name": "cl_drawhud_specvote", "type": "cvar", "help": "1: default; 0: disables vote UI for spectators", "flags": ["cl"]},
	{"name": "cl_drawleaf", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_drawmaterial", "type": "cvar", "help": "Draw a particular material over the frame", "flags": ["cheat","cl"]},
	{"name": "cl_drawmonitors", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_drawshadowtexture", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_dump_entity_factories", "type": "command", "help": "Lists all client entity factory names.", "flags": ["cl"]},
	{"name": "cl_dump_entity_namespaces", "type": "command", "help": "Lists all client entity namespaces.", "flags": ["cl"]},
	{"name": "cl_dump_entity_sizes", "type": "command", "help": "Print sizeof(entclass)", "flags": ["cl"]},
	{"name": "cl_dump_particle_stats", "type": "command", "help": "dump particle profiling info to particle_profile.csv", "flags": ["cl"]},
	{"name": "cl_dumpsplithacks", "type": "command", "help": "Dump split screen workarounds.", "flags": ["cl"]},
	{"name": "cl_ejectbrass", "type": "cvar", "help": "Whether or not to eject brass from weapons", "flags": ["a","cl"]},
	{"name": "cl_enable_remote_splitscreen", "type": "cvar", "help": "Allows viewing of nonlocal players in a split screen fashion", "flags": ["cl"]},
	{"name": "cl_energy_ball_start_fade_time", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_ent_absbox", "type": "command", "help": "Displays the client's absbox for the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_ent_bbox", "type": "command", "help": "Displays the client's bounding box for the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_ent_rbox", "type": "command", "help": "Displays the client's render box for the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_entityreport", "type": "cvar", "help": "For debugging, draw entity states to console", "flags": ["cheat"]},
	{"name": "cl_extrapolate", "type": "cvar", "help": "Enable/disable extrapolation if interpolation history runs out.", "flags": ["cheat","cl"]},
	{"name": "cl_extrapolate_amount", "type": "cvar", "help": "Set how many seconds the client will extrapolate entities for.", "flags": ["cheat","cl"]},
	{"name": "cl_fastdetailsprites", "type": "cvar", "help": "whether to use new detail sprite system", "flags": ["cheat","cl"]},
	{"name": "cl_fasttempentcollision", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_find_ent", "type": "command", "help": "Find and list all client entities with classnames that contain the specified substring.\nFormat: cl_find_ent <substring>\n", "flags": ["cheat","cl"]},
	{"name": "cl_find_ent_index", "type": "command", "help": "Display data for clientside entity matching specified index.\nFormat: cl_find_ent_index <index>\n", "flags": ["cheat","cl"]},
	{"name": "cl_flushentitypacket", "type": "cvar", "help": "For debugging. Force the engine to flush an entity packet.", "flags": ["cheat"]},
	{"name": "cl_footer_no_auto_shrink", "type": "cvar", "help": "Prevents shrinking the font when it would wrap.", "flags": ["cl"]},
	{"name": "cl_footer_no_auto_wrap", "type": "cvar", "help": "Prevents shrinking the font when it would wrap.", "flags": ["cl"]},
	{"name": "cl_forcepreload", "type": "cvar", "help": "Whether we should force preloading.", "flags": ["a"]},
	{"name": "cl_forwardspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_foundry_ShowEntityHighlights", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_fov", "type": "cvar", "help": "Client-side fov control that is global for all splitscreen players on this machine.  This gets overriden via splitscreen_config.txt for splitscreen.", "flags": ["cl"]},
	{"name": "cl_fullupdate", "type": "command", "help": "Forces the server to send a full update packet", "flags": ["cheat"]},
	{"name": "cl_group_paint_impact_effects", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "cl_headbob_amp", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_headbob_freq", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_headbob_land_dip_amt", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_hide_avatar_images", "type": "cvar", "help": "Hide avatar images for other players. \n\t0 - Off.\n\t1 - Block All\n\t2 - Block all but friends", "flags": ["a","cl"]},
	{"name": "cl_hideserverip", "type": "cvar", "help": "If set to 1, server IPs will be hidden in the console (except when you type 'status')", "flags": []},
	{"name": "cl_hud_background_alpha", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_hud_color", "type": "cvar", "help": "0 = default, 1 = light blue, 2 = orange, 3 = green, 4 = purple, 5 = white.", "flags": ["a","cl"]},
	{"name": "cl_hud_healthammo_style", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_hud_paint_gun_powers_indicator_show_current", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_idealpitchscale", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_ignore_vpk_assocation", "type": "cvar", "help": "Do not ask to set vpk assocation", "flags": ["a","cl"]},
	{"name": "cl_ignorepackets", "type": "cvar", "help": "Force client to ignore packets (for debugging).", "flags": ["cheat"]},
	{"name": "cl_interp", "type": "cvar", "help": "Sets the interpolation amount (bounded on low side by server interp ratio settings).", "flags": ["user","cl"]},
	{"name": "cl_interp_all", "type": "cvar", "help": "Disable interpolation list optimizations.", "flags": ["cl"]},
	{"name": "cl_interp_npcs", "type": "cvar", "help": "Interpolate NPC positions starting this many seconds in past (or cl_interp, if greater)", "flags": ["cl"]},
	{"name": "cl_interp_ratio", "type": "cvar", "help": "Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).", "flags": ["user","cl"]},
	{"name": "cl_interp_watch", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_interpolate", "type": "cvar", "help": "Enables or disables interpolation on listen servers or during demo playback", "flags": []},
	{"name": "cl_jiggle_bone_debug", "type": "cvar", "help": "Display physics-based 'jiggle bone' debugging information", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_debug_pitch_constraints", "type": "cvar", "help": "Display physics-based 'jiggle bone' debugging information", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_debug_yaw_constraints", "type": "cvar", "help": "Display physics-based 'jiggle bone' debugging information", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_invert", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_sanity", "type": "cvar", "help": "Prevent jiggle bones from pointing directly away from their target in case of numerical instability.", "flags": ["cl"]},
	{"name": "cl_join_advertise", "type": "cvar", "help": "Advertise joinable game in progress to Steam friends, otherwise need a Steam invite (2: all servers, 1: official servers, 0: none)", "flags": ["a","cl"]},
	{"name": "cl_lagcomp_errorcheck", "type": "cvar", "help": "Player index of other player to check for position errors.", "flags": ["cl"]},
	{"name": "cl_lagcompensation", "type": "cvar", "help": "Perform server side lag compensation of weapon firing events.", "flags": ["user","cl"]},
	{"name": "cl_leafsystemvis", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_leveloverview", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_leveloverviewmarker", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_lock_camera", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_maxrenderable_dist", "type": "cvar", "help": "Max distance from the camera at which things will be rendered", "flags": ["cheat","cl"]},
	{"name": "cl_minimal_rtt_shadows", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_mirror_world", "type": "cvar", "help": "Enable mirroring the appearance of the game world", "flags": ["cl"]},
	{"name": "cl_modelfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_modemanager_reload", "type": "command", "help": "Reloads the panel metaclasses for vgui screens.", "flags": ["cl"]},
	{"name": "cl_mouseenable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_mouseenable_buttons", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_mouselook", "type": "cvar", "help": "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server.", "flags": ["a","cl","ss"]},
	{"name": "cl_mouselook2", "type": "cvar", "help": "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server.", "flags": ["a","cl","ss_added"]},
	{"name": "cl_mouselook_roll_compensation", "type": "cvar", "help": "In Portal and Paint, if your view is being rolled, compensate for that. So mouse movements are always relative to the screen.", "flags": ["cl"]},
	{"name": "cl_mute_all_but_friends_and_party", "type": "cvar", "help": "Only allow communication from friends and matchmaking party members. Doesn't apply to competitive matchmaking games.", "flags": ["a","cl"]},
	{"name": "cl_mute_enemy_team", "type": "cvar", "help": "Block all communication from players on the enemy team.", "flags": ["a","cl"]},
	{"name": "cl_npc_speedmod_intime", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_npc_speedmod_outtime", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_observercrosshair", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_overdraw_test", "type": "cvar", "help": "", "flags": ["cheat","numeric","cl"]},
	{"name": "cl_paintable_projected_wall_texture_wrap_rate", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_panelanimation", "type": "command", "help": "Shows panel animation variables: <panelname | blank for all panels>.", "flags": ["cl"]},
	{"name": "cl_particle_batch_mode", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_particle_fallback_base", "type": "cvar", "help": "Base for falling back to cheaper effects under load.", "flags": ["cl"]},
	{"name": "cl_particle_fallback_multiplier", "type": "cvar", "help": "Multiplier for falling back to cheaper effects under load.", "flags": ["cl"]},
	{"name": "cl_particle_max_count", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_particle_retire_cost", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_particle_sim_fallback_base_multiplier", "type": "cvar", "help": "How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is.  Higher numbers are more aggressive.", "flags": ["cl"]},
	{"name": "cl_particle_sim_fallback_threshold_ms", "type": "cvar", "help": "Amount of simulation time that can elapse before new systems start falling back to cheaper versions", "flags": ["cl"]},
	{"name": "cl_particles_dump_effects", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cl_particles_dump_json", "type": "command", "help": "Dumps particle operators to a JSON file", "flags": ["cheat","cl"]},
	{"name": "cl_particles_dumplist", "type": "command", "help": "Dump all new particles, optional name substring.", "flags": ["cheat","cl"]},
	{"name": "cl_particles_show_bbox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_particles_show_controlpoints", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_pclass", "type": "cvar", "help": "Dump entity by prediction classname.", "flags": ["cheat","cl"]},
	{"name": "cl_pdump", "type": "cvar", "help": "Dump info about this entity to screen.", "flags": ["cheat","cl"]},
	{"name": "cl_phys_block_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_phys_block_fraction", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_phys_maxticks", "type": "cvar", "help": "Sets the max number of physics ticks allowed for client-side physics (ragdolls)", "flags": ["cl"]},
	{"name": "cl_phys_show_active", "type": "cvar", "help": "Shows all active vphysics objects on client.\n", "flags": ["cheat","cl"]},
	{"name": "cl_phys_show_collision", "type": "cvar", "help": "Shows all vphysics object collision as wireframes on client.\n", "flags": ["cheat","cl"]},
	{"name": "cl_phys_show_shadows", "type": "cvar", "help": "Shows all vphysics object shadows on client.\n", "flags": ["cheat","cl"]},
	{"name": "cl_phys_timescale", "type": "cvar", "help": "Sets the scale of time for client-side physics (ragdolls)", "flags": ["cheat","cl"]},
	{"name": "cl_physicsshadowupdate_render", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_pitchdown", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_pitchdown2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "cl_pitchspeed", "type": "cvar", "help": "Client pitch speed.", "flags": ["cl"]},
	{"name": "cl_pitchup", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_pitchup2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "cl_playback_screenshots", "type": "cvar", "help": "Allows the client to playback screenshot and jpeg commands in demos.", "flags": []},
	{"name": "cl_player_fullupdate_predicted_origin_fix", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_player_render_in_reflection_view", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_player_render_in_shadows_view", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_playeranimstate_transitions", "type": "cvar", "help": "Enable transitions on animstate sequence changes", "flags": ["cl"]},
	{"name": "cl_playermodel", "type": "cvar", "help": "Default Player Model", "flags": ["a","user","server_can_execute","cl"]},
	{"name": "cl_playtest_enabled", "type": "cvar", "help": "Enables the playtest system, this is used to record user consent", "flags": ["a","cl"]},
	{"name": "cl_portal_alternate_colors", "type": "cvar", "help": "Enables custom portal colors in single player", "flags": ["a","cl"]},
	{"name": "cl_portal_camera_orientation_acceleration_rate", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portal_camera_orientation_max_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portal_camera_orientation_rate", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portal_camera_orientation_rate_base", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portal_cleanser_default_intensity", "type": "cvar", "help": "The default intensity of the cleanser field effect.", "flags": ["cl"]},
	{"name": "cl_portal_cleanser_powerup_time", "type": "cvar", "help": "The amount of time the power up sequence takes to complete.", "flags": ["cl"]},
	{"name": "cl_portal_cleanser_scanline", "type": "cvar", "help": "Use particle scanline.", "flags": ["cl"]},
	{"name": "cl_portal_cleanser_shot_pulse_intensity", "type": "cvar", "help": "The intensity of the cleanser field when it gets shot at.", "flags": ["cl"]},
	{"name": "cl_portal_cleanser_shot_pulse_time", "type": "cvar", "help": "The amount of time to pulse the cleanser field for when it is shot at.", "flags": ["cl"]},
	{"name": "cl_portal_crosshair_mode", "type": "cvar", "help": "0: Portal 2 mode (Filled when portal is placed), 1: Portal 1 mode (Filled when portal is placeable)", "flags": ["a","cl"]},
	{"name": "cl_portal_crosshair_scale", "type": "cvar", "help": "Scale the crosshair by this amount", "flags": ["a","cl"]},
	{"name": "cl_portal_ghost_use_render_bound", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portal_projectile_delay_mp", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_portal_projectile_delay_sp", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_portal_sp_primary_color", "type": "cvar", "help": "Sets the primary (left) portal color of the SP player (Default is blue)\n", "flags": ["a","cl"]},
	{"name": "cl_portal_sp_secondary_color", "type": "cvar", "help": "Sets the secondary (right) portal color of the SP player (Default is orange)\n", "flags": ["a","cl"]},
	{"name": "cl_portal_teleportation_interpolation_fixup_method", "type": "cvar", "help": "0 = transform history only, 1 = insert discontinuity transform", "flags": ["cl"]},
	{"name": "cl_portal_use_new_dissolve", "type": "cvar", "help": "Use new dissolve effect", "flags": ["cheat","cl"]},
	{"name": "cl_portalgun_beam_size", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portalgun_effects_max_alpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portalgun_effects_min_alpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portalgun_effects_min_size", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_precacheinfo", "type": "command", "help": "Show precache info (client).", "flags": []},
	{"name": "cl_pred_doresetlatch", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_pred_error_verbose", "type": "cvar", "help": "Show more field info when spewing prediction errors.", "flags": ["cl"]},
	{"name": "cl_pred_optimize", "type": "cvar", "help": "Optimize for not copying data if didn't receive a network update (1), and also for not repredicting if there were no errors (2).", "flags": ["cl"]},
	{"name": "cl_pred_track", "type": "command", "help": "<entindex> <fieldname>:  Track changes to entity index entindex, for field fieldname.", "flags": ["cl"]},
	{"name": "cl_predict", "type": "cvar", "help": "Perform client side prediction.", "flags": ["user","cl"]},
	{"name": "cl_predict_basetoggles", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predict_catapults", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predict_motioncontrol", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predict_portal_placement", "type": "cvar", "help": "Controls whether we attempt to compensate for lag by predicting portal placement on the client when playing multiplayer.", "flags": ["cl"]},
	{"name": "cl_predict_projected_entities", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predicted_movement_uses_uninterpolated_physics", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_prediction_error_timestamps", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predictioncopy_describe", "type": "command", "help": "Describe datamap_t for entindex", "flags": ["cl"]},
	{"name": "cl_predictionlist", "type": "cvar", "help": "Show which entities are predicting\n", "flags": ["cheat","cl"]},
	{"name": "cl_predictphysics", "type": "cvar", "help": "Use a prediction-friendly physics interface on the client", "flags": ["cl"]},
	{"name": "cl_predictweapons", "type": "cvar", "help": "Perform client side prediction of weapon effects.", "flags": ["user","cl"]},
	{"name": "cl_projected_wall_projection_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_projectedbridge_aabbhack", "type": "cvar", "help": "When predicting projected bridges, the spatial partition AABB encompasses all AABB's for outstanding collideables", "flags": ["cl"]},
	{"name": "cl_quick_join_panel_accel", "type": "cvar", "help": "Acceleration for the y position of the panel when items are added or removed.", "flags": ["cl"]},
	{"name": "cl_quick_join_panel_fakecount", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_quick_join_panel_tall", "type": "cvar", "help": "The spacing between panels.", "flags": ["cl"]},
	{"name": "cl_quick_join_scroll_max", "type": "cvar", "help": "Max players shown in the friend scrolling ticker.", "flags": ["cl"]},
	{"name": "cl_quick_join_scroll_offset", "type": "cvar", "help": "Offset of the friend scrolling ticker from the title.", "flags": ["cl"]},
	{"name": "cl_quick_join_scroll_rate", "type": "cvar", "help": "Rate of the friend scrolling ticker.", "flags": ["cl"]},
	{"name": "cl_quick_join_scroll_start", "type": "cvar", "help": "Number of players available to start friend scrolling ticker.", "flags": ["cl"]},
	{"name": "cl_race_checkpoint_active_color", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_race_checkpoint_inactive_color", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_ragdoll_collide", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_ragdoll_gravity", "type": "cvar", "help": "Sets the gravity client-side ragdolls", "flags": ["cheat","cl"]},
	{"name": "cl_remove_old_ugc_downloads", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_removedecals", "type": "command", "help": "Remove the decals from the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_report_soundpatch", "type": "command", "help": "reports client-side sound patch count", "flags": ["cl"]},
	{"name": "cl_resend", "type": "cvar", "help": "Delay in seconds before the client will resend the 'connect' attempt", "flags": []},
	{"name": "cl_resetportalledplayerinterp", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_retire_low_priority_lights", "type": "cvar", "help": "Low priority dlights are replaced by high priority ones", "flags": []},
	{"name": "cl_richpresence_enable", "type": "cvar", "help": "Enables the rich presence system.", "flags": ["a"]},
	{"name": "cl_richpresence_test_update", "type": "command", "help": "Immediately updates the rich presence status", "flags": []},
	{"name": "cl_righthand", "type": "cvar", "help": "Use right-handed view models. 1 = ON, 0 = OFF.\n", "flags": ["a","cl","ss"]},
	{"name": "cl_righthand2", "type": "cvar", "help": "Use right-handed view models. 1 = ON, 0 = OFF.\n", "flags": ["a","cl","ss_added"]},
	{"name": "cl_rosette_debug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_rosette_gamepad_expand_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_rosette_gamepad_lockin_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_rosette_line_inner_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_rosette_line_outer_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_rumblescale", "type": "cvar", "help": "Scale sensitivity of rumble effects (0 to 1.0)", "flags": ["a","cl","ss"]},
	{"name": "cl_rumblescale2", "type": "cvar", "help": "Scale sensitivity of rumble effects (0 to 1.0)", "flags": ["a","cl","ss_added"]},
	{"name": "cl_sanitize_player_names", "type": "cvar", "help": "Replace names of other players with something non-offensive.", "flags": ["a","cl"]},
	{"name": "cl_screenshotname", "type": "cvar", "help": "Custom Screenshot name", "flags": []},
	{"name": "cl_script_dump_docs", "type": "command", "help": "Dump server VScript docs", "flags": ["norecord","cl"]},
	{"name": "cl_SetupAllBones", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_shadowtextureoverlaysize", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_shadowupdatespacing", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_show_bounds_errors", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_show_splashes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_show_usermessage", "type": "cvar", "help": "Shows the incoming user messages for this client and dumps them out the type and size of the messages to the console. Setting this to 2 will display message contents as well", "flags": ["cl"]},
	{"name": "cl_showanimstate", "type": "cvar", "help": "Show the (client) animation state for the specified entity (-1 for none).", "flags": ["cheat","cl"]},
	{"name": "cl_showanimstate_activities", "type": "cvar", "help": "Show activities in the (client) animation state display.", "flags": ["cheat","cl"]},
	{"name": "cl_showanimstate_log", "type": "cvar", "help": "1 to output cl_showanimstate to Msg(). 2 to store in AnimStateClient.log. 3 for both.", "flags": ["cheat","cl"]},
	{"name": "cl_showbattery", "type": "cvar", "help": "Draw current battery level at top of screen when on battery power", "flags": ["cl"]},
	{"name": "cl_showbonecounts", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_ShowBoneSetupEnts", "type": "cvar", "help": "Show which entities are having their bones setup each frame.", "flags": ["cl"]},
	{"name": "cl_showcomplexfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_showdemooverlay", "type": "cvar", "help": "How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)", "flags": []},
	{"name": "cl_showents", "type": "command", "help": "Dump entity list to console.", "flags": ["cheat"]},
	{"name": "cl_showerror", "type": "cvar", "help": "Show prediction errors, 2 for above plus detailed field deltas.", "flags": ["cl"]},
	{"name": "cl_showevents", "type": "cvar", "help": "Print event firing info in the console", "flags": ["cheat"]},
	{"name": "cl_showfps", "type": "cvar", "help": "Show FPS meter (1 = fps, 2 = average, 3 = server)", "flags": ["cl"]},
	{"name": "cl_showfps5_btlneck_disp_time", "type": "cvar", "help": "Time interval (s) for which main/render/gpu bottleneck times are displayed", "flags": ["cl"]},
	{"name": "cl_showfps5_disp_time", "type": "cvar", "help": "Time interval (s) at which thread and wait times are sampled and display is updated", "flags": ["cl"]},
	{"name": "cl_showfps_updatefps", "type": "cvar", "help": "The speed (FPS) of the showfps label update.\n", "flags": ["a","cl"]},
	{"name": "cl_showhelp", "type": "cvar", "help": "Set to 0 to not show on-screen help", "flags": ["a","cl"]},
	{"name": "cl_showpausedimage", "type": "cvar", "help": "Show the 'Paused' image when game is paused.", "flags": ["cl"]},
	{"name": "cl_showpos", "type": "cvar", "help": "Shows current position of player. (1 = Main view (render position), 2 = Abs position", "flags": ["cl"]},
	{"name": "cl_ShowSunVectors", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_showtextmsg", "type": "cvar", "help": "Enable/disable text messages printing on the screen.", "flags": ["cl"]},
	{"name": "cl_sidespeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_simdbones", "type": "cvar", "help": "Use SIMD bone setup.", "flags": ["rep","cl"]},
	{"name": "cl_skip_player_render_in_main_view", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_skipfastpath", "type": "cvar", "help": "Set to 1 to stop all models that go through the model fast path from rendering", "flags": ["cheat","cl"]},
	{"name": "cl_skipslowpath", "type": "cvar", "help": "Set to 1 to skip any models that don't go through the model fast path", "flags": ["cheat"]},
	{"name": "cl_smooth", "type": "cvar", "help": "Smooth view/eye origin after prediction errors", "flags": ["cl"]},
	{"name": "cl_smoothtime", "type": "cvar", "help": "Smooth client's view after prediction error over this many seconds", "flags": ["cl"]},
	{"name": "cl_soundemitter_flush", "type": "command", "help": "Flushes the sounds.txt system (client only)", "flags": ["cheat","cl"]},
	{"name": "cl_soundemitter_reload", "type": "command", "help": "Flushes the sounds.txt system", "flags": ["cheat","cl"]},
	{"name": "cl_soundscape_flush", "type": "command", "help": "Flushes the client side soundscapes", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "cl_soundscape_printdebuginfo", "type": "command", "help": "print soundscapes", "flags": []},
	{"name": "cl_spec_mode", "type": "cvar", "help": "spectator mode", "flags": ["user","server_can_execute","cl"]},
	{"name": "cl_spewscriptintro", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "cl_sporeclipdistance", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_ss_origin", "type": "command", "help": "print origin in script format", "flags": []},
	{"name": "cl_starfield_diameter", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_starfield_distance", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_sun_decay_rate", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_sun_in_reflection_h_scale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_sun_in_reflection_v_scale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_sunlight_depthbias", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_sunlight_ortho_size", "type": "cvar", "help": "Set to values greater than 0 for ortho view render projections.", "flags": ["cheat","cl"]},
	{"name": "cl_support_vpk_assocation", "type": "cvar", "help": "Whether vpk associations are enabled for this mod", "flags": ["a","cl"]},
	{"name": "cl_survey_panel_dont_submit_answers", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_taunt_finish_rotate_cam", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_taunt_finish_speed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_teamid", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_teammate_color_1", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_2", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_3", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_4", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_5", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_threaded_bone_setup", "type": "cvar", "help": "Enable parallel processing of bones", "flags": ["cl"]},
	{"name": "cl_timeout", "type": "cvar", "help": "After this many seconds without receiving a packet from the server, the client will disconnect itself", "flags": ["a"]},
	{"name": "cl_tlucfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_tracer_whiz_distance", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_tree_sway_dir", "type": "command", "help": "sets tree sway wind direction and strength", "flags": ["cl"]},
	{"name": "cl_updaterate", "type": "cvar", "help": "Number of packets per second of updates you are requesting from the server", "flags": ["a","user"]},
	{"name": "cl_updatevisibility", "type": "command", "help": "Updates visibility bits.", "flags": ["cl"]},
	{"name": "cl_upspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_use_new_headbob", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_use_simd_bones", "type": "cvar", "help": "1 use SIMD bones 0 use scalar bones.", "flags": ["rep","cl"]},
	{"name": "cl_useoldswapportalvisibilitycode", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_vertical_elevator_fix", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_view", "type": "command", "help": "Set the view entity index.", "flags": ["cheat"]},
	{"name": "cl_viewmodelsclonedasworld", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_voice_buffer_time", "type": "cvar", "help": "Amount of time between receiving voice data and playing the audio", "flags": []},
	{"name": "cl_voice_filter", "type": "cvar", "help": "Filter voice by name substring", "flags": []},
	{"name": "cl_winddir", "type": "cvar", "help": "Weather effects wind direction angle", "flags": ["cheat","cl"]},
	{"name": "cl_windspeed", "type": "cvar", "help": "Weather effects wind speed scalar", "flags": ["cheat","cl"]},
	{"name": "cl_wpn_sway_interp", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_wpn_sway_scale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_yawspeed", "type": "cvar", "help": "Client yaw speed.", "flags": ["a","cl"]},
	{"name": "clear", "type": "command", "help": "Clear all console output.", "flags": ["norecord"]},
	{"name": "clear_anim_cache", "type": "command", "help": "Clears the animation cache, freeing the memory (until the next time a streaming animblock is requested).", "flags": []},
	{"name": "clear_debug_overlays", "type": "command", "help": "clears debug overlays", "flags": ["sv"]},
	{"name": "clientport", "type": "cvar", "help": "Host game client port", "flags": []},
	{"name": "closecaption", "type": "cvar", "help": "Enable close captioning.", "flags": ["a"]},
	{"name": "cloth_wind", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cloth_wind_pitch", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cloth_windage_multiplier", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cm_community_debug_spew", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cm_filter_quickplay_with_history", "type": "cvar", "help": "Tells the client if it should filter maps in QuickPlay mode with history queue.", "flags": ["cheat","cl"]},
	{"name": "cm_fix_orphaned_files", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cm_leaderboard_popup_enable", "type": "cvar", "help": "Enable the leaderboard popup at the beginning of a CM level.", "flags": ["sv"]},
	{"name": "cm_max_history_chambers", "type": "cvar", "help": "How many maps to load before the history queue is full. Raising this value may cause slow start-up", "flags": ["a","cl"]},
	{"name": "cm_max_quickplay_maps", "type": "cvar", "help": "How many maps to load before the quick play queue is full and ready to go. Can be no larger than 50", "flags": ["a","cl"]},
	{"name": "cm_open_vote_dialog", "type": "command", "help": "Opens the map voting dialog for testing purposes", "flags": ["cl"]},
	{"name": "cm_play_intro_video", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cm_reset_vo_progress", "type": "command", "help": "Reset the progress of the PeTI storyline.", "flags": ["cl"]},
	{"name": "cmd", "type": "command", "help": "Forward command to server.", "flags": []},
	{"name": "cmd1", "type": "command", "help": "sets userinfo string for split screen player in slot 1", "flags": []},
	{"name": "cmd2", "type": "command", "help": "sets userinfo string for split screen player in slot 2", "flags": []},
	{"name": "cmd3", "type": "command", "help": "sets userinfo string for split screen player in slot 3", "flags": []},
	{"name": "cmd4", "type": "command", "help": "sets userinfo string for split screen player in slot 4", "flags": []},
	{"name": "collision_shake_amp", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "collision_shake_freq", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "collision_shake_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "collision_test", "type": "command", "help": "Tests collision system", "flags": ["sv","cheat"]},
	{"name": "colorcorrectionui", "type": "command", "help": "Show/hide the color correction tools UI.", "flags": ["cheat"]},
	{"name": "combine_guard_spawn_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_spawn_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_goaldist_max", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_goaldist_min", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_hopdist_min", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_noreload_dist_max", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_toss_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_toss_delay2", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "combine_teleport_toss_height", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "commentary", "type": "cvar", "help": "Desired commentary mode state.", "flags": ["sv"]},
	{"name": "commentary_available", "type": "cvar", "help": "Automatically set by the game when a commentary file is available for the current map.", "flags": ["sv"]},
	{"name": "commentary_cvarsnotchanging", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "commentary_finishnode", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "commentary_showmodelviewer", "type": "command", "help": "Display the commentary model viewer. Usage: commentary_showmodelviewer <model name> <optional attached model name>", "flags": ["cl"]},
	{"name": "con_allownotify", "type": "cvar", "help": "Allows the notification area to be visible.", "flags": ["a"]},
	{"name": "con_backtick_always_closes", "type": "cvar", "help": "Pressing backtick (`) will always close the console if it is open.", "flags": ["a"]},
	{"name": "con_drawnotify", "type": "cvar", "help": "Disables drawing of notification area (for taking screenshots).", "flags": []},
	{"name": "con_enable", "type": "cvar", "help": "Allows the console to be activated.", "flags": ["a"]},
	{"name": "con_filter_enable", "type": "cvar", "help": "Filters console output based on the setting of con_filter_text. 1 filters completely, 2 displays filtered text brighter than other text.", "flags": []},
	{"name": "con_filter_text", "type": "cvar", "help": "Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.", "flags": []},
	{"name": "con_filter_text_out", "type": "cvar", "help": "Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate.", "flags": []},
	{"name": "con_log_channel_mode", "type": "cvar", "help": "0 = No prefix, 1 = channel name, 2 = module name", "flags": ["a"]},
	{"name": "con_log_color_default", "type": "cvar", "help": "Sets the color for informational console messages.", "flags": ["a"]},
	{"name": "con_log_color_warning", "type": "cvar", "help": "Sets the color for warning console messages.", "flags": ["a"]},
	{"name": "con_log_severity_mode", "type": "cvar", "help": "Enables [<severity>] prefixes on console messages", "flags": ["a"]},
	{"name": "con_logfile", "type": "cvar", "help": "Console output gets written to this file", "flags": []},
	{"name": "con_max_displayed_entries_notify", "type": "cvar", "help": "Sets how many lines of console output are preserved in the hud notify area.\nSetting the value too high may impact performance.\nThis will not clear existing messages if reduced.\n", "flags": ["a","cl"]},
	{"name": "con_max_displayed_entries_panel", "type": "cvar", "help": "Sets how many lines of console output are preserved in the panel.\nSetting the value too high may impact performance.\nThis will not clear existing messages if reduced.\n", "flags": ["a","cl"]},
	{"name": "con_max_history", "type": "cvar", "help": "How many past submitted entries the console should save.", "flags": ["a","cl"]},
	{"name": "con_min_accumulate_length", "type": "cvar", "help": "Sets the minimum length an output line needs to have to be accumulated if repeated\nSpecify 0 to always merge and set -1 to never merge.\n", "flags": ["a","cl"]},
	{"name": "con_min_severity", "type": "command", "help": "Minimum severity level for messages sent to any logging channel: LS_MESSAGE=0, LS_WARNING=1, LS_ASSERT=2, LS_ERROR=3, LS_PANIC=4.", "flags": ["norecord","clientcmd_can_execute"]},
	{"name": "con_notifytime", "type": "cvar", "help": "How long to display recent console text to the upper part of the game window", "flags": []},
	{"name": "con_nprint_bgalpha", "type": "cvar", "help": "Con_NPrint background alpha.", "flags": []},
	{"name": "con_nprint_bgborder", "type": "cvar", "help": "Con_NPrint border size.", "flags": []},
	{"name": "con_timestamp", "type": "cvar", "help": "Prefix console.log entries with timestamps", "flags": []},
	{"name": "condump", "type": "command", "help": "dump the text currently in the console to condumpXX.log", "flags": ["cl"]},
	{"name": "connect", "type": "command", "help": "Connect to specified server.", "flags": ["norecord"]},
	{"name": "console_history_size", "type": "cvar", "help": "", "flags": []},
	{"name": "contimes", "type": "cvar", "help": "Number of console lines to overlay for debugging.", "flags": []},
	{"name": "coop", "type": "cvar", "help": "Cooperative play.", "flags": ["nf"]},
	{"name": "coop_grab_use_vm", "type": "cvar", "help": "Use viewmodel grab when in coop gameplay", "flags": ["sv"]},
	{"name": "coop_impact_velocity_threshold", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "-coop_ping", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+coop_ping", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cpu_level", "type": "cvar", "help": "CPU Level - Default: High", "flags": []},
	{"name": "cpu_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "cpu_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "crash", "type": "command", "help": "Cause the engine to crash (Debug!!)", "flags": ["cheat","norecord"]},
	{"name": "create_flashlight", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "create_volumetric", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "creditsdone", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "crosshair", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "csm_quality_level", "type": "cvar", "help": "Cascaded shadow map quality level, [0,3], 0=VERY_LOW, 3=HIGHEST", "flags": []},
	{"name": "csm_quality_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "csm_quality_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "-csm_rot_x_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_x_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_x_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-csm_rot_x_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_y_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-csm_rot_y_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-csm_rot_y_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_y_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "curve_bias", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "cvar_dump", "type": "command", "help": "Dump ConVar list", "flags": []},
	{"name": "cvarlist", "type": "command", "help": "Show the list of convars/concommands.", "flags": []},
	{"name": "darkness_ignore_LOS_to_sources", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "das_max_z_trace_length", "type": "cvar", "help": "Maximum height of player and still test for adsp", "flags": []},
	{"name": "das_process_overhang_spaces", "type": "cvar", "help": "", "flags": []},
	{"name": "datacachesize", "type": "cvar", "help": "Size in MB.", "flags": []},
	{"name": "dbg_demofile", "type": "cvar", "help": "", "flags": []},
	{"name": "dbg_spike", "type": "command", "help": "generates a fake spike", "flags": ["cheat","norecord"]},
	{"name": "deathmatch", "type": "cvar", "help": "Running a deathmatch server.", "flags": ["nf"]},
	{"name": "debug_dispatch_server_dump", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_drawbox", "type": "command", "help": "Create debug box", "flags": ["cheat"]},
	{"name": "debug_drawdisp_boundbox", "type": "command", "help": "Create debug boxes for invalid displacements", "flags": ["cheat"]},
	{"name": "debug_fixmyposition", "type": "command", "help": "Runs FindsClosestPassableSpace() on player.", "flags": ["sv","cheat"]},
	{"name": "debug_map_crc", "type": "cvar", "help": "Prints CRC for each map lump loaded", "flags": []},
	{"name": "debug_materialmodifycontrol", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_materialmodifycontrol_client", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "debug_overlay_fullposition", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_paint_client_blobs", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "debug_paint_impact_effects", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "debug_paint_sprayer_cone", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "debug_paintable_projected_wall", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "debug_paintbomb_explosion", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "debug_physimpact", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_pitch_limit", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "debug_player_paint_shoot_pos", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_projected_wall_drawing", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "debug_touchlinks", "type": "cvar", "help": "Spew touch link activity", "flags": ["sv"]},
	{"name": "debug_viewmodel_grabcontroller", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "debug_visibility_monitor", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "debugportalcollideables", "type": "command", "help": "Dump all CPhysCollides for all portals to the debug overlay", "flags": ["sv"]},
	{"name": "decalfrequency", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "default_fov", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "demo_autorecord", "type": "cvar", "help": "Enable recording demos after disconnect", "flags": ["a"]},
	{"name": "demo_avellimit", "type": "cvar", "help": "Angular velocity limit before eyes considered snapped for demo playback.", "flags": []},
	{"name": "demo_debug", "type": "cvar", "help": "Demo debug info.", "flags": []},
	{"name": "demo_enabledemos", "type": "cvar", "help": "Enable recording demos (must be set true before loading a map)", "flags": []},
	{"name": "demo_fastforwardfinalspeed", "type": "cvar", "help": "Go this fast when starting to hold FF button.", "flags": []},
	{"name": "demo_fastforwardramptime", "type": "cvar", "help": "How many seconds it takes to get to full FF speed.", "flags": []},
	{"name": "demo_fastforwardstartspeed", "type": "cvar", "help": "Go this fast when starting to hold FF button.", "flags": []},
	{"name": "demo_goto", "type": "command", "help": "Skips to location in demo.", "flags": ["norecord"]},
	{"name": "demo_gototick", "type": "command", "help": "Skips to a tick in demo.", "flags": ["norecord"]},
	{"name": "demo_highlight_fastforwardspeed", "type": "cvar", "help": "Speed to use when fast forwarding to highlights.", "flags": []},
	{"name": "demo_highlight_skipthreshold", "type": "cvar", "help": "Number of seconds between previous highlight event and round start that will fast forward instead of skipping.", "flags": []},
	{"name": "demo_highlight_timeafter", "type": "cvar", "help": "How many seconds after highlight event to start fast forwarding.", "flags": []},
	{"name": "demo_highlight_timebefore", "type": "cvar", "help": "How many seconds before highlight event to stop fast forwarding.", "flags": []},
	{"name": "demo_index", "type": "cvar", "help": "If to use demo index. Needs to be set before loading demo.", "flags": ["a"]},
	{"name": "demo_index_max_other", "type": "cvar", "help": "Limits the the count of index files of other (non-current) demos. Needs to be set before loading demo.", "flags": ["a"]},
	{"name": "demo_info", "type": "command", "help": "Print information about currently playing demo.", "flags": ["norecord"]},
	{"name": "demo_interplimit", "type": "cvar", "help": "How much origin velocity before it's considered to have 'teleported' causing interpolation to reset.", "flags": []},
	{"name": "demo_interpolateview", "type": "cvar", "help": "Do view interpolation during dem playback.", "flags": []},
	{"name": "demo_legacy_rollback", "type": "cvar", "help": "Use legacy view interpolation rollback amount in demo playback.", "flags": []},
	{"name": "demo_listhighlights", "type": "command", "help": "List all highlights data for the demo.", "flags": ["norecord"]},
	{"name": "demo_listimportantticks", "type": "command", "help": "List all important ticks in the demo.", "flags": ["norecord"]},
	{"name": "demo_pause", "type": "command", "help": "Pauses demo playback.", "flags": ["norecord"]},
	{"name": "demo_pauseatservertick", "type": "cvar", "help": "Pauses demo playback at server tick", "flags": []},
	{"name": "demo_quitafterplayback", "type": "cvar", "help": "Quits game after demo playback.", "flags": []},
	{"name": "demo_recordcommands", "type": "cvar", "help": "Record commands typed at console into .dem files.", "flags": ["cheat"]},
	{"name": "demo_resume", "type": "command", "help": "Resumes demo playback.", "flags": ["norecord"]},
	{"name": "demo_strict_validation", "type": "cvar", "help": "", "flags": []},
	{"name": "demo_timescale", "type": "command", "help": "Sets demo replay speed.", "flags": ["norecord"]},
	{"name": "demo_togglepause", "type": "command", "help": "Toggles demo playback.", "flags": ["norecord"]},
	{"name": "demolist", "type": "command", "help": "Print demo sequence list.", "flags": ["norecord"]},
	{"name": "demos", "type": "command", "help": "Demo demo file sequence.", "flags": ["norecord"]},
	{"name": "demoui", "type": "command", "help": "Show/hide the demo player UI.", "flags": ["norecord"]},
	{"name": "developer", "type": "cvar", "help": "Set developer message level", "flags": []},
	{"name": "devshots_nextmap", "type": "command", "help": "Used by the devshots system to go to the next map in the devshots maplist.", "flags": []},
	{"name": "devshots_screenshot", "type": "command", "help": "Used by the -makedevshots system to take a screenshot. For taking your own screenshots, use the 'screenshot' command instead.", "flags": ["norecord"]},
	{"name": "devui_disable", "type": "command", "help": "Disables the specified devui window", "flags": ["cl"]},
	{"name": "devui_display_scale", "type": "cvar", "help": "Global imgui scale, usually used for Hi-DPI displays", "flags": ["a"]},
	{"name": "devui_enable", "type": "command", "help": "Enables the specified devui window", "flags": ["cl"]},
	{"name": "devui_font_scale", "type": "cvar", "help": "Global scale applied to Imgui fonts", "flags": ["a"]},
	{"name": "+devui_input", "type": "command", "help": "Toggles the mouse cursor for devui windows, same as devui_toggle_input", "flags": ["cl"]},
	{"name": "-devui_input", "type": "command", "help": "Toggles the mouse cursor for devui windows, same as devui_toggle_input", "flags": ["cl"]},
	{"name": "+devui_menu", "type": "command", "help": "Toggles the menu bar and input", "flags": ["cl"]},
	{"name": "-devui_menu", "type": "command", "help": "Toggles the menu bar and input", "flags": ["cl"]},
	{"name": "devui_show", "type": "command", "help": "Toggles the specified devui window", "flags": ["cl"]},
	{"name": "devui_theme", "type": "cvar", "help": "Current devui theme", "flags": ["a"]},
	{"name": "devui_toggle_input", "type": "command", "help": "Toggles the mouse cursor for devui windows", "flags": ["cl"]},
	{"name": "devui_toggle_menu", "type": "command", "help": "Toggles the devui menu bar", "flags": ["cl"]},
	{"name": "differences", "type": "command", "help": "Show all convars which are not at their default values.", "flags": []},
	{"name": "disconnect", "type": "command", "help": "Disconnect game from server.", "flags": ["norecord","server_can_execute"]},
	{"name": "disp_dynamic", "type": "cvar", "help": "", "flags": []},
	{"name": "disp_list_all_collideable", "type": "command", "help": "List all collideable displacements", "flags": []},
	{"name": "display_elapsedtime", "type": "command", "help": "Displays how much time has elapsed since the game started", "flags": ["cheat"]},
	{"name": "display_game_events", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "displayportalplayerstats", "type": "command", "help": "Displays current level stats for portals placed, steps taken, and seconds taken.", "flags": ["sv"]},
	{"name": "displaysoundlist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "dlight_debug", "type": "command", "help": "Creates a dlight in front of the player", "flags": ["cheat","cl"]},
	{"name": "dog_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "dog_max_wait_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "draw_paint_client_blobs", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "draw_paint_isosurface", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "draw_paint_splat_particles", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "drawcross", "type": "command", "help": "Draws a cross at the given location\n\tArguments: x y z", "flags": ["sv","cheat"]},
	{"name": "drawline", "type": "command", "help": "Draws line between two 3D Points.\n\tGreen if no collision\n\tRed is collides with something\n\tArguments: x1 y1 z1 x2 y2 z2", "flags": ["sv","cheat"]},
	{"name": "dropprimary", "type": "command", "help": "dropprimary: Drops the primary weapon of the player.", "flags": ["cl"]},
	{"name": "ds_get_newest_subscribed_files", "type": "command", "help": "Re-reads web api auth key and subscribed file lists from disk and downloads the latest updates of those files from steam", "flags": ["sv"]},
	{"name": "dsp_automatic", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_db_min", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_db_mixdrop", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_dist_max", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_dist_min", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_enhance_stereo", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "dsp_facingaway", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_mix_max", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_mix_min", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_off", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "dsp_player", "type": "cvar", "help": "", "flags": ["demo","server_can_execute"]},
	{"name": "dsp_reload", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "dsp_room", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_slow_cpu", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "dsp_spatial", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_speaker", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_vol_2ch", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_vol_4ch", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_vol_5ch", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_volume", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "dsp_water", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dt_ShowPartialChangeEnts", "type": "cvar", "help": "(SP only) - show entities that were copied using small optimized lists (FL_EDICT_PARTIAL_CHANGE).", "flags": []},
	{"name": "dt_UsePartialChangeEnts", "type": "cvar", "help": "(SP only) - enable FL_EDICT_PARTIAL_CHANGE optimization.", "flags": []},
	{"name": "dti_flush", "type": "command", "help": "Write out the datatable instrumentation files (you must run with -dti for this to work).", "flags": []},
	{"name": "dtwarning", "type": "cvar", "help": "Print data table warnings?", "flags": []},
	{"name": "dtwatchclass", "type": "cvar", "help": "Watch all fields encoded with this table.", "flags": []},
	{"name": "dtwatchdecode", "type": "cvar", "help": "When watching show decode.", "flags": []},
	{"name": "dtwatchencode", "type": "cvar", "help": "When watching show encode.", "flags": []},
	{"name": "dtwatchent", "type": "cvar", "help": "Watch this entities data table encoding.", "flags": []},
	{"name": "dtwatchvar", "type": "cvar", "help": "Watch the named variable.", "flags": []},
	{"name": "-duck", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+duck", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-duck_notoggle", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+duck_notoggle", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "dump_globals", "type": "command", "help": "Dump all global entities/states", "flags": ["sv"]},
	{"name": "dump_paintmaps", "type": "command", "help": "dump paintmap data to \"paintmap_#.txt\"", "flags": ["cheat"]},
	{"name": "dump_panorama_css_properties", "type": "command", "help": "Prints out all valid panorama CSS properties and their documentation. Adding a 'markdown' argument to this command causes it to dump documentation in markdown syntax.", "flags": []},
	{"name": "dump_panorama_css_properties_memstats", "type": "command", "help": "Prints out mem stats of all valid panorama CSS properties", "flags": []},
	{"name": "dump_panorama_events", "type": "command", "help": "print panorama event types and their documentation. Adding 'markdown' as an argument to this command dumps documentation in markdown format", "flags": []},
	{"name": "dump_panorama_js_scopes", "type": "command", "help": "print panorama js scopes, such as classes, and their associated methods. Adding a 'markdown' argument to this command dumps documentation in markdown format.", "flags": []},
	{"name": "dump_panorama_render_command_stats", "type": "command", "help": "", "flags": []},
	{"name": "dumpeventqueue", "type": "command", "help": "Dump the contents of the Entity I/O event queue to the console.", "flags": ["sv"]},
	{"name": "dumpgamestringtable", "type": "command", "help": "Dump the contents of the game string table to the console.", "flags": ["sv","cheat"]},
	{"name": "dumpstringtables", "type": "command", "help": "Print string tables to console.", "flags": []},
	{"name": "echo", "type": "command", "help": "Echo text to console.", "flags": ["server_can_execute"]},
	{"name": "editor_toggle", "type": "command", "help": "Disables the simulation and returns focus to the editor", "flags": ["cheat"]},
	{"name": "enable_debug_overlays", "type": "cvar", "help": "Enable rendering of debug overlays", "flags": ["sv","cheat"]},
	{"name": "enable_fast_math", "type": "cvar", "help": "Turns Denormals-Are-Zeroes and Flush-to-Zero on or off", "flags": []},
	{"name": "enable_skeleton_draw", "type": "cvar", "help": "Render skeletons in wireframe", "flags": ["cheat","cl"]},
	{"name": "endmovie", "type": "command", "help": "Stop recording movie frames.", "flags": ["norecord"]},
	{"name": "engine_no_focus_sleep", "type": "cvar", "help": "", "flags": []},
	{"name": "ent_absbox", "type": "command", "help": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_attachments", "type": "command", "help": "Displays the attachment points on an entity.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_autoaim", "type": "command", "help": "Displays the entity's autoaim radius.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "ent_bbox", "type": "command", "help": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_cancelpendingentfires", "type": "command", "help": "Cancels all ent_fire created outputs that are currently waiting for their delay to expire.", "flags": ["sv","cheat"]},
	{"name": "ent_create", "type": "command", "help": "Creates an entity of the given type where the player is looking.  Additional parameters can be passed in in the form: ent_create <entity name> <param 1 name> <param 1> <param 2 name> <param 2>...<param N name> <param N>", "flags": ["sv","cheat"]},
	{"name": "ent_create_aimed", "type": "command", "help": "Creates an entity of the given type where the player is looking.  Additional parameters can be passed in in the form: ent_create_aimed <entity name> <param 1 name> <param 1> <param 2 name> <param 2>...<param N name> <param N>", "flags": ["sv","cheat"]},
	{"name": "ent_create_paint_bomb_erase", "type": "command", "help": "Creates a paint bomb with the erase paint paint power", "flags": ["sv","cheat"]},
	{"name": "ent_create_paint_bomb_jump", "type": "command", "help": "Creates a paint bomb with the jump paint paint power", "flags": ["sv","cheat"]},
	{"name": "ent_create_paint_bomb_portal", "type": "command", "help": "Creates a paint bomb with the portal paint paint power", "flags": ["sv","cheat"]},
	{"name": "ent_create_paint_bomb_reflect", "type": "command", "help": "Creates a paint bomb with the reflect paint paint power", "flags": ["sv","cheat"]},
	{"name": "ent_create_paint_bomb_speed", "type": "command", "help": "Creates a paint bomb with the speed paint paint power", "flags": ["sv","cheat"]},
	{"name": "ent_create_paint_bomb_stick", "type": "command", "help": "Creates a paint bomb with the stick paint paint power", "flags": ["sv","cheat"]},
	{"name": "ent_create_portal_companion_cube", "type": "command", "help": "Creates a companion cube where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "ent_create_portal_reflector_cube", "type": "command", "help": "Creates a laser reflector cube cube where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "ent_create_portal_weighted_antique", "type": "command", "help": "Creates an antique cube where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "ent_create_portal_weighted_cube", "type": "command", "help": "Creates a standard cube where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "ent_create_portal_weighted_schrodinger", "type": "command", "help": "Creates an Schrodinger cube where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "ent_create_portal_weighted_sphere", "type": "command", "help": "Creates a weighted sphere where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "ent_debugkeys", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ent_dump", "type": "command", "help": "Usage:\n   ent_dump <entity name>\n", "flags": ["sv","cheat"]},
	{"name": "ent_fire", "type": "command", "help": "Usage:\n   ent_fire <target> [action] [value] [delay]\n", "flags": ["sv","cheat"]},
	{"name": "ent_info", "type": "command", "help": "Usage:\n   ent_info <class name>\n", "flags": ["sv","cheat"]},
	{"name": "ent_info_datatable", "type": "command", "help": "Usage:\n   ent_info_datatable <class name>\n", "flags": ["sv","cheat"]},
	{"name": "ent_keyvalue", "type": "command", "help": "Applies the comma delimited key=value pairs to the entity with the given Hammer ID.\n\tFormat: ent_keyvalue <entity id> <key1>=<value1>,<key2>=<value2>,...,<keyN>=<valueN>\n", "flags": ["sv","cheat"]},
	{"name": "ent_messages", "type": "command", "help": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "ent_messages_draw", "type": "cvar", "help": "Visualizes all entity input/output activity.", "flags": ["sv","cheat"]},
	{"name": "ent_name", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "ent_orient", "type": "command", "help": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.\n\tFormat: ent_orient <entity name> <optional: allangles>", "flags": ["sv","cheat"]},
	{"name": "ent_pause", "type": "command", "help": "Toggles pausing of input/output message processing for entities.  When turned on processing of all message will stop.  Any messages displayed with 'ent_messages' will stop fading and be displayed indefinitely. To step through the messages one by one use 'ent_step'.", "flags": ["sv","cheat"]},
	{"name": "ent_pivot", "type": "command", "help": "Displays the pivot for the given entity(ies).\n\t(y=up=green, z=forward=blue, x=left=red). \n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_rbox", "type": "command", "help": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_remove", "type": "command", "help": "Removes the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_remove_all", "type": "command", "help": "Removes all entities of the specified type\n\tArguments:   \t{entity_name} / {class_name} ", "flags": ["sv","cheat"]},
	{"name": "ent_rotate", "type": "command", "help": "Rotates an entity by a specified # of degrees", "flags": ["sv","cheat"]},
	{"name": "ent_script_dump", "type": "command", "help": "Dumps the names and values of this entity's script scope to the console\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_setang", "type": "command", "help": "Set entity angles", "flags": ["sv","cheat"]},
	{"name": "ent_setname", "type": "command", "help": "Sets the targetname of the given entity(s)\n\tArguments:   \t{new entity name} {entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_setpos", "type": "command", "help": "Move entity to position", "flags": ["sv","cheat"]},
	{"name": "ent_show_contexts", "type": "cvar", "help": "Show entity contexts in ent_text display", "flags": ["sv"]},
	{"name": "ent_show_response_criteria", "type": "command", "help": "Print, to the console, an entity's current criteria set used to select responses.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_step", "type": "command", "help": "When 'ent_pause' is set this will step through one waiting input / output message at a time.", "flags": ["sv","cheat"]},
	{"name": "ent_teleport", "type": "command", "help": "Teleport the specified entity to where the player is looking.\n\tFormat: ent_teleport <entity name>", "flags": ["sv","cheat"]},
	{"name": "ent_text", "type": "command", "help": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_viewoffset", "type": "command", "help": "Displays the eye position for the given entity(ies) in red.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "er_colwidth", "type": "cvar", "help": "", "flags": []},
	{"name": "er_graphwidthfrac", "type": "cvar", "help": "", "flags": []},
	{"name": "er_maxname", "type": "cvar", "help": "", "flags": []},
	{"name": "erase_color", "type": "cvar", "help": "Color for erase", "flags": ["rep","cl"]},
	{"name": "erase_visual_color", "type": "cvar", "help": "Color for erase that is rendered", "flags": ["rep","cl"]},
	{"name": "escape", "type": "command", "help": "Escape key pressed.", "flags": ["clientcmd_can_execute"]},
	{"name": "exec", "type": "command", "help": "Execute script file.", "flags": []},
	{"name": "execifexists", "type": "command", "help": "Execute script file if file exists.", "flags": []},
	{"name": "execwithwhitelist", "type": "command", "help": "Execute script file, only execing convars on a whitelist.", "flags": []},
	{"name": "exit", "type": "command", "help": "Exit the engine.", "flags": []},
	{"name": "explode", "type": "command", "help": "Kills the player with explosive damage", "flags": ["sv","print"]},
	{"name": "explodevector", "type": "command", "help": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>", "flags": ["sv","print"]},
	{"name": "exploding_futbol_end_color", "type": "cvar", "help": "The ending color of the exploding futbol, before it starts the final explode sequence.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_explode_on_fizzle", "type": "cvar", "help": "If the exploding futbol should explode when it fizzles.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_explosion_damage", "type": "cvar", "help": "The damage of the explosion for the exploding futbol.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_explosion_damage_falloff", "type": "cvar", "help": "The percentage of damage taken at the edge of the explosion.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_explosion_debug", "type": "cvar", "help": "Debug the explosion of the exploding futbol.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_explosion_magnitude", "type": "cvar", "help": "The magnitude of the explosion for the exploding futbol.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_explosion_radius", "type": "cvar", "help": "The radius of the explosion for the exploding futbol.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_flash_duration", "type": "cvar", "help": "The flash duration of the exploding futbol, right before it explodes.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_flash_end_color", "type": "cvar", "help": "The final color of the exploding futbol, right before it explodes.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_flash_start_color", "type": "cvar", "help": "The start color for the futbol flashing before it explodes.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_flash_start_time", "type": "cvar", "help": "The time before the futbol explodes when it start to flash.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_hit_breakables", "type": "cvar", "help": "If the exploding futbol should hit breakable entities.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_phys_mag", "type": "cvar", "help": "Magnitude of physics force for an exploding futbol", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_phys_rad", "type": "cvar", "help": "Magnitude of physics force for an exploding futbol", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_physics_punt_player", "type": "cvar", "help": "Physically perturb the player when the explosion hits them", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_start_color", "type": "cvar", "help": "The starting color of the exploding futbol.", "flags": ["sv","cheat"]},
	{"name": "exploding_futbol_use_cooldown_time", "type": "cvar", "help": "The cooldown time for the use key after the player picks up the futbol.", "flags": ["sv","cheat"]},
	{"name": "fadein", "type": "command", "help": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.", "flags": ["sv","cheat"]},
	{"name": "fadeout", "type": "command", "help": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.", "flags": ["sv","cheat"]},
	{"name": "fast_fogvolume", "type": "cvar", "help": "", "flags": []},
	{"name": "fast_poly_convert", "type": "cvar", "help": "", "flags": []},
	{"name": "fast_teleport_enable", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "filesystem_buffer_size", "type": "cvar", "help": "Size of per file buffers. 0 for none", "flags": []},
	{"name": "filesystem_max_stdio_read", "type": "cvar", "help": "", "flags": []},
	{"name": "filesystem_native", "type": "cvar", "help": "Use native FS or STDIO", "flags": []},
	{"name": "filesystem_report_buffered_io", "type": "cvar", "help": "", "flags": []},
	{"name": "filesystem_unbuffered_io", "type": "cvar", "help": "", "flags": []},
	{"name": "find", "type": "command", "help": "Find concommands with the specified string in their name/help text.", "flags": []},
	{"name": "find_ent", "type": "command", "help": "Find and list all entities with classnames or targetnames that contain the specified substring.\nFormat: find_ent <substring>\n", "flags": ["sv","cheat"]},
	{"name": "find_ent_index", "type": "command", "help": "Display data for entity matching specified index.\nFormat: find_ent_index <index>\n", "flags": ["sv","cheat"]},
	{"name": "findflags", "type": "command", "help": "Find concommands by flags.", "flags": []},
	{"name": "fire_absorbrate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_dmgbase", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_dmginterval", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_dmgscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_energy_ball", "type": "command", "help": "Fires a test energy ball out of your face", "flags": ["sv","cheat"]},
	{"name": "fire_extabsorb", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_extscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_growthrate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_heatscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_incomingheatscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_maxabsorb", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_rocket_projectile", "type": "command", "help": "Fires a rocket turret projectile from the player's eyes for testing.", "flags": ["sv","cheat"]},
	{"name": "firetarget", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "firstperson", "type": "command", "help": "Switch to firstperson camera.", "flags": ["server_can_execute","cl"]},
	{"name": "fish_debug", "type": "cvar", "help": "Show debug info for fish", "flags": ["cheat","cl"]},
	{"name": "fish_dormant", "type": "cvar", "help": "Turns off interactive fish behavior. Fish become immobile and unresponsive.", "flags": ["sv","cheat","rep"]},
	{"name": "flex_expression", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_looktime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_maxawaytime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_maxplayertime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_minawaytime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_minplayertime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_rules", "type": "cvar", "help": "Allow flex animation rules to run.", "flags": ["cl"]},
	{"name": "flex_smooth", "type": "cvar", "help": "Applies smoothing/decay curve to flex animation controller changes.", "flags": ["cl"]},
	{"name": "flex_talk", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flush", "type": "command", "help": "Flush unlocked cache memory.", "flags": ["cheat"]},
	{"name": "fog_color", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_colorskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_enable", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_enable_water_fog", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "fog_enableskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_end", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_endskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_hdrcolorscale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_hdrcolorscaleskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_maxdensity", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_maxdensityskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_override", "type": "cvar", "help": "Overrides the map's fog settings (-1 populates fog_ vars with map's values)", "flags": ["cheat","cl"]},
	{"name": "fog_start", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_startskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_volume_debug", "type": "cvar", "help": "If enabled, prints diagnostic information about the current fog volume", "flags": ["sv"]},
	{"name": "fogui", "type": "command", "help": "", "flags": []},
	{"name": "force_centerview", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "forceactivecontrollertype", "type": "cvar", "help": "", "flags": []},
	{"name": "forcebind", "type": "command", "help": "Bind a command to an available key. (forcebind command opt:suggestedKey)", "flags": []},
	{"name": "forkandcoredumpchild", "type": "command", "help": "Cause the engine to fork and produce a core dump from within child PID (Debug!!)", "flags": ["norecord"]},
	{"name": "+forward", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-forward", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "foundry_engine_get_mouse_control", "type": "command", "help": "Give the engine control of the mouse.", "flags": ["sv","cheat"]},
	{"name": "foundry_engine_release_mouse_control", "type": "command", "help": "Give the control of the mouse back to Hammer.", "flags": ["sv","cheat"]},
	{"name": "foundry_select_entity", "type": "command", "help": "Select the entity under the crosshair or select entities with the specified name.", "flags": ["sv","cheat"]},
	{"name": "foundry_sync_hammer_view", "type": "command", "help": "Move Hammer's 3D view to the same position as the engine's 3D view.", "flags": ["sv","cheat"]},
	{"name": "foundry_update_entity", "type": "command", "help": "Updates the entity's position/angles when in edit mode", "flags": ["sv","cheat"]},
	{"name": "fov_desired", "type": "cvar", "help": "Sets the base field-of-view.", "flags": ["a","user","cl"]},
	{"name": "fov_viewmodel", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "fps_max", "type": "cvar", "help": "Frame rate limiter", "flags": ["a"]},
	{"name": "fps_max_menu", "type": "cvar", "help": "Frame rate limiter, main menu", "flags": ["a"]},
	{"name": "fps_screenshot_frequency", "type": "cvar", "help": "While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds when under the given fps.)", "flags": ["cheat"]},
	{"name": "fps_screenshot_threshold", "type": "cvar", "help": "Dump a screenshot when the FPS drops below the given value.", "flags": ["cheat"]},
	{"name": "free_pass_peek_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fs_clear_open_duplicate_times", "type": "command", "help": "Clear the list of files that have been opened.", "flags": []},
	{"name": "fs_dump_open_duplicate_times", "type": "command", "help": "Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was spent reading from them.", "flags": []},
	{"name": "fs_enable_stats", "type": "cvar", "help": "", "flags": []},
	{"name": "fs_monitor_read_from_pack", "type": "cvar", "help": "0:Off, 1:Any, 2:Sync only", "flags": []},
	{"name": "fs_printopenfiles", "type": "command", "help": "Show all files currently opened by the engine.", "flags": []},
	{"name": "fs_report_long_reads", "type": "cvar", "help": "0:Off, 1:All (for tracking accumulated duplicate read times), >1:Microsecond threshold", "flags": []},
	{"name": "fs_report_sync_opens", "type": "cvar", "help": "0:Off, 1:Always, 2:Not during map load", "flags": []},
	{"name": "fs_report_sync_opens_callstack", "type": "cvar", "help": "0 to not display the call-stack when we hit a fs_report_sync_opens warning. Set to 1 to display the call-stack.", "flags": []},
	{"name": "fs_warning_level", "type": "command", "help": "Set the filesystem warning level.", "flags": []},
	{"name": "fs_warning_mode", "type": "cvar", "help": "0:Off, 1:Warn main thread, 2:Warn other threads", "flags": []},
	{"name": "func_break_max_pieces", "type": "cvar", "help": "", "flags": ["a","rep","cl"]},
	{"name": "func_break_reduction_factor", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "func_breakdmg_bullet", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "func_breakdmg_club", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "func_breakdmg_explosive", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "futbol_shooter_distance_from_target", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "futbol_shooter_target_height_offset", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "futbol_shooter_target_reticule_enabled", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "fx_glass_velocity_cap", "type": "cvar", "help": "Maximum downwards speed of shattered glass particles", "flags": ["cl"]},
	{"name": "fx_new_sparks", "type": "cvar", "help": "Use new style sparks.\n", "flags": ["sv","cheat"]},
	{"name": "g_ai_citizen_show_enemy", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_ai_threadedgraphbuild", "type": "cvar", "help": "If true, use experimental threaded node graph building.", "flags": ["sv"]},
	{"name": "g_antlion_cascade_push", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "g_antlion_maxgibs", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "g_antlionguard_hemorrhage", "type": "cvar", "help": "If 1, guard will emit a bleeding particle effect when wounded.", "flags": ["sv"]},
	{"name": "g_cannon_damageandradius", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_cannon_debug", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_cannon_max_traveltime", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_cannon_reloadtime", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_angularsensor", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_antlion", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_antlion_worker", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_antlionguard", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_antlionmaker", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_basehelicopter", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_basescanner", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_combine_camera", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_constraint_sounds", "type": "cvar", "help": "Enable debug printing about constraint sounds.", "flags": ["sv","cheat"]},
	{"name": "g_debug_cscanner", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_darkness", "type": "cvar", "help": "Show darkness mode lightsources.", "flags": ["sv"]},
	{"name": "g_debug_doors", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_dropship", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_dynamicresupplies", "type": "cvar", "help": "Debug item_dynamic_resupply spawning. Set to 1 to see text printouts of the spawning. Set to 2 to see lines drawn to other items factored into the spawning.", "flags": ["sv"]},
	{"name": "g_debug_gunship", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_headcrab", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_hunter_charge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_injured_follow", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_npc_vehicle_roles", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_physcannon", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "g_debug_ragdoll_removal", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "g_debug_ragdoll_visualize", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "g_debug_trackpather", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_transitions", "type": "cvar", "help": "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition.", "flags": ["sv"]},
	{"name": "g_debug_turret", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_turret_ceiling", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_vehiclebase", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_vehicledriver", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_vehicleexit", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_vehiclesound", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_vortigaunt_aim", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_helicopter_bomb_danger_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_helicopter_bullrush_bomb_enemy_distance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_helicopter_bullrush_bomb_speed", "type": "cvar", "help": "The maximum distance the player can be from the chopper before it stops firing", "flags": ["sv"]},
	{"name": "g_helicopter_bullrush_bomb_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_helicopter_bullrush_distance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_helicopter_bullrush_mega_bomb_health", "type": "cvar", "help": "Fraction of the health of the chopper before it mega-bombs", "flags": ["sv"]},
	{"name": "g_helicopter_bullrush_shoot_height", "type": "cvar", "help": "The maximum distance the player can be from the chopper before it stops firing", "flags": ["sv"]},
	{"name": "g_helicopter_chargetime", "type": "cvar", "help": "How much time we have to wait (on average) between the time we start hearing the charging sound + the chopper fires", "flags": ["sv"]},
	{"name": "g_helicopter_idletime", "type": "cvar", "help": "How much time we have to wait (on average) after we fire before we can charge up again", "flags": ["sv"]},
	{"name": "g_helicopter_maxfiringdist", "type": "cvar", "help": "The maximum distance the player can be from the chopper before it stops firing", "flags": ["sv"]},
	{"name": "g_jeepexitspeed", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_Language", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "g_ragdoll_fadespeed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "g_ragdoll_important_maxcount", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "g_ragdoll_lvfadespeed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "g_ragdoll_maxcount", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "g_test_new_antlion_jump", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "gameinstructor_dump_open_lessons", "type": "command", "help": "Gives a list of all currently open lessons.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_enable", "type": "cvar", "help": "Display in game lessons that teach new players.", "flags": ["a","cl"]},
	{"name": "gameinstructor_find_errors", "type": "cvar", "help": "Set to 1 and the game instructor will run EVERY scripted command to uncover errors.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_reload_lessons", "type": "command", "help": "Shuts down all open lessons and reloads them from the script file.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_reset_counts", "type": "command", "help": "Resets all display and success counts to zero.", "flags": ["cl"]},
	{"name": "gameinstructor_save_restore_lessons", "type": "cvar", "help": "Set to 0 to disable save/load of open lesson opportunities in single player.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_start_sound_cooldown", "type": "cvar", "help": "Number of seconds forced between similar lesson start sounds.", "flags": ["cl"]},
	{"name": "gameinstructor_verbose", "type": "cvar", "help": "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_verbose_lesson", "type": "cvar", "help": "Display more verbose information for lessons have this name.", "flags": ["cheat","cl"]},
	{"name": "gamemenucommand", "type": "command", "help": "Issue game menu command.", "flags": ["cl"]},
	{"name": "gamepadslot1", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "gamepadslot2", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "gamepadslot3", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "gamepadslot4", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "gamepadslot5", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "gamepadslot6", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "gamestats_file_output_directory", "type": "cvar", "help": "When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath\n", "flags": ["sv"]},
	{"name": "gameui_activate", "type": "command", "help": "Shows the game UI", "flags": []},
	{"name": "gameui_allowescape", "type": "command", "help": "Escape key allowed to hide game UI", "flags": []},
	{"name": "gameui_allowescapetoshow", "type": "command", "help": "Escape key allowed to show game UI", "flags": []},
	{"name": "gameui_hide", "type": "command", "help": "Hides the game UI", "flags": []},
	{"name": "gameui_preventescape", "type": "command", "help": "Escape key doesn't hide game UI", "flags": []},
	{"name": "gameui_preventescapetoshow", "type": "command", "help": "Escape key doesn't show game UI", "flags": []},
	{"name": "getpos", "type": "command", "help": "dump position and angles to the console", "flags": ["cl"]},
	{"name": "getpos_exact", "type": "command", "help": "dump origin and angles to the console", "flags": ["cl"]},
	{"name": "give", "type": "command", "help": "Give item to player.\n\tArguments: <item_name>", "flags": ["sv","cheat","print"]},
	{"name": "give_boots", "type": "command", "help": "Gives the player a pair of long fall boots", "flags": ["sv","cheat"]},
	{"name": "give_me_a_point", "type": "command", "help": "Give yourself a point", "flags": ["sv"]},
	{"name": "give_paintgun", "type": "command", "help": "Equips the player with a single portal paintgun.\n\tArguments:   \tnone ", "flags": ["sv","cheat"]},
	{"name": "give_portalgun", "type": "command", "help": "Equips the player with a single portal portalgun.\n\tArguments:   \tnone ", "flags": ["sv","cheat"]},
	{"name": "give_portalgun_orange", "type": "command", "help": "Equips the player with a single orange portal portalgun.\n\tArguments:   \tnone ", "flags": ["sv","cheat"]},
	{"name": "givecurrentammo", "type": "command", "help": "Give a supply of ammo for current weapon..\n", "flags": ["sv","cheat"]},
	{"name": "gl_clear", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "gl_clear_color", "type": "cvar", "help": "Clears the back buffer with the specified color", "flags": ["cheat","cl"]},
	{"name": "gl_clear_randomcolor", "type": "cvar", "help": "Clear the back buffer to random colors every frame. Helps spot open seams in geometry.", "flags": ["cheat","cl"]},
	{"name": "global_chatter_info", "type": "cvar", "help": "Map/mode-specific responserules criteria used by calls to UTIL_GlobalChatter", "flags": ["sv"]},
	{"name": "global_event_log_enabled", "type": "cvar", "help": "Enables the global event log system", "flags": ["sv","cheat"]},
	{"name": "global_set", "type": "command", "help": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).", "flags": ["sv","cheat"]},
	{"name": "glow_outline_effect_enable", "type": "cvar", "help": "Enable entity outline glow effects.", "flags": ["cheat","cl"]},
	{"name": "glow_outline_width", "type": "cvar", "help": "Width of glow outline effect in screen space.", "flags": ["cheat","cl"]},
	{"name": "god", "type": "command", "help": "Toggle. Player becomes invulnerable. Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "gods", "type": "command", "help": "Toggle. All players become invulnerable.", "flags": ["sv","cheat"]},
	{"name": "gpu_level", "type": "cvar", "help": "GPU Level - Default: High", "flags": []},
	{"name": "gpu_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "gpu_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "gpu_mem_level", "type": "cvar", "help": "Memory Level - Default: High", "flags": []},
	{"name": "gpu_mem_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "gpu_mem_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "grab_window", "type": "command", "help": "grab/ungrab window.", "flags": []},
	{"name": "+graph", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-graph", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+grenade1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-grenade1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+grenade2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-grenade2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "groundlist", "type": "command", "help": "Display ground entity list <index>", "flags": ["sv"]},
	{"name": "hammer_update_entity", "type": "command", "help": "Updates the entity's position/angles when in edit mode", "flags": ["sv","cheat"]},
	{"name": "hammer_update_safe_entities", "type": "command", "help": "Updates entities in the map that can safely be updated (don't have parents or are affected by constraints). Also excludes entities mentioned in any hammer_updateignorelist objects in this map.", "flags": ["sv","cheat"]},
	{"name": "help", "type": "command", "help": "Find help about a convar/concommand.", "flags": []},
	{"name": "hide_main_menu", "type": "command", "help": "Hide the main menu", "flags": ["cl"]},
	{"name": "hideconsole", "type": "command", "help": "Hide the console.", "flags": ["norecord"]},
	{"name": "hidehud", "type": "cvar", "help": "", "flags": ["cheat","cl","ss"]},
	{"name": "hidehud2", "type": "cvar", "help": "", "flags": ["cheat","cl","ss_added"]},
	{"name": "hidepanel", "type": "command", "help": "Hides a viewport panel <name>", "flags": ["cl"]},
	{"name": "hl2_episodic", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "host_filtered_time_report", "type": "command", "help": "Dumps time spent idle in previous frames in ms(dedicated only).", "flags": []},
	{"name": "host_flush_threshold", "type": "cvar", "help": "Memory threshold below which the host should flush caches between server instances", "flags": []},
	{"name": "host_framerate", "type": "cvar", "help": "Set to lock per-frame time elapse.", "flags": ["cheat","rep"]},
	{"name": "host_info_show", "type": "cvar", "help": "How server info gets disclosed in server queries: 0 - query disabled, 1 - show only general info, 2 - show full info", "flags": []},
	{"name": "host_map", "type": "cvar", "help": "Current map name.", "flags": []},
	{"name": "host_map_mount_order_detection", "type": "cvar", "help": "Try to detect from which paths map uses the most assets and reorder paths accordingly", "flags": ["a"]},
	{"name": "host_map_mount_order_detection_verbose", "type": "cvar", "help": "Spew detected paths of files", "flags": []},
	{"name": "host_maplist_recurse_subdirs", "type": "cvar", "help": "", "flags": []},
	{"name": "host_name_store", "type": "cvar", "help": "Whether hostname is recorded in game events and GOTV.", "flags": []},
	{"name": "host_players_show", "type": "cvar", "help": "How players are disclosed in server queries: 0 - query disabled, 1 - show only max players count, 2 - show all players", "flags": []},
	{"name": "host_print_frame_times", "type": "cvar", "help": "", "flags": []},
	{"name": "host_rules_show", "type": "cvar", "help": "How server rules get disclosed in server queries: 0 - query disabled, 1 - query enabled", "flags": []},
	{"name": "host_runframe_input_parcelremainder", "type": "cvar", "help": "", "flags": []},
	{"name": "host_ShowIPCCallCount", "type": "cvar", "help": "Print # of IPC calls this number of times per second. If set to -1, the # of IPC calls is shown every frame.", "flags": []},
	{"name": "host_speeds", "type": "cvar", "help": "Show general system running times.", "flags": []},
	{"name": "host_timer_report", "type": "command", "help": "Spew CPU timer jitter for the last 128 frames in microseconds (dedicated only)", "flags": []},
	{"name": "host_timescale", "type": "cvar", "help": "Prescale the clock by this amount.", "flags": ["cheat","rep"]},
	{"name": "host_workshop_collection", "type": "command", "help": "Get the latest version of maps in a workshop collection and host them as a maplist.", "flags": ["sv"]},
	{"name": "host_workshop_map", "type": "command", "help": "Get the latest version of the map and host it on this server.", "flags": ["sv"]},
	{"name": "host_writeconfig", "type": "command", "help": "Store current settings to config.cfg (or specified .cfg file).", "flags": []},
	{"name": "host_writeconfig_ss", "type": "command", "help": "Store current settings to config.cfg (or specified .cfg file) with first param as splitscreen index.", "flags": []},
	{"name": "hostfile", "type": "cvar", "help": "The HOST file to load.", "flags": ["sv"]},
	{"name": "hostip", "type": "cvar", "help": "Host game server ip", "flags": []},
	{"name": "hostname", "type": "cvar", "help": "Hostname for server.", "flags": []},
	{"name": "hostport", "type": "cvar", "help": "Host game server port", "flags": []},
	{"name": "hot_potato_end_color", "type": "cvar", "help": "The ending color of the hot potato, before it starts the final explode sequence.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_explode_on_fizzle", "type": "cvar", "help": "If the hot potato should explode when it fizzles.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_explosion_damage", "type": "cvar", "help": "The damage of the explosion for the hot potato.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_explosion_damage_falloff", "type": "cvar", "help": "The percentage of damage taken at the edge of the explosion.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_explosion_debug", "type": "cvar", "help": "Debug the explosion of the hot potato.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_explosion_magnitude", "type": "cvar", "help": "The magnitude of the explosion for the hot potato.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_explosion_radius", "type": "cvar", "help": "The radius of the explosion for the hot potato.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_flash_duration", "type": "cvar", "help": "The flash duration of the hot potato, right before it explodes.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_flash_end_color", "type": "cvar", "help": "The final color of the hot potato, right before it explodes.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_flash_start_color", "type": "cvar", "help": "The start color for the hot potato flashing before it explodes.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_flash_start_time", "type": "cvar", "help": "The time before the hot potato explodes when it start to flash.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_hit_breakables", "type": "cvar", "help": "If the hot potato should hit breakable entities.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_phys_mag", "type": "cvar", "help": "Magnitude of physics force for an hot potato", "flags": ["sv","cheat"]},
	{"name": "hot_potato_phys_rad", "type": "cvar", "help": "Magnitude of physics force for an hot potato", "flags": ["sv","cheat"]},
	{"name": "hot_potato_physics_punt_player", "type": "cvar", "help": "Physically perturb the player when the explosion hits them", "flags": ["sv","cheat"]},
	{"name": "hot_potato_start_color", "type": "cvar", "help": "The starting color of the hot potato.", "flags": ["sv","cheat"]},
	{"name": "hot_potato_use_cooldown_time", "type": "cvar", "help": "The cooldown time for the use key after the player picks up the hot potato.", "flags": ["sv","cheat"]},
	{"name": "http_cache_size", "type": "cvar", "help": "", "flags": []},
	{"name": "hud_airboathint_numentries", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hud_autoaim_method", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_autoaim_scale_icon", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_autoreloadscript", "type": "cvar", "help": "Automatically reloads the animation script each time one is ran", "flags": ["cl"]},
	{"name": "hud_draw_active_reticle", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_draw_fixed_reticle", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "hud_drawhistory_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_fastswitch", "type": "cvar", "help": "", "flags": ["cl","ss"]},
	{"name": "hud_fastswitch2", "type": "cvar", "help": "", "flags": ["cl","ss_added"]},
	{"name": "hud_jeephint_numentries", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hud_magnetism", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_menu_hide", "type": "command", "help": "Hides the currently open hud menu if there is one.", "flags": []},
	{"name": "hud_menu_reload", "type": "command", "help": "Reload hud menu list for autocomplete.", "flags": ["cl"]},
	{"name": "hud_menu_show", "type": "command", "help": "Show hud menu by file name.", "flags": []},
	{"name": "hud_quickinfo", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "hud_quickinfo_swap", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "hud_reloadscheme", "type": "command", "help": "Reloads hud layout and animation scripts.", "flags": ["cl"]},
	{"name": "hud_reticle_alpha_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_reticle_maxalpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_reticle_minalpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_reticle_scale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_saytext_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "hud_scaling", "type": "cvar", "help": "Scales hud elements", "flags": ["a","cl"]},
	{"name": "hud_set_challenge_font_color", "type": "command", "help": "Set a new font color for challenge stats.", "flags": ["cl"]},
	{"name": "hud_subtitles", "type": "command", "help": "Plays the Subtitles: <filename>\n", "flags": ["cl"]},
	{"name": "hud_takesshots", "type": "cvar", "help": "Auto-save a scoreboard screenshot at the end of a map.", "flags": ["a","cl"]},
	{"name": "hunter_allow_dissolve", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_allow_nav_jump", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_charge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_charge_min_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_charge_pct", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_charge_test", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_cheap_explosions", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_clamp_shots", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_disable_patrol", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_dodge_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_dodge_warning", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_dodge_warning_cone", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_dodge_warning_width", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_first_flechette_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_explode_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_max_concurrent_volleys", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_max_range", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_min_range", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_speed", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_test", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_volley_end_max_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_volley_end_min_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_volley_size", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_volley_start_max_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_flechette_volley_start_min_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_free_knowledge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_hate_attached_striderbusters", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_hate_held_striderbusters", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_hate_held_striderbusters_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_hate_held_striderbusters_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_hate_thrown_striderbusters", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_hate_thrown_striderbusters_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_jostle_car_max_speed", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_jostle_car_min_speed", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_melee_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_plant_adjust_z", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_random_expressions", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_retreat_striderbusters", "type": "cvar", "help": "If true, the hunter will retreat when a buster is glued to him.", "flags": ["sv"]},
	{"name": "hunter_seek_thrown_striderbusters_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_shoot_flechette", "type": "command", "help": "Fires a hunter flechette where the player is looking.", "flags": ["sv","cheat"]},
	{"name": "hunter_show_weapon_los_condition", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_show_weapon_los_z", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_siege_frequency", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hunter_stand_still", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "hurtme", "type": "command", "help": "Hurts the player.\n\tArguments: <health to lose>", "flags": ["sv","cheat"]},
	{"name": "impulse", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "in_forceuser", "type": "cvar", "help": "Force user input to this split screen player.", "flags": ["cheat"]},
	{"name": "in_usekeyboardsampletime", "type": "cvar", "help": "Use keyboard sample time smoothing.", "flags": ["cl"]},
	{"name": "incrementvar", "type": "command", "help": "Increment specified convar value.", "flags": ["norecord"]},
	{"name": "injured_help_plee_range", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "invnext", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "invnextgrenade", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "invnextitem", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "invnextnongrenade", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "invprev", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "ip", "type": "cvar", "help": "Overrides IP for multihomed hosts", "flags": []},
	{"name": "ip_relay", "type": "cvar", "help": "Overrides IP used to redirect TV relay connections for NAT hosts", "flags": []},
	{"name": "ip_steam", "type": "cvar", "help": "Overrides IP used to bind Steam port for multihomed hosts", "flags": []},
	{"name": "ip_tv", "type": "cvar", "help": "Overrides IP used to bind TV port for multihomed hosts", "flags": []},
	{"name": "ip_tv1", "type": "cvar", "help": "Overrides IP used to bind TV1 port for multihomed hosts", "flags": []},
	{"name": "jalopy_blocked_exit_max_speed", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "jalopy_cargo_anim_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "jalopy_radar_test_ent", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "-jlook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+jlook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "joy_accel_filter", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_accelmax", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_accelscale", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_accelscalepoly", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_active", "type": "cvar", "help": "Which of the connected joysticks / gamepads to use (-1 means first found)", "flags": []},
	{"name": "joy_advanced", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_advaxisr", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_advaxisu", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_advaxisv", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_advaxisx", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_advaxisy", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_advaxisz", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_autoaim_dampen_smoothout_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_autoaimdampen", "type": "cvar", "help": "How much to scale user stick input when the gun is pointing at a valid target.", "flags": ["a","cl"]},
	{"name": "joy_autoAimDampenMethod", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_autoaimdampenrange", "type": "cvar", "help": "The stick range where autoaim dampening is applied. 0 = off", "flags": ["a","cl"]},
	{"name": "joy_autosprint", "type": "cvar", "help": "Automatically sprint when moving with an analog joystick", "flags": ["cl"]},
	{"name": "joy_axis_deadzone", "type": "cvar", "help": "Dead zone near the zero point to not report movement.", "flags": ["a"]},
	{"name": "joy_axisbutton_threshold", "type": "cvar", "help": "Analog axis range before a button press is registered.", "flags": ["a"]},
	{"name": "joy_cfg_custom", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "joy_cfg_preset", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "joy_cfg_preset2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "joy_circle_correct", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_curvepoint_1", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_curvepoint_2", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_curvepoint_3", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_curvepoint_4", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_curvepoint_end", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_deadzone_mode", "type": "cvar", "help": "0 => Cross-shaped deadzone (default), 1 => Square deadzone.", "flags": []},
	{"name": "joy_diagonalpov", "type": "cvar", "help": "POV manipulator operates on diagonal axes, too.", "flags": ["a","cl"]},
	{"name": "joy_display_input", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_forwardsensitivity", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_forwardthreshold", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_gamecontroller_config", "type": "cvar", "help": "Game controller mapping (passed to SDL with SDL_HINT_GAMECONTROLLERCONFIG), can also be configured in Steam Big Picture mode.", "flags": ["a"]},
	{"name": "joy_gamma", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_invertx", "type": "cvar", "help": "Whether to invert the X axis of the joystick for looking.", "flags": ["a","cl","ss"]},
	{"name": "joy_invertx2", "type": "cvar", "help": "Whether to invert the X axis of the joystick for looking.", "flags": ["a","cl","ss_added"]},
	{"name": "joy_invertx_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_inverty", "type": "cvar", "help": "Whether to invert the Y axis of the joystick for looking.", "flags": ["a","cl","ss"]},
	{"name": "joy_inverty2", "type": "cvar", "help": "Whether to invert the Y axis of the joystick for looking.", "flags": ["a","cl","ss_added"]},
	{"name": "joy_inverty_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_lookspin_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_lowend", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_lowend_linear", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_lowmap", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_movement_stick", "type": "cvar", "help": "Which stick controls movement : 0 = left stick, 1 = right stick, 2 = legacy controls", "flags": ["a","cl","ss"]},
	{"name": "joy_movement_stick2", "type": "cvar", "help": "Which stick controls movement : 0 = left stick, 1 = right stick, 2 = legacy controls", "flags": ["a","cl","ss_added"]},
	{"name": "joy_movement_stick_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_name", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_no_accel_jump", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_pegged", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_pitchsensitivity", "type": "cvar", "help": "joystick pitch sensitivity", "flags": ["a","cl","ss"]},
	{"name": "joy_pitchsensitivity2", "type": "cvar", "help": "joystick pitch sensitivity", "flags": ["a","cl","ss_added"]},
	{"name": "joy_pitchsensitivity_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_pitchthreshold", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_response_look", "type": "cvar", "help": "'Look' stick response mode: 0=Default, 1=Acceleration Promotion", "flags": ["a","cl"]},
	{"name": "joy_response_look_pitch", "type": "cvar", "help": "'Look' stick response mode for pitch: 0=Default, 1=Acceleration Promotion", "flags": ["a","cl"]},
	{"name": "joy_response_move", "type": "cvar", "help": "'Movement' stick response mode: 0=Linear, 1=quadratic, 2=cubic, 3=quadratic extreme, 4=power function(i.e., pow(x,1/sensitivity)), 5=two-stage", "flags": ["a","cl"]},
	{"name": "joy_response_move_vehicle", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_sensitive_step0", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_sensitive_step1", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_sensitive_step2", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_sidesensitivity", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_sidethreshold", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joy_useNewAcecelMethod", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_useNewJoystickPeggedTest", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_variable_frametime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_vehicle_turn_lowend", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_vehicle_turn_lowmap", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_virtual_peg", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_wingmanwarrior_turnhack", "type": "cvar", "help": "Wingman warrior hack related to turn axes.", "flags": ["a","cl"]},
	{"name": "joy_xcontroller_cfg_loaded", "type": "cvar", "help": "If 0, the 360controller.cfg file will be executed on startup & option changes.", "flags": ["cl"]},
	{"name": "joy_xcontroller_found", "type": "cvar", "help": "Automatically set to 1 if an xcontroller has been detected.", "flags": []},
	{"name": "joy_yawsensitivity", "type": "cvar", "help": "joystick yaw sensitivity", "flags": ["a","cl","ss"]},
	{"name": "joy_yawsensitivity2", "type": "cvar", "help": "joystick yaw sensitivity", "flags": ["a","cl","ss_added"]},
	{"name": "joy_yawsensitivity_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "joy_yawthreshold", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "joyadvancedupdate", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "joystick", "type": "cvar", "help": "True if the joystick is enabled, false otherwise.", "flags": ["a","cl"]},
	{"name": "joystick_force_disabled", "type": "cvar", "help": "Prevents any and all joystick input for cases where a piece of hardware is incorrectly identified as a joystick an sends bad signals.", "flags": ["a","cl"]},
	{"name": "joystick_force_disabled_set_from_options", "type": "cvar", "help": "Sets controllers enabled/disabled just before the config is written.", "flags": ["a","cl"]},
	{"name": "jpeg", "type": "command", "help": "Take a jpeg screenshot:  jpeg <filename> <quality 1-100>", "flags": []},
	{"name": "jpeg360", "type": "command", "help": "Take a 360 equirectangular screenshot: jpeg360 [resolution] <filename>", "flags": []},
	{"name": "jpeg_quality", "type": "cvar", "help": "jpeg screenshot quality.", "flags": []},
	{"name": "-jump", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+jump", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "kdtree_test", "type": "command", "help": "Tests spatial partition for entities queries.", "flags": ["sv","cheat"]},
	{"name": "key_findbinding", "type": "command", "help": "Find key bound to specified command string.", "flags": []},
	{"name": "key_listboundkeys", "type": "command", "help": "List bound keys with bindings.", "flags": []},
	{"name": "key_updatelayout", "type": "command", "help": "Updates game keyboard layout to current windows keyboard setting.", "flags": []},
	{"name": "kick", "type": "command", "help": "Kick a player by name.", "flags": []},
	{"name": "kickid", "type": "command", "help": "Kick a player by userid or uniqueid, with a message.", "flags": []},
	{"name": "kickid_ex", "type": "command", "help": "Kick a player by userid or uniqueid, provide a force-the-kick flag and also assign a message.", "flags": []},
	{"name": "kill", "type": "command", "help": "Kills the player with generic damage", "flags": ["sv","print"]},
	{"name": "killserver", "type": "command", "help": "Shutdown the server.", "flags": ["norecord"]},
	{"name": "killvector", "type": "command", "help": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>", "flags": ["sv","print"]},
	{"name": "-klook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+klook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "lastinv", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "-leaderboard", "type": "command", "help": "Hide in game leaderboard", "flags": ["server_can_execute","cl"]},
	{"name": "+leaderboard", "type": "command", "help": "Display in game leaderboard", "flags": ["server_can_execute","cl"]},
	{"name": "leaderboard_duplicate_entries", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "leaderboard_force_rank_show_interval", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "leaderboard_open", "type": "command", "help": "Activate main leaderboard", "flags": ["cl"]},
	{"name": "+left", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-left", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "legacy_command_syntax", "type": "cvar", "help": "", "flags": []},
	{"name": "light_crosshair", "type": "command", "help": "Show texture color at crosshair", "flags": ["cheat"]},
	{"name": "lightcache_maxmiss", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "linefile", "type": "command", "help": "Parses map leak data from .lin file", "flags": ["cheat"]},
	{"name": "listdemo", "type": "command", "help": "List demo file contents.", "flags": ["norecord"]},
	{"name": "listid", "type": "command", "help": "Lists banned users.", "flags": []},
	{"name": "listip", "type": "command", "help": "List IP addresses on the ban list.", "flags": []},
	{"name": "listmodels", "type": "command", "help": "List loaded models.", "flags": []},
	{"name": "listRecentNPCSpeech", "type": "command", "help": "Displays a list of the last 5 lines of speech from NPCs.", "flags": ["sv","norecord"]},
	{"name": "load", "type": "command", "help": "Load a saved game.", "flags": ["norecord"]},
	{"name": "loader_defer_non_critical_jobs", "type": "cvar", "help": "", "flags": []},
	{"name": "loader_dump_table", "type": "command", "help": "", "flags": []},
	{"name": "loader_spew_info", "type": "cvar", "help": "0:Off, 1:Timing, 2:Completions, 3:Late Completions, 4:Creations/Purges, -1:All", "flags": []},
	{"name": "loader_throttle_io", "type": "cvar", "help": "", "flags": []},
	{"name": "locator_background_border_color", "type": "cvar", "help": "The default color for the border.", "flags": ["cl"]},
	{"name": "locator_background_border_thickness", "type": "cvar", "help": "How many pixels the background borders the left and right.", "flags": ["cl"]},
	{"name": "locator_background_color", "type": "cvar", "help": "The default color for the background.", "flags": ["cl"]},
	{"name": "locator_background_shift_x", "type": "cvar", "help": "How many pixels the background is shifted right.", "flags": ["cl"]},
	{"name": "locator_background_shift_y", "type": "cvar", "help": "How many pixels the background is shifted down.", "flags": ["cl"]},
	{"name": "locator_background_style", "type": "cvar", "help": "Setting this to 1 will show rectangle backgrounds behind the items word-bubble pointers.", "flags": ["cl"]},
	{"name": "locator_background_thickness_x", "type": "cvar", "help": "How many pixels the background borders the left and right.", "flags": ["cl"]},
	{"name": "locator_background_thickness_y", "type": "cvar", "help": "How many pixels the background borders the top and bottom.", "flags": ["cl"]},
	{"name": "locator_fade_time", "type": "cvar", "help": "Number of seconds it takes for a lesson to fully fade in/out.", "flags": ["cl"]},
	{"name": "locator_icon_max_size_non_ss", "type": "cvar", "help": "Minimum scale of the icon on the screen", "flags": ["cl"]},
	{"name": "locator_icon_min_size_non_ss", "type": "cvar", "help": "Minimum scale of the icon on the screen", "flags": ["cl"]},
	{"name": "locator_lerp_rest", "type": "cvar", "help": "Number of seconds before moving from the center.", "flags": ["cl"]},
	{"name": "locator_lerp_speed", "type": "cvar", "help": "Speed that static lessons move along the Y axis.", "flags": ["cl"]},
	{"name": "locator_lerp_time", "type": "cvar", "help": "Number of seconds to lerp before reaching final destination", "flags": ["cl"]},
	{"name": "locator_pulse_time", "type": "cvar", "help": "Number of seconds to pulse after changing icon or position", "flags": ["cl"]},
	{"name": "locator_screen_pos_y", "type": "cvar", "help": "Percentage of the lower half of the screen that the locator will draw at when at its reseting position on the hud.", "flags": ["cl"]},
	{"name": "locator_split_len", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "locator_split_maxwide_percent", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "locator_start_at_crosshair", "type": "cvar", "help": "Start position at the crosshair instead of the top middle of the screen.", "flags": ["cl"]},
	{"name": "locator_target_offset_x", "type": "cvar", "help": "How many pixels to offset the locator from the target position.", "flags": ["cl"]},
	{"name": "locator_target_offset_y", "type": "cvar", "help": "How many pixels to offset the locator from the target position.", "flags": ["cl"]},
	{"name": "locator_topdown_style", "type": "cvar", "help": "Topdown games set this to handle distance and offscreen location differently.", "flags": ["cl"]},
	{"name": "log", "type": "command", "help": "Enables logging to file, console, and udp < on | off >.", "flags": []},
	{"name": "log_color", "type": "command", "help": "Set the color of a logging channel.", "flags": ["norecord"]},
	{"name": "log_dumpchannels", "type": "command", "help": "Dumps information about all logging channels.", "flags": ["norecord"]},
	{"name": "log_flags", "type": "command", "help": "Set the flags on a logging channel.", "flags": ["norecord"]},
	{"name": "log_level", "type": "command", "help": "Set the spew level of a logging channel.", "flags": ["norecord"]},
	{"name": "logaddress_add", "type": "command", "help": "Set address and port for remote host <ip:port>.", "flags": []},
	{"name": "logaddress_add_ex", "type": "command", "help": "Set address and port for remote host <ip:port> and supplies a unique token in the UDP packets.", "flags": []},
	{"name": "logaddress_add_http", "type": "command", "help": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes.", "flags": ["sv","log"]},
	{"name": "logaddress_add_ts", "type": "command", "help": "Set address and port for remote host <ip:port> and uses a unique checksum from logaddress_token_secret in the UDP packets.", "flags": []},
	{"name": "logaddress_del", "type": "command", "help": "Remove address and port for remote host <ip:port>.", "flags": []},
	{"name": "logaddress_delall", "type": "command", "help": "Remove all udp addresses being logged to", "flags": []},
	{"name": "logaddress_delall_http", "type": "command", "help": "Remove all http listeners from the dispatch list.", "flags": ["sv","log"]},
	{"name": "logaddress_list", "type": "command", "help": "List all addresses currently being used by logaddress.", "flags": []},
	{"name": "logaddress_list_http", "type": "command", "help": "List all URIs currently receiving server logs", "flags": ["sv","log"]},
	{"name": "logaddress_token_secret", "type": "cvar", "help": "Set a secret string that will be hashed when using logaddress with explicit token hash.", "flags": []},
	{"name": "-lookdown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+lookdown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-lookspin", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+lookspin", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "lookspring", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "lookstrafe", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "+lookup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-lookup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "loopsingleplayermaps", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "lservercfgfile", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "lzma_persistent_buffer", "type": "cvar", "help": "If set, attempt to keep a persistent buffer for the LZMA decoder dictionary. This avoids re-allocating a ~16-64meg buffer for each operation, at the expensive of keeping extra memory around when it is not in-use.", "flags": []},
	{"name": "m_customaccel", "type": "cvar", "help": "Custom mouse acceleration:\n0: custom accelaration disabled\n1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta, m_customaccel_exponent) * m_customaccel_scale + sensitivity)\n2: Same as 1, with but x and y sensitivity are scaled by m_pitch and m_yaw respectively.\n3: mouse_acceleration = pow(raw_mouse_delta, m_customaccel_exponent - 1) * sensitivity", "flags": ["a","cl"]},
	{"name": "m_customaccel_exponent", "type": "cvar", "help": "Mouse move is raised to this power before being scaled by scale factor.", "flags": ["a","cl"]},
	{"name": "m_customaccel_max", "type": "cvar", "help": "Max mouse move scale factor, 0 for no limit", "flags": ["a","cl"]},
	{"name": "m_customaccel_scale", "type": "cvar", "help": "Custom mouse acceleration value.", "flags": ["a","cl"]},
	{"name": "m_filter", "type": "cvar", "help": "Mouse filtering (set this to 1 to average the mouse over 2 frames).", "flags": ["a","cl"]},
	{"name": "m_forward", "type": "cvar", "help": "Mouse forward factor.", "flags": ["a","cl"]},
	{"name": "m_limitedcapture_workaround", "type": "cvar", "help": "Workaround limitations on mouse capture in some environments", "flags": ["cl"]},
	{"name": "m_mouseaccel1", "type": "cvar", "help": "Windows mouse acceleration initial threshold (2x movement).", "flags": ["a","cl"]},
	{"name": "m_mouseaccel2", "type": "cvar", "help": "Windows mouse acceleration secondary threshold (4x movement).", "flags": ["a","cl"]},
	{"name": "m_mousespeed", "type": "cvar", "help": "Windows mouse acceleration (0 to disable, 1 to enable [Windows 2000: enable initial threshold], 2 to enable secondary threshold [Windows 2000 only]).", "flags": ["a","cl"]},
	{"name": "m_pitch", "type": "cvar", "help": "Mouse pitch factor.", "flags": ["a","cl","ss"]},
	{"name": "m_pitch2", "type": "cvar", "help": "Mouse pitch factor.", "flags": ["a","cl","ss_added"]},
	{"name": "m_pitch_inverse", "type": "cvar", "help": "Inverses (negates) mouse pitch. 0 = OFF, 1 = ON.", "flags": ["a","cl"]},
	{"name": "m_rawinput", "type": "cvar", "help": "Use Raw Input for mouse input. 0 = Disabled, 1 = Frame-aligned samples, 2 = Interpolated samples", "flags": ["a","cl"]},
	{"name": "m_side", "type": "cvar", "help": "Mouse side factor.", "flags": ["a","cl"]},
	{"name": "m_yaw", "type": "cvar", "help": "Mouse yaw factor.", "flags": ["a","cl"]},
	{"name": "map", "type": "command", "help": "Start playing on specified map.", "flags": ["norecord"]},
	{"name": "map_background", "type": "command", "help": "Runs a map as the background to the main menu.", "flags": ["norecord"]},
	{"name": "map_commentary", "type": "command", "help": "Start playing, with commentary, on a specified map.", "flags": ["norecord"]},
	{"name": "map_edit", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "map_noareas", "type": "cvar", "help": "Disable area to area connection testing.", "flags": []},
	{"name": "map_wants_save_disable", "type": "cvar", "help": "", "flags": []},
	{"name": "mapcycledisabled", "type": "cvar", "help": "repeats the same map after each match instead of using the map cycle", "flags": ["rep","cl"]},
	{"name": "mapcyclefile", "type": "cvar", "help": "Name of the .txt file used to cycle the maps on multiplayer servers ", "flags": ["sv"]},
	{"name": "mapgroup", "type": "command", "help": "Specify a map group", "flags": ["norecord"]},
	{"name": "maps", "type": "command", "help": "Displays list of maps.", "flags": []},
	{"name": "mat_aaquality", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_aaquality_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "mat_aaquality_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "mat_accelerate_adjust_exposure_down", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_ambient_light_b", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_ambient_light_g", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_ambient_light_r", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_aniso_disable", "type": "cvar", "help": "NOTE: You must change mat_forceaniso after changing this convar for this to take effect", "flags": ["cheat"]},
	{"name": "mat_antialias", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_antialias_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "mat_antialias_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "mat_autoexposure_max", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_autoexposure_max_multiplier", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_autoexposure_min", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_bloom_scalefactor_scalar", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_bloomamount_rate", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_bloomscale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_blur_b", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_blur_g", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_blur_r", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_brightness", "type": "cvar", "help": "Sets the brightness level. Values >1 increase brightness, values <1 decrease brightness.", "flags": ["a"]},
	{"name": "mat_bufferprimitives", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_bumpbasis", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_bumpmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_camerarendertargetoverlaysize", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_clipz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_colcorrection_disableentities", "type": "cvar", "help": "Disable map color-correction entities", "flags": []},
	{"name": "mat_colcorrection_editor", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_colcorrection_forceentitiesclientside", "type": "cvar", "help": "Forces color correction entities to be updated on the client", "flags": ["cheat","cl"]},
	{"name": "mat_color_projection", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "mat_colorcorrection", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mat_compressedtextures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_configcurrent", "type": "command", "help": "show the current video control panel config for the material system", "flags": []},
	{"name": "mat_crosshair", "type": "command", "help": "Display the name of the material under the crosshair", "flags": ["cheat"]},
	{"name": "mat_crosshair_edit", "type": "command", "help": "open the material under the crosshair in the editor defined by mat_crosshair_edit_editor", "flags": ["cheat"]},
	{"name": "mat_crosshair_explorer", "type": "command", "help": "open the material under the crosshair in explorer and highlight the vmt file", "flags": ["cheat"]},
	{"name": "mat_crosshair_printmaterial", "type": "command", "help": "print the material under the crosshair", "flags": ["cheat"]},
	{"name": "mat_crosshair_reloadmaterial", "type": "command", "help": "reload the material under the crosshair", "flags": ["cheat"]},
	{"name": "mat_debug_bloom", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_debug_postprocessing_effects", "type": "cvar", "help": "0 = off, 1 = show post-processing passes in quadrants of the screen, 2 = only apply post-processing to the centre of the screen", "flags": ["cheat","cl"]},
	{"name": "mat_debugalttab", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_debugdepth", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_debugdepthmode", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_debugdepthval", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_debugdepthvalmax", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_defaultlightmap", "type": "cvar", "help": "Default brightness for lightmaps where none have been created in the level.", "flags": []},
	{"name": "mat_depthbias_shadowmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_detail_tex", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_diffuse", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_disable_bloom", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mat_disable_fancy_blending", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_displacementmap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_dof_enabled", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_far_blur_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_far_blur_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_far_focus_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_max_blur_radius", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_dof_near_blur_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_near_blur_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_near_focus_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_override", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_quality", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_draw_resolution", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_draw_resolution_threshold", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_drawflat", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_drawgray", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_drawTexture", "type": "cvar", "help": "Enable debug view texture", "flags": ["cl"]},
	{"name": "mat_drawTextureScale", "type": "cvar", "help": "Debug view texture scale", "flags": ["cl"]},
	{"name": "mat_drawTextureX", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_drawTextureY", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_drawTitleSafe", "type": "cvar", "help": "Enable title safe overlay", "flags": []},
	{"name": "mat_drawwater", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_dynamic_tonemapping", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mat_dynamiclightmaps", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_dynamicPaintmaps", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_edit", "type": "command", "help": "Bring up the material under the crosshair in the editor", "flags": ["cheat"]},
	{"name": "mat_envmapsize", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_envmaptgasize", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_error_texture_advanced", "type": "cvar", "help": "Whether to try and replace error textures with more meaningful ones for gameplay.\n0 = off, default error texture\n1 = base color based on VRAD reflectivity data applied to texture specified in mat_error_texture_advanced_basetexture\n2 = same as 1 but also replace water, grates and glass with meaningful textures", "flags": ["a"]},
	{"name": "mat_error_texture_advanced_basetexture", "type": "cvar", "help": "Which texture should be used as a base for reflectivity-based error textures (see mat_error_texture_advanced).\nKeep in mind that a color value gets multiplied on top, so this should be mostly white or light gray for the best effect.\nRequires reloading the map.", "flags": ["a"]},
	{"name": "mat_error_texture_replace", "type": "cvar", "help": "Replace every non-translucent texture with error texture. Requires reloading the map.\n", "flags": []},
	{"name": "mat_error_texture_type", "type": "cvar", "help": "Error texture to use on world geometry: 0=unlit purple-black, 1=lit grey. Requires reloading the map.\n", "flags": ["a"]},
	{"name": "mat_error_texture_type_cubemap", "type": "cvar", "help": "Error texture to use on cubemaps: 0=unlit purple-black, 1=black, 2=engine/defaultcubemap.\n", "flags": ["a"]},
	{"name": "mat_exclude_async_update", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_exposure_center_region_x", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_exposure_center_region_y", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_fastclip", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_fastnobump", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_fastspecular", "type": "cvar", "help": "Enable/Disable specularity for visual testing.  Will not reload materials and will not affect perf.", "flags": []},
	{"name": "mat_fillrate", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_filterlightmaps", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_filtertextures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_flashlight_clip", "type": "cvar", "help": "Whether to clip flashlights between near/far plane\n", "flags": []},
	{"name": "mat_force_bloom", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_min_avglum", "type": "cvar", "help": "Override. Old default was 3.0", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_percent_bright_pixels", "type": "cvar", "help": "Override. Old value was 2.0", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_percent_target", "type": "cvar", "help": "Override. Old default was 60.", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_scale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_forceaniso", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_forceaniso_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "mat_forceaniso_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "mat_forcedynamic", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_forcehardwaresync", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_framebuffercopyoverlaysize", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_fullbright", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_fxaa_edge_sharpness_C", "type": "cvar", "help": "Does not affect PS3 which uses FXAA_CONSOLE_PS3_EDGE_SHARPNESS define due to being ALU bound (and only safe values are 2, 4, 8). On X360, (2.0 - really soft, good for vector graphics inputs), (4.0 - is softer), (8.0 - is sharper, default)", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_C", "type": "cvar", "help": "Does not affect PS3 which uses FXAA_CONSOLE_PS3_EDGE_THRESHOLD define due to being ALU bound (and only safe values are 1/4, 1/8). On X360, (0.125 - default, leaves less aliasing, but is softer, 0.25 - leaves more aliasing and is sharper)", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_min_C", "type": "cvar", "help": "Trims the algorithm from processing darks. Does not affect PS3 due to being ALU bound. (0.04 - slower and less aliasing in darks, 0.05 - default, 0.06 - faster but more aliasing in darks). Special note: when using FXAA_GREEN_AS_LUMA likely want to set this to zero", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_min_Q", "type": "cvar", "help": "Trims the algorithm from processing darks: (0.0312 - visible limit, slower), (0.0625 - high quality, faster), (0.0833 - upper limit, the start of fisible unfiltered edges). Special note: when using FXAA_GREEN_AS_LUMA, likely want to set this to zero", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_Q", "type": "cvar", "help": "The minimum amount of local contrast required to apply algorithm: (0.063 - overkill, slower), (0.125 - high quality), (0.166 - default), (0.250 - low quality), (0.333 - too little, faster)", "flags": ["cl"]},
	{"name": "mat_fxaa_subpixel_C", "type": "cvar", "help": "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Console): (0.33 - sharper), (0.5 - default)", "flags": ["cl"]},
	{"name": "mat_fxaa_subpixel_Q", "type": "cvar", "help": "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Quality): (0.0 - off), (1.0 - upper limit, softer), default = 0.75", "flags": ["cl"]},
	{"name": "mat_grain_enable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_hdr_enabled", "type": "command", "help": "Report if HDR is enabled for debugging", "flags": []},
	{"name": "mat_hdr_level", "type": "cvar", "help": "Set to 0 for no HDR, 1 for LDR+bloom on HDR maps, and 2 for full HDR on HDR maps.", "flags": []},
	{"name": "mat_hdr_uncapexposure", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_hsv", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_hwmorph_min_flex_count", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_info", "type": "command", "help": "Shows material system info", "flags": []},
	{"name": "mat_leafvis", "type": "cvar", "help": "Draw wireframe of: [0] nothing, [1] current leaf, [2] entire vis cluster, or [3] entire PVS (see mat_leafvis_draw_mask for what does/doesn't get drawn)", "flags": ["cheat"]},
	{"name": "mat_leafvis_draw_mask", "type": "cvar", "help": "A bitfield which affects leaf visibility debug rendering.  -1: show all, bit 0: render PVS-visible leafs, bit 1: render PVS- and frustum-visible leafs, bit 2: render frustum bounds, bit 3: render leaves out of PVS.", "flags": []},
	{"name": "mat_leafvis_freeze", "type": "cvar", "help": "If set to 1, uses the last known leaf visibility data for visualization.  If set to 0, updates based on camera movement.", "flags": []},
	{"name": "mat_leafvis_update_every_frame", "type": "cvar", "help": "Updates leafvis debug render every frame (expensive)", "flags": []},
	{"name": "mat_levelflush", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_lightmap_pfms", "type": "cvar", "help": "Outputs .pfm files containing lightmap data for each lightmap page when a level exits.", "flags": []},
	{"name": "mat_loadtextures", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_edge_scale_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_midtone_mask_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_scale_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_vignette_end_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_vignette_start_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_lpreview_mode", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_luxels", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_max_worldmesh_vertices", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_maxframelatency", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_measurefillrate", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_mipmaptextures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_morphstats", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_motion_blur_enabled", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_motion_blur_falling_intensity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_falling_max", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_falling_min", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_forward_enabled", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_percent_of_screen_max", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_motion_blur_roll_intensity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_rotation_intensity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_strength", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_norendering", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_normalmaps", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_normals", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_object_motion_blur_enable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_object_motion_blur_model_scale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_paint_enabled", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_parallaxmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_pbr_parallax_dither_amount", "type": "cvar", "help": "The level to which pbr parallax dithering can increase steps. Higher numbers are more performance-heavy.", "flags": []},
	{"name": "mat_pbr_parallaxmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_pbr_parallaxmap_quality", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_phong", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_picmip", "type": "cvar", "help": "Texture detail setting, the lower the number the higher the quality", "flags": []},
	{"name": "mat_postprocess_enable", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_postprocess_x", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_postprocess_y", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_powersavingsmode", "type": "cvar", "help": "Power Savings Mode", "flags": ["a"]},
	{"name": "mat_preview", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_print_top_model_vert_counts", "type": "cvar", "help": "Constantly print to screen the top N models as measured by total faces rendered this frame", "flags": []},
	{"name": "mat_processtoolvars", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_proxy", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_queue_mode", "type": "cvar", "help": "The queue/thread mode the material system should use: -1=default, 0=synchronous single thread, 1=queued single thread, 2=queued multithreaded", "flags": []},
	{"name": "mat_queue_priority", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_queue_report", "type": "cvar", "help": "Report thread stalls.  Positive number will filter by stalls >= time in ms.  -1 reports all locks.", "flags": ["a"]},
	{"name": "mat_reducefillrate", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_reduceparticles", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_reloadallmaterials", "type": "command", "help": "Reloads all materials", "flags": ["cheat"]},
	{"name": "mat_reloadmaterial", "type": "command", "help": "Reloads a single material", "flags": ["cheat"]},
	{"name": "mat_reloadtextures", "type": "command", "help": "Reloads all textures", "flags": ["cheat"]},
	{"name": "mat_rendered_faces_count", "type": "cvar", "help": "Set to N to count how many faces each model draws each frame and spew the top N offenders from the last 150 frames (use 'mat_rendered_faces_spew' to spew all models rendered in the current frame)", "flags": ["cheat"]},
	{"name": "mat_rendered_faces_spew", "type": "command", "help": "'mat_rendered_faces_spew <n>' Spew the number of faces rendered for the top N models used this frame (mat_rendered_faces_count must be set to use this)", "flags": []},
	{"name": "mat_report_queue_status", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_reporthwmorphmemory", "type": "command", "help": "Reports the amount of size in bytes taken up by hardware morph textures.", "flags": ["cheat"]},
	{"name": "mat_resolveFullFrameDepth", "type": "cvar", "help": "Enable depth resolve to a texture. 0=disable, 1=enable via resolve tricks if supported in hw, otherwise disable, 2=force extra depth only pass", "flags": ["cheat"]},
	{"name": "mat_reversedepth", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_savechanges", "type": "command", "help": "saves current video configuration to the registry", "flags": []},
	{"name": "mat_setvideomode", "type": "command", "help": "sets the width, height, windowed state of the material system", "flags": []},
	{"name": "mat_shadowstate", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_show_histogram", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_show_texture_memory_usage", "type": "cvar", "help": "Display the texture memory usage on the HUD.", "flags": ["cheat","numeric"]},
	{"name": "mat_showcamerarendertarget", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_showenvmapmask", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_showframebuffertexture", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_showlightmappage", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_showlowresimage", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_showmaterials", "type": "command", "help": "Show materials.", "flags": []},
	{"name": "mat_showmaterialsverbose", "type": "command", "help": "Show materials (verbose version).", "flags": []},
	{"name": "mat_showmiplevels", "type": "cvar", "help": "color-code miplevels 2: normalmaps, 1: everything else", "flags": ["cheat"]},
	{"name": "mat_showtextures", "type": "command", "help": "Show used textures.", "flags": []},
	{"name": "mat_showwatertextures", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_slopescaledepthbias_shadowmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_software_aa_blur_one_pixel_lines", "type": "cvar", "help": "How much software AA should blur one-pixel thick lines: (0.0 - none), (1.0 - lots)", "flags": ["cl"]},
	{"name": "mat_software_aa_debug", "type": "cvar", "help": "Software AA debug mode: (0 - off), (1 - show number of 'unlike' samples: 0->black, 1->red, 2->green, 3->blue), (2 - show anti-alias blend strength), (3 - show averaged 'unlike' colour)", "flags": ["cl"]},
	{"name": "mat_software_aa_edge_threshold", "type": "cvar", "help": "Software AA - adjusts the sensitivity of the software AA shader's edge detection (default 1.0 - a lower value will soften more edges, a higher value will soften fewer)", "flags": ["cl"]},
	{"name": "mat_software_aa_quality", "type": "cvar", "help": "Software AA quality mode: (0 - 5-tap filter), (1 - 9-tap filter)", "flags": ["cl"]},
	{"name": "mat_software_aa_strength", "type": "cvar", "help": "Software AA - perform a software anti-aliasing post-process (an alternative/supplement to MSAA). This value sets the strength of the effect: (0.0 - off), (1.0 - full)", "flags": []},
	{"name": "mat_software_aa_tap_offset", "type": "cvar", "help": "Software AA - adjusts the displacement of the taps used by the software AA shader (default 1.0 - a lower value will make the image sharper, higher will make it blurrier)", "flags": ["cl"]},
	{"name": "mat_softwarelighting", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_softwareskin", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_solidenergy_refract", "type": "cvar", "help": "Enables/disables the refraction effect in fizzlers", "flags": []},
	{"name": "mat_specular", "type": "cvar", "help": "Enable/Disable specularity for perf testing.  Will cause a material reload upon change.", "flags": []},
	{"name": "mat_spew_long_frames", "type": "cvar", "help": "warn about frames that go over 66ms for CERT purposes.", "flags": []},
	{"name": "mat_spew_on_texture_size", "type": "cvar", "help": "Print warnings about vtf content that isn't of the expected size", "flags": []},
	{"name": "mat_spewalloc", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "mat_spewvertexandpixelshaders", "type": "command", "help": "Print all vertex and pixel shaders currently loaded to the console", "flags": []},
	{"name": "mat_stub", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_surfaceid", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_surfacemat", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "-mat_texture_list", "type": "command", "help": "", "flags": []},
	{"name": "+mat_texture_list", "type": "command", "help": "", "flags": []},
	{"name": "mat_texture_list", "type": "cvar", "help": "For debugging, show a list of used textures per frame", "flags": ["cheat"]},
	{"name": "mat_texture_list_all", "type": "cvar", "help": "If this is nonzero, then the texture list panel will show all currently-loaded textures.", "flags": ["numeric"]},
	{"name": "mat_texture_list_all_frames", "type": "cvar", "help": "How many frames to sample texture memory for all textures.", "flags": []},
	{"name": "mat_texture_list_exclude_editing", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_texture_list_txlod", "type": "command", "help": "Adjust LOD of the last viewed texture +1 to inc resolution, -1 to dec resolution", "flags": ["norecord"]},
	{"name": "mat_texture_list_view", "type": "cvar", "help": "If this is nonzero, then the texture list panel will render thumbnails of currently-loaded textures.", "flags": ["numeric"]},
	{"name": "mat_texture_tracking", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_texturestreaming", "type": "cvar", "help": "Defer asynchronous loading of high-resolution textures.", "flags": []},
	{"name": "mat_tonemap_algorithm", "type": "cvar", "help": "0 = Original Algorithm 1 = New Algorithm", "flags": ["cheat","cl"]},
	{"name": "mat_triplebuffered", "type": "cvar", "help": "This means we want triple buffering if we are fullscreen and vsync'd", "flags": []},
	{"name": "mat_updateconvars", "type": "command", "help": "updates the video config convars", "flags": []},
	{"name": "mat_use_compressed_hdr_textures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_verbose_texture_gen", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_viewportscale", "type": "cvar", "help": "Scale down the main viewport (to reduce GPU impact on CPU profiling)", "flags": ["cheat","cl"]},
	{"name": "mat_viewportupscale", "type": "cvar", "help": "Scale the viewport back up", "flags": ["cheat","cl"]},
	{"name": "mat_vignette_enable", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "mat_vsync", "type": "cvar", "help": "Force sync to vertical retrace", "flags": []},
	{"name": "mat_wateroverlaysize", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_wireframe", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_yuv", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "max_noisy_blobs_per_second", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "max_sound_channels_per_paint_stream", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "maxplayers", "type": "command", "help": "Change the maximum number of players allowed on this server.", "flags": []},
	{"name": "mc_accel_band_size", "type": "cvar", "help": "Percentage of half the screen width or height.", "flags": ["a","cl"]},
	{"name": "mc_dead_zone_radius", "type": "cvar", "help": "0 to 0.9. 0 being just around the center of the screen and 1 being the edges of the screen.", "flags": ["a","cl"]},
	{"name": "mc_max_pitchrate", "type": "cvar", "help": "(degrees/sec)", "flags": ["a","cl"]},
	{"name": "mc_max_yawrate", "type": "cvar", "help": "(degrees/sec)", "flags": ["a","cl"]},
	{"name": "mdlcache_dump_dictionary_state", "type": "command", "help": "Dump the state of the MDLCache Dictionary.", "flags": []},
	{"name": "mem_compact", "type": "command", "help": "", "flags": []},
	{"name": "mem_dump", "type": "command", "help": "Dump memory stats to text file.", "flags": []},
	{"name": "mem_dumpstats", "type": "cvar", "help": "Dump current and max heap usage info to console at end of frame ( set to 2 for continuous output )\n", "flags": []},
	{"name": "mem_dumpvballocs", "type": "command", "help": "Dump VB memory allocation stats.", "flags": ["cheat"]},
	{"name": "mem_eat", "type": "command", "help": "", "flags": []},
	{"name": "mem_force_flush", "type": "cvar", "help": "Force cache flush of unlocked resources on every alloc", "flags": []},
	{"name": "mem_force_flush_section", "type": "cvar", "help": "Cache section to restrict mem_force_flush", "flags": []},
	{"name": "mem_incremental_compact", "type": "command", "help": "", "flags": []},
	{"name": "mem_incremental_compact_rate", "type": "cvar", "help": "Rate at which to attempt internal heap compation", "flags": ["cheat"]},
	{"name": "mem_level", "type": "cvar", "help": "Memory Level - Default: High", "flags": []},
	{"name": "mem_periodicdumps", "type": "cvar", "help": "Write periodic memstats dumps every n seconds.", "flags": []},
	{"name": "mem_test", "type": "command", "help": "", "flags": []},
	{"name": "mem_test_each_frame", "type": "cvar", "help": "Run heap check at end of every frame\n", "flags": []},
	{"name": "mem_test_quiet", "type": "cvar", "help": "Don't print stats when memtesting", "flags": []},
	{"name": "mem_vcollide", "type": "command", "help": "Dumps the memory used by vcollides", "flags": []},
	{"name": "mem_verify", "type": "command", "help": "Verify the validity of the heap", "flags": []},
	{"name": "memory", "type": "command", "help": "Print memory stats.", "flags": []},
	{"name": "metropolice_charge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "metropolice_chase_use_follow", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "metropolice_move_and_melee", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "min_adjusted_pitch_percentage", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "miniprofiler_dump", "type": "cvar", "help": "", "flags": []},
	{"name": "minisave", "type": "command", "help": "Saves game (for current level only!)", "flags": ["norecord"]},
	{"name": "mm_datacenter_debugprint", "type": "command", "help": "Shows information retrieved from data center", "flags": []},
	{"name": "mm_debugprint", "type": "command", "help": "Show debug information about current matchmaking session", "flags": []},
	{"name": "mm_dedicated_force_servers", "type": "cvar", "help": "Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers.\nUse syntax `publicip1:port|privateip1:port,publicip2:port|privateip2:port` if your server is behind NAT.\nIf the server is behind NAT, you can specify `0.0.0.0|privateip:port` and if server port is in the list of `mm_server_search_lan_ports` its public address should be automatically detected.", "flags": []},
	{"name": "mm_dedicated_search_maxping", "type": "cvar", "help": "Longest preferred ping to dedicated servers for games", "flags": ["a"]},
	{"name": "mm_dlc_debugprint", "type": "command", "help": "Shows information about dlc", "flags": []},
	{"name": "mm_matchmaking_dlcsquery", "type": "cvar", "help": "", "flags": []},
	{"name": "mm_matchmaking_version", "type": "cvar", "help": "", "flags": []},
	{"name": "mm_server_search_lan_ports", "type": "cvar", "help": "Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.", "flags": ["a"]},
	{"name": "mm_session_search_ping_buckets", "type": "cvar", "help": "", "flags": []},
	{"name": "mm_session_search_qos_timeout", "type": "cvar", "help": "", "flags": []},
	{"name": "mm_session_sys_kick_ban_duration", "type": "cvar", "help": "", "flags": []},
	{"name": "mm_session_sys_pkey", "type": "cvar", "help": "", "flags": []},
	{"name": "mm_tu_string", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_check_vcollide", "type": "cvar", "help": "Check all vcollides on load", "flags": []},
	{"name": "mod_combiner_info", "type": "command", "help": "debug spew for Combiner Info", "flags": []},
	{"name": "mod_dont_load_vertices", "type": "cvar", "help": "For the dedicated server, supress loading model vertex data", "flags": []},
	{"name": "mod_forcedata", "type": "cvar", "help": "Forces all model file data into cache on model load.", "flags": []},
	{"name": "mod_forcetouchdata", "type": "cvar", "help": "Forces all model file data into cache on model load.", "flags": []},
	{"name": "mod_load_anims_async", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_load_fakestall", "type": "cvar", "help": "Forces all ANI file loading to stall for specified ms\n", "flags": []},
	{"name": "mod_load_mesh_async", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_load_preload", "type": "cvar", "help": "Indicates how far ahead in seconds to preload animations.", "flags": []},
	{"name": "mod_load_showstall", "type": "cvar", "help": "1 - show hitches , 2 - show stalls", "flags": []},
	{"name": "mod_load_vcollide_async", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_lock_mdls_on_load", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_lock_meshes_on_load", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_test_mesh_not_available", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_test_not_available", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_test_verts_not_available", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_touchalldata", "type": "cvar", "help": "Touch model data during level startup", "flags": []},
	{"name": "mod_trace_load", "type": "cvar", "help": "", "flags": []},
	{"name": "monk_headshot_freq", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "morph_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "morph_path", "type": "cvar", "help": "", "flags": []},
	{"name": "mortar_visualize", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "motdfile", "type": "cvar", "help": "The MOTD file to load.", "flags": ["sv"]},
	{"name": "-mouse_menu", "type": "command", "help": "Executes the highlighted button on the radial menu (if cl_fastradial is 1)", "flags": ["cl"]},
	{"name": "+mouse_menu", "type": "command", "help": "Opens a menu while held", "flags": ["cl"]},
	{"name": "+mouse_menu_playtest", "type": "command", "help": "Opens a menu while held", "flags": ["cl"]},
	{"name": "-mouse_menu_playtest", "type": "command", "help": "Executes the highlighted button on the radial menu (if cl_fastradial is 1)", "flags": ["cl"]},
	{"name": "-mouse_menu_taunt", "type": "command", "help": "Executes the highlighted button on the radial menu (if cl_fastradial is 1)", "flags": ["cl"]},
	{"name": "+mouse_menu_taunt", "type": "command", "help": "Opens a menu while held", "flags": ["cl"]},
	{"name": "move_during_ui", "type": "cvar", "help": "Allows player movement while UI is visible.", "flags": ["a","cl"]},
	{"name": "move_stick_aggression_strength", "type": "cvar", "help": "The change in position in stick will also contribute to the movement, making for snappier response.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_aggression_strength2", "type": "cvar", "help": "The change in position in stick will also contribute to the movement, making for snappier response.", "flags": ["a","cl","ss_added"]},
	{"name": "move_stick_aggressive", "type": "cvar", "help": "The change in position in stick will also contribute to the movement, making for snappier response.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_aggressive2", "type": "cvar", "help": "The change in position in stick will also contribute to the movement, making for snappier response.", "flags": ["a","cl","ss_added"]},
	{"name": "move_stick_circular_deadzone_max", "type": "cvar", "help": "Stick inputs at this deflection or more appear as one.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_circular_deadzone_max2", "type": "cvar", "help": "Stick inputs at this deflection or more appear as one.", "flags": ["a","cl","ss_added"]},
	{"name": "move_stick_circular_deadzone_min", "type": "cvar", "help": "Stick inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_circular_deadzone_min2", "type": "cvar", "help": "Stick inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss_added"]},
	{"name": "move_stick_response_curve", "type": "cvar", "help": "Larger values allow finer control when feathering the stick.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_response_curve2", "type": "cvar", "help": "Larger values allow finer control when feathering the stick.", "flags": ["a","cl","ss_added"]},
	{"name": "move_stick_square_deadzone_forward", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_square_deadzone_forward2", "type": "cvar", "help": "Non zero values will bias aim toward straight vertical aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "move_stick_square_deadzone_strafe", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss"]},
	{"name": "move_stick_square_deadzone_strafe2", "type": "cvar", "help": "Non zero values will bias aim toward straight horizontal aiming. Not recommended.", "flags": ["a","cl","ss_added"]},
	{"name": "move_touchpad_circular_deadzone_min", "type": "cvar", "help": "touchpad inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss"]},
	{"name": "move_touchpad_circular_deadzone_min2", "type": "cvar", "help": "touchpad inputs at this deflection or less appear as zero.", "flags": ["a","cl","ss_added"]},
	{"name": "move_touchpad_sensitivity_forward", "type": "cvar", "help": "touchpad's yaw contribution to Aim", "flags": ["a","cl","ss"]},
	{"name": "move_touchpad_sensitivity_forward2", "type": "cvar", "help": "touchpad's yaw contribution to Aim", "flags": ["a","cl","ss_added"]},
	{"name": "move_touchpad_sensitivity_strafe", "type": "cvar", "help": "touchpad's pitch contribution to Aim", "flags": ["a","cl","ss"]},
	{"name": "move_touchpad_sensitivity_strafe2", "type": "cvar", "help": "touchpad's pitch contribution to Aim", "flags": ["a","cl","ss_added"]},
	{"name": "move_touchpad_square_deadzone_forward", "type": "cvar", "help": "Non zero values will bias forward movement to zero for better strafe lines.", "flags": ["a","cl","ss"]},
	{"name": "move_touchpad_square_deadzone_forward2", "type": "cvar", "help": "Non zero values will bias forward movement to zero for better strafe lines.", "flags": ["a","cl","ss_added"]},
	{"name": "move_touchpad_square_deadzone_strafe", "type": "cvar", "help": "Non zero values will bias strafe movement to zero to help run directly forward more easily", "flags": ["a","cl","ss"]},
	{"name": "move_touchpad_square_deadzone_strafe2", "type": "cvar", "help": "Non zero values will bias strafe movement to zero to help run directly forward more easily", "flags": ["a","cl","ss_added"]},
	{"name": "-movedown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+movedown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+moveleft", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-moveleft", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "movement_anim_playback_minrate", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "+moveright", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-moveright", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-moveup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+moveup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "mp_allowNPCs", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_allowspectators", "type": "cvar", "help": "toggles whether the server allows spectator mode or not", "flags": ["rep","cl"]},
	{"name": "mp_auto_accept_team_taunt", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mp_autocrosshair", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_bot_fling_trail", "type": "cvar", "help": "When bots reach a certain velocity in the air, they will show a trail behind them (0 = off, 1 = on, 2 = fun)", "flags": ["cheat","cl"]},
	{"name": "mp_bot_fling_trail_kill_scaler", "type": "cvar", "help": "The scaler that determines how close to a portal a player has to be (when flinging towards it) before the trail turns off", "flags": ["cheat","cl"]},
	{"name": "mp_buy_anywhere", "type": "cvar", "help": "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.", "flags": ["nf","rep","cl"]},
	{"name": "mp_buy_during_immunity", "type": "cvar", "help": "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.", "flags": ["nf","rep","cl"]},
	{"name": "mp_clan_ready_signal", "type": "cvar", "help": "Text that team leader from each team must speak for the match to begin", "flags": ["sv"]},
	{"name": "mp_clan_readyrestart", "type": "cvar", "help": "If non-zero, game will restart once someone from each team gives the ready signal", "flags": ["sv"]},
	{"name": "mp_defaultteam", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "mp_dev_wait_for_other_player", "type": "cvar", "help": "Force waiting for the other player.", "flags": ["sv"]},
	{"name": "mp_disable_autokick", "type": "command", "help": "Prevents a userid from being auto-kicked", "flags": ["sv"]},
	{"name": "mp_dump_client_completion_data", "type": "command", "help": "Prints player completion data for all maps.", "flags": ["cl"]},
	{"name": "mp_dump_server_completion_data", "type": "command", "help": "Prints player completion data for all maps.", "flags": ["sv"]},
	{"name": "mp_earn_taunt", "type": "command", "help": "Unlocks, owns, and puts a taunt in the gesture wheel.", "flags": ["sv"]},
	{"name": "mp_fadetoblack", "type": "cvar", "help": "fade a player's screen to black when he dies", "flags": ["nf","rep","cl"]},
	{"name": "mp_falldamage", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_flashlight", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_footsteps", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_forcecamera", "type": "cvar", "help": "Restricts spectator modes for dead players. 0 = Any team. 1 = Only own team. 2 = No one; fade to black on death (previously mp_fadetoblack).", "flags": ["rep","cl"]},
	{"name": "mp_forcerespawn", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_fraglimit", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_friendlyfire", "type": "cvar", "help": "Allows team members to injure other members of their team", "flags": ["nf","rep","cl"]},
	{"name": "mp_gib_all_bots", "type": "command", "help": "Kills all bots doing CRUSH damage which kills them.", "flags": ["sv","cheat"]},
	{"name": "mp_grab_use_vm", "type": "cvar", "help": "Use viewmodel grab when in multiplayer (not coop!) gameplay", "flags": ["sv"]},
	{"name": "mp_lock_all_taunts", "type": "command", "help": "Locks all available taunts and removes them from the gesture wheel.", "flags": ["sv"]},
	{"name": "mp_lock_taunt", "type": "command", "help": "Locks a taunt and removes it from the gesture wheel.", "flags": ["sv"]},
	{"name": "mp_mark_all_maps_complete", "type": "command", "help": "Marks all levels as complete in the save file.", "flags": ["sv"]},
	{"name": "mp_mark_all_maps_incomplete", "type": "command", "help": "Marks all levels as incomplete in the save file.", "flags": ["sv"]},
	{"name": "mp_mark_course_complete", "type": "command", "help": "Marks all levels in a branch as complete in the save file.", "flags": ["sv"]},
	{"name": "mp_match_restart_delay", "type": "cvar", "help": "Time (in seconds) until a match restarts.", "flags": ["rep","cl"]},
	{"name": "mp_radar_showall", "type": "cvar", "help": "Determines who should see all. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.", "flags": ["rep","cl"]},
	{"name": "mp_restartgame", "type": "cvar", "help": "If non-zero, game will restart in the specified number of seconds", "flags": ["sv"]},
	{"name": "mp_should_gib_bots", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "mp_suicide_time", "type": "cvar", "help": "Specifies number of seconds required to wait before another suicide.", "flags": ["sv","cheat","rep"]},
	{"name": "mp_taunt_position_blend_rate", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mp_teamlist", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_teammates_are_enemies", "type": "cvar", "help": "When set, your teammates act as enemies and all players are valid targets.", "flags": ["nf","rep","cl"]},
	{"name": "mp_teamoverride", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "mp_teamplay", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_timelimit", "type": "cvar", "help": "game time per map in minutes", "flags": ["nf","rep","cl"]},
	{"name": "mp_usehwmmodels", "type": "cvar", "help": "Enable the use of the hw morph models. (-1 = never, 1 = always, 0 = based upon GPU)", "flags": ["cl"]},
	{"name": "mp_usehwmvcds", "type": "cvar", "help": "Enable the use of the hw morph vcd(s). (-1 = never, 1 = always, 0 = based upon GPU)", "flags": ["cl"]},
	{"name": "mp_verbose_changelevel_spew", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "mp_wait_for_other_player_notconnecting_timeout", "type": "cvar", "help": "Maximum time that we wait in the transition loading screen after we fully loaded for partner to start loading.", "flags": ["sv","cheat"]},
	{"name": "mp_wait_for_other_player_timeout", "type": "cvar", "help": "Maximum time that we wait in the transition loading screen for the other player.", "flags": ["sv","cheat"]},
	{"name": "mp_waitingforplayers_cancel", "type": "cvar", "help": "Set to 1 to end the WaitingForPlayers period.", "flags": ["sv"]},
	{"name": "mp_waitingforplayers_restart", "type": "cvar", "help": "Set to 1 to start or restart the WaitingForPlayers period.", "flags": ["sv"]},
	{"name": "mp_waitingforplayers_time", "type": "cvar", "help": "WaitingForPlayers time length in seconds", "flags": ["sv"]},
	{"name": "mp_weaponstay", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "ms_player_dump_properties", "type": "command", "help": "Prints a dump the current players property data", "flags": ["cheat"]},
	{"name": "multvar", "type": "command", "help": "Multiply specified convar value.", "flags": ["norecord"]},
	{"name": "muzzleflash_light", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mv_acceleration_min", "type": "cvar", "help": "Minimum acceleration value, the acceleration will be clamped if lower than this.", "flags": ["cheat","rep","cl"]},
	{"name": "mv_bhop", "type": "cvar", "help": "Enable bunnyhop speed boost", "flags": ["cheat","rep","cl"]},
	{"name": "mv_duckjump", "type": "cvar", "help": "Enables jumping while ducked.", "flags": ["cheat","rep","cl"]},
	{"name": "mv_uncrouch_on_jump", "type": "cvar", "help": "Uncrouch when jump occurs", "flags": ["cheat","rep","cl"]},
	{"name": "mv_use_new_viewpunch", "type": "cvar", "help": "Use the new view punch, which doesn't use a velocity", "flags": ["cheat","rep","cl"]},
	{"name": "name", "type": "cvar", "help": "Current user name", "flags": ["a","user","print","server_can_execute","ss"]},
	{"name": "name2", "type": "cvar", "help": "Current user name", "flags": ["a","user","print","server_can_execute","ss_added"]},
	{"name": "net_allow_multicast", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "net_chan_limit_msec", "type": "cvar", "help": "Netchannel processing is limited to so many milliseconds, abort connection if exceeding budget", "flags": []},
	{"name": "net_chan_stats_dump", "type": "cvar", "help": "Netchannel statistics will dump in the logs upon request", "flags": []},
	{"name": "net_chan_stats_dump_top_msgs", "type": "cvar", "help": "Netchannel statistics will dump so many top messages in each category", "flags": []},
	{"name": "net_chan_stats_lru", "type": "cvar", "help": "Netchannel statistics LRU accumulation buffer size", "flags": []},
	{"name": "net_channels", "type": "command", "help": "Shows net channel info", "flags": []},
	{"name": "net_compressvoice", "type": "cvar", "help": "Attempt to compress out of band voice payloads (360 only).", "flags": []},
	{"name": "net_connections_stats", "type": "command", "help": "Print detailed network statistics for each network connection", "flags": []},
	{"name": "net_drawslider", "type": "cvar", "help": "Draw completion slider during signon", "flags": []},
	{"name": "net_droponsendoverflow", "type": "cvar", "help": "If enabled, channel will drop client when sending too much data causes buffer overrun", "flags": []},
	{"name": "net_dumpeventstats", "type": "command", "help": "Dumps out a report of game event network usage", "flags": ["cheat"]},
	{"name": "net_earliertempents", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "net_graph", "type": "cvar", "help": "Draw the network usage data, = 2 prints in/out data, = 3 draws data on payload,", "flags": ["a","cl"]},
	{"name": "net_graphheight", "type": "cvar", "help": "Height of netgraph panel", "flags": ["a","cl"]},
	{"name": "net_graphholdsvframerate", "type": "cvar", "help": "Hold worst case in server framerate line.", "flags": ["a","cl"]},
	{"name": "net_graphipc", "type": "cvar", "help": "Show IPCs on netgraph panel", "flags": ["a","cl"]},
	{"name": "net_graphmsecs", "type": "cvar", "help": "The latency graph represents this many milliseconds.", "flags": ["a","cl"]},
	{"name": "net_graphpos", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "net_graphproportionalfont", "type": "cvar", "help": "Determines whether netgraph font is proportional or not", "flags": ["a","cl"]},
	{"name": "net_graphshowinterp", "type": "cvar", "help": "Draw the interpolation graph.", "flags": ["a","cl"]},
	{"name": "net_graphshowlatency", "type": "cvar", "help": "Draw the ping/packet loss graph.", "flags": ["a","cl"]},
	{"name": "net_graphshowsvframerate", "type": "cvar", "help": "Draw the server framerate graph.", "flags": ["a","cl"]},
	{"name": "net_graphsolid", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "net_graphtext", "type": "cvar", "help": "Draw text fields", "flags": ["a","cl"]},
	{"name": "net_maxcleartime", "type": "cvar", "help": "Max # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit).", "flags": []},
	{"name": "net_maxfilesize", "type": "cvar", "help": "Maximum allowed file size for uploading in MB", "flags": []},
	{"name": "net_maxfragments", "type": "cvar", "help": "Max fragment bytes per packet", "flags": []},
	{"name": "net_maxroutable", "type": "cvar", "help": "Requested max packet size before packets are 'split'.", "flags": ["a","user"]},
	{"name": "net_public_adr", "type": "cvar", "help": "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: (\"x.x.x.x\" )", "flags": []},
	{"name": "net_queue_trace", "type": "cvar", "help": "", "flags": []},
	{"name": "net_scale", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "net_showeventlisteners", "type": "cvar", "help": "Show listening addition/removals", "flags": []},
	{"name": "net_showevents", "type": "cvar", "help": "Dump game events to console (1=client only, 2=all).", "flags": []},
	{"name": "net_showreliablesounds", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "net_showsplits", "type": "cvar", "help": "Show info about packet splits", "flags": []},
	{"name": "net_showtcp", "type": "cvar", "help": "Dump TCP stream summary to console", "flags": []},
	{"name": "net_showudp", "type": "cvar", "help": "Dump UDP packets summary to console", "flags": []},
	{"name": "net_showudp_oob", "type": "cvar", "help": "Dump OOB UDP packets summary to console", "flags": []},
	{"name": "net_showudp_remoteonly", "type": "cvar", "help": "Dump non-loopback udp only", "flags": []},
	{"name": "net_showusercmd", "type": "cvar", "help": "Show user command encoding", "flags": ["cl"]},
	{"name": "net_splitrate", "type": "cvar", "help": "Number of fragments for a splitpacket that can be sent per frame", "flags": []},
	{"name": "net_start", "type": "command", "help": "Inits multiplayer network sockets", "flags": []},
	{"name": "net_status", "type": "command", "help": "Shows current network status", "flags": []},
	{"name": "net_steamcnx_allowrelay", "type": "cvar", "help": "Allow steam connections to attempt to use relay servers as fallback (best if specified on command line:  +net_steamcnx_allowrelay 1)", "flags": ["a"]},
	{"name": "net_steamcnx_debug", "type": "cvar", "help": "Show debug spew for steam based connections, 2 shows all network traffic for steam sockets.", "flags": []},
	{"name": "net_steamcnx_enabled", "type": "cvar", "help": "Use steam connections on listen server as a fallback, 2 forces use of steam connections instead of raw UDP.", "flags": []},
	{"name": "net_steamcnx_status", "type": "command", "help": "Print status of steam connection sockets.", "flags": []},
	{"name": "net_threaded_socket_burst_cap", "type": "cvar", "help": "Max number of packets per burst beyond which threaded socket pump algorithm will start dropping packets.", "flags": []},
	{"name": "net_threaded_socket_recovery_rate", "type": "cvar", "help": "Number of packets per second that threaded socket pump algorithm allows from client.", "flags": []},
	{"name": "net_threaded_socket_recovery_time", "type": "cvar", "help": "Number of seconds over which the threaded socket pump algorithm will fully recover client ratelimit.", "flags": []},
	{"name": "net_usesocketsforloopback", "type": "cvar", "help": "Use network sockets layer even for listen server local player's packets (multiplayer only).", "flags": []},
	{"name": "net_warningthrottle", "type": "cvar", "help": "Network warning throttling to specified Hz rate", "flags": []},
	{"name": "next", "type": "cvar", "help": "Set to 1 to advance to next frame ( when singlestep == 1 )", "flags": ["cheat"]},
	{"name": "nextdemo", "type": "command", "help": "Play next demo in sequence.", "flags": ["norecord"]},
	{"name": "nextlevel", "type": "cvar", "help": "If set to a valid map name, will change to this map during the next changelevel", "flags": ["nf","rep","cl"]},
	{"name": "nextmap_print_enabled", "type": "cvar", "help": "When enabled prints next map to clients", "flags": ["sv"]},
	{"name": "nextmode", "type": "cvar", "help": "Sets the game mode to be played when the next level loads", "flags": ["nf","rep","cl"]},
	{"name": "nextpaint", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "noclip", "type": "command", "help": "Toggle. Player becomes non-solid and flies. Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "noclip_fixup", "type": "cvar", "help": "Toggles whether to try to push the player in bounds after leaving noclip", "flags": ["sv","cheat"]},
	{"name": "notarget", "type": "command", "help": "Toggle. Player becomes hidden to NPCs. Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "npc_ally_deathmessage", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "npc_alyx_crouch", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_alyx_force_stop_moving", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_alyx_readiness", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_alyx_readiness_transitions", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_ammo_deplete", "type": "command", "help": "Subtracts half of the target's ammo", "flags": ["sv","cheat"]},
	{"name": "npc_barnacle_swallow", "type": "cvar", "help": "Use prototype swallow code.", "flags": ["sv"]},
	{"name": "npc_bipass", "type": "command", "help": "Displays the local movement attempts by the given NPC(s) (triangulation detours).  Failed bypass routes are displayed in red, successful bypasses are shown in green.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at.", "flags": ["sv","cheat"]},
	{"name": "npc_citizen_auto_player_squad", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_auto_player_squad_allow_use", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_dont_precache_all", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_explosive_resist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_heal_chuck_medkit", "type": "cvar", "help": "Set to 1 to use new experimental healthkit-throwing medic.", "flags": ["a","sv"]},
	{"name": "npc_citizen_insignia", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_medic_emit_sound", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_medic_throw_speed", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_citizen_medic_throw_style", "type": "cvar", "help": "Set to 0 for a lobbier trajectory", "flags": ["a","sv"]},
	{"name": "npc_citizen_squad_marker", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_combat", "type": "command", "help": "Displays text debugging information about the squad and enemy of the selected NPC  (See Overlay Text)\n\tArguments:   \t{npc_name} / {npc class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_conditions", "type": "command", "help": "Displays all the current AI conditions that an NPC has in the overlay text.\n\tArguments:   \t{npc_name} / {npc class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_create", "type": "command", "help": "Creates an NPC of the given type where the player is looking (if the given NPC can actually stand at that location).  \n\tArguments:\t[npc_class_name] [name of npc (optional) ]", "flags": ["sv","cheat"]},
	{"name": "npc_create_aimed", "type": "command", "help": "Creates an NPC aimed away from the player of the given type where the player is looking (if the given NPC can actually stand at that location).  Note that this only works for npc classes that are already in the world.  You can not create an entity that doesn't have an instance in the level.\n\tArguments:\t{npc_class_name}", "flags": ["sv","cheat"]},
	{"name": "npc_create_equipment", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_destroy", "type": "command", "help": "Removes the given NPC(s) from the universe\nArguments:   \t{npc_name} / {npc_class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_destroy_unselected", "type": "command", "help": "Removes all NPCs from the universe that aren't currently selected", "flags": ["sv","cheat"]},
	{"name": "npc_enemies", "type": "command", "help": "Shows memory of NPC.  Draws an X on top of each memory.\n\tEluded entities drawn in blue (don't know where it went)\n\tUnreachable entities drawn in green (can't get to it)\n\tCurrent enemy drawn in red\n\tCurrent target entity drawn in magenta\n\tAll other entities drawn in pink\n\tArguments:   \t{npc_name} / {npc class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_focus", "type": "command", "help": "Displays red line to NPC's enemy (if has one) and blue line to NPC's target entity (if has one)\n\tArguments:   \t{npc_name} / {npc class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_go", "type": "command", "help": "Selected NPC(s) will go to the location that the player is looking (shown with a purple box)\n\tArguments:\t-none-", "flags": ["sv","cheat"]},
	{"name": "npc_go_do_run", "type": "cvar", "help": "Set whether should run on NPC go", "flags": ["sv","cheat"]},
	{"name": "npc_go_random", "type": "command", "help": "Sends all selected NPC(s) to a random node.\n\tArguments:   \t-none-", "flags": ["sv","cheat"]},
	{"name": "npc_heal", "type": "command", "help": "Heals the target back to full health", "flags": ["sv","cheat"]},
	{"name": "npc_height_adjust", "type": "cvar", "help": "Enable test mode for ik height adjustment", "flags": ["a","sv"]},
	{"name": "npc_kill", "type": "command", "help": "Kills the given NPC(s)\nArguments:   \t{npc_name} / {npc_class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_nearest", "type": "command", "help": "Draw's a while box around the NPC(s) nearest node\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at  ", "flags": ["sv","cheat"]},
	{"name": "npc_relationships", "type": "command", "help": "Displays the relationships between this NPC and all others.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_reset", "type": "command", "help": "Reloads schedules for all NPC's from their script files\n\tArguments:\t-none-", "flags": ["sv","cheat"]},
	{"name": "npc_route", "type": "command", "help": "Displays the current route of the given NPC as a line on the screen.  Waypoints along the route are drawn as small cyan rectangles.  Line is color coded in the following manner:\n\tBlue\t- path to a node\n\tCyan\t- detour around an object (triangulation)\n\tRed\t- jump\n\tMaroon - path to final target position\n\tArguments:   \t{npc_name} / {npc_class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "npc_select", "type": "command", "help": "Select or deselects the given NPC(s) for later manipulation.  Selected NPC's are shown surrounded by a red translucent box\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "npc_sentences", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_speakall", "type": "command", "help": "Force the npc to try and speak all their responses", "flags": ["sv"]},
	{"name": "npc_squads", "type": "command", "help": "Obsolete.  Replaced by npc_combat", "flags": ["sv","cheat"]},
	{"name": "npc_steering", "type": "command", "help": "Displays the steering obstructions of the NPC (used to perform local avoidance)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_steering_all", "type": "command", "help": "Displays the steering obstructions of all NPCs (used to perform local avoidance)\n", "flags": ["sv","cheat"]},
	{"name": "npc_strider_height_adj", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_strider_shake_ropes_magnitude", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_strider_shake_ropes_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "npc_task_text", "type": "command", "help": "Outputs text debugging information to the console about the all the tasks + break conditions of the selected NPC current schedule\n\tArguments:   \t{npc_name} / {npc class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "npc_tasks", "type": "command", "help": "Displays detailed text debugging information about the all the tasks of the selected NPC current schedule (See Overlay Text)\n\tArguments:   \t{npc_name} / {npc class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "npc_teleport", "type": "command", "help": "Selected NPC will teleport to the location that the player is looking (shown with a purple box)\n\tArguments:\t-none-", "flags": ["sv","cheat"]},
	{"name": "npc_thinknow", "type": "command", "help": "Trigger NPC to think", "flags": ["sv","cheat"]},
	{"name": "npc_viewcone", "type": "command", "help": "Displays the viewcone of the NPC (where they are currently looking and what the extents of there vision is)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "npc_vphysics", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "occlusion_old", "type": "cvar", "help": "", "flags": []},
	{"name": "occlusion_stats", "type": "command", "help": "Occlusion statistics; [-jitter] [-reset]", "flags": []},
	{"name": "occlusion_test_async", "type": "cvar", "help": "Enable asynchronous occlusion test in another thread; may save some server tick time at the cost of synchronization overhead with the async occlusion query thread", "flags": []},
	{"name": "occlusion_test_async_jitter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "occlusion_test_async_move_tolerance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "occlusion_test_camera_margins", "type": "cvar", "help": "Amount by which the camera (viewer's eye) is expanded for occlusion test. This should be large enough to accommodate eye's movement within a frame or two", "flags": ["sv"]},
	{"name": "occlusion_test_jump_margin", "type": "cvar", "help": "Amount by which the player bounding box is expanded up for occlusion test to account for jumping. This margin should be large enough to accommodate player movement within a frame or two. Affects both camera box and player box.", "flags": []},
	{"name": "occlusion_test_margins", "type": "cvar", "help": "Amount by which the player bounding box is expanded for occlusion test. This margin should be large enough to accommodate player movement within a frame or two, and the longest weapon they might hold. Shadow does not take this into account.", "flags": []},
	{"name": "occlusion_test_shadow_length", "type": "cvar", "help": "Max length of completely occluded shadow to consider a player for occlusion test. If shadow provably stops at this distance, the player may be considered for occlusion test. For longer shadows, we just don't do occlusion because we are not likely to find full occlusion when one of the boxes is expanded too much.", "flags": ["sv"]},
	{"name": "occlusion_test_shadow_max_distance", "type": "cvar", "help": "Max distance at which to consider shadows for occlusion computations", "flags": []},
	{"name": "old_radiusdamage", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "openserverbrowser", "type": "command", "help": "Opens server browser", "flags": ["cl"]},
	{"name": "option_duck_method", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "option_duck_method2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "option_speed_method", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "option_speed_method2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "overview_alpha", "type": "cvar", "help": "Overview map translucency.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "overview_health", "type": "cvar", "help": "Show player's health in map overview.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "overview_locked", "type": "cvar", "help": "Locks map angle, doesn't follow view angle.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "overview_mode", "type": "command", "help": "Sets overview map mode off,small,large: <0|1|2>", "flags": ["cl"]},
	{"name": "overview_names", "type": "cvar", "help": "Show player's names in map overview.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "overview_tracks", "type": "cvar", "help": "Show player's tracks in map overview.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "overview_zoom", "type": "command", "help": "Sets overview map zoom: <zoom> [<time>] [rel]", "flags": ["cl"]},
	{"name": "packed_files_list", "type": "command", "help": "List all files packed into the current BSP. First argument is an optional filter wildcard", "flags": []},
	{"name": "paint_cleanser_visibility_look_angle", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "paint_cleanser_visibility_poll_rate", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "paint_cleanser_visibility_range", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "paint_color_max_diff", "type": "cvar", "help": "The maximum difference between two colors for matching.", "flags": ["rep","cl"]},
	{"name": "paint_impact_accumulate_sound_distance_threshold", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paint_impact_count_to_max_adjusted_volume", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paint_impact_count_to_min_adjusted_pitch_after_full_volume", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paint_impact_particles_distance_threshold", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paint_impact_particles_duration", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paint_location_distance_threshold_square", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "paint_max_impact_particles", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paint_min_impact_particles", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "paintallsurfaces", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "paintblob_air_drag", "type": "cvar", "help": "The air drag applied to the paint blobs.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_draw_distance_from_eye", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintblob_gravity_scale", "type": "cvar", "help": "The gravity scale of the paint blobs.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_isosurface_box_width", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintblob_lifetime", "type": "cvar", "help": "The lifetime of the paintblobs if they have a limited range.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_limited_range", "type": "cvar", "help": "If the paintblobs have a limited range.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_max_radius_scale", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_min_radius_scale", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_minimum_portal_exit_velocity", "type": "cvar", "help": "The minimum velocity of the paint blobs on exiting portals.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_radius_while_streaking", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_streak_angle_threshold", "type": "cvar", "help": "The angle of impact below which the paint blobs will streak paint.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_streak_trace_range", "type": "cvar", "help": "The range of the trace for the paint blobs while streaking.", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_tbeam_accel", "type": "cvar", "help": "The acceleration of the paint blobs while in a tractor beam to get up to tractor beam speed", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_tbeam_portal_vortex_circulation", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_tbeam_vortex_accel", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_tbeam_vortex_circulation", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_tbeam_vortex_distance", "type": "cvar", "help": "Blob will do vortex if blob's distance from start or end point of the beam is within this distance", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_tbeam_vortex_radius_rate", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintblob_update_per_second", "type": "cvar", "help": "The number of times the blobs movement code is run per second.", "flags": ["cheat","rep","cl"]},
	{"name": "paintbomb_blobs_max_streak_speed_dampen", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_blobs_max_streak_time", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_blobs_min_streak_speed_dampen", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_blobs_min_streak_time", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_draw_blob_speed_max", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintbomb_draw_blob_speed_min", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintbomb_draw_max_blob_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintbomb_draw_min_blob_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintbomb_draw_num_paint_blobs", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintbomb_draw_sphere_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "paintbomb_explosion_radius", "type": "cvar", "help": "Radius of the trace from the center of the explosion", "flags": ["sv","cheat"]},
	{"name": "paintbomb_horizontal_angle_split", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_streak_speed_max", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_streak_speed_min", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintbomb_vertical_angle_split", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "paintgun_ammo_type", "type": "cvar", "help": "Type of paint ammo. 0: No ammo, 1: Global ammo per-gun, 2: Ammo per-paint type", "flags": ["rep","cl"]},
	{"name": "paintgun_blobs_max_speed", "type": "cvar", "help": "The max speed of the blobs shot out of the paint gun", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_max_streak_speed_dampen", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_max_streak_time", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_min_speed", "type": "cvar", "help": "The min speed of the blobs shot out of the paint gun", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_min_streak_speed_dampen", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_min_streak_time", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_per_second", "type": "cvar", "help": "Number of blobs shot out of the paint gun per second", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_spread_angle", "type": "cvar", "help": "The spread (in degrees) of the paint blobs from the gun", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_spread_radius", "type": "cvar", "help": "The starting radius of the spread of the paint blobs from the gun", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_blobs_streak_percent", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "paintgun_max_ammo", "type": "cvar", "help": "The maximum amount of paint ammo allowed.", "flags": ["rep","cl"]},
	{"name": "paintgun_shoot_position_trace_for_wall", "type": "cvar", "help": "If the paint gun shooting position should test if it is inside a wall", "flags": ["rep","cl"]},
	{"name": "paintsplat_bias", "type": "cvar", "help": "Change bias value for computing circle buffer", "flags": ["cheat","rep"]},
	{"name": "paintsplat_max_alpha_noise", "type": "cvar", "help": "Max noise value of circle alpha", "flags": ["cheat","rep"]},
	{"name": "paintsplat_noise_enabled", "type": "cvar", "help": "", "flags": ["cheat","rep"]},
	{"name": "panel_test_title_safe", "type": "cvar", "help": "Test vgui panel positioning with title safe indentation", "flags": ["cheat"]},
	{"name": "panorama_3dpanel_fxaa_edge_threshold_min_Q", "type": "cvar", "help": "Trims the algorithm from processing darks: (0.0312 - visible limit, slower), (0.0625 - high quality, faster), (0.0833 - upper limit, the start of visible unfiltered edges). Special note: when using FXAA_GREEN_AS_LUMA, likely want to set this to zero", "flags": ["cl"]},
	{"name": "panorama_3dpanel_fxaa_edge_threshold_Q", "type": "cvar", "help": "The minimum amount of local contrast required to apply algorithm: (0.063 - overkill, slower), (0.125 - high quality), (0.166 - default), (0.250 - low quality), (0.333 - too little, faster)", "flags": ["cl"]},
	{"name": "panorama_3dpanel_fxaa_subpixel_Q", "type": "cvar", "help": "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Quality): (0.0 - off), (1.0 - upper limit, softer), default = 0.75", "flags": ["cl"]},
	{"name": "panorama_cache_command_list_repaint_threshold", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_cache_command_list_size_threshold", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_clamp_fractional_pixel_positions", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_clear_frames_on_device_restore", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_console_api_detailed_msg", "type": "cvar", "help": "Enables if js console.* messages will be verbose.", "flags": []},
	{"name": "panorama_daisy_wheel", "type": "cvar", "help": "Daisy wheel input mode: RS | ABXY", "flags": []},
	{"name": "panorama_debug_dead_pad", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_debug_movies", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_debug_overlay_opacity", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_height", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_width", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_xpos", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_ypos", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_toggle", "type": "command", "help": "Toggles the panorama debugger on and off", "flags": []},
	{"name": "panorama_dragscroll_affordance", "type": "cvar", "help": "Minimum mouse movement in pixels before a move is treated as a drag scroll", "flags": []},
	{"name": "panorama_dragscroll_affordance_vr", "type": "cvar", "help": "Minimum mouse movement in pixels before a move is treated as a drag scroll in VR", "flags": []},
	{"name": "panorama_dragscroll_maxflickvelocity", "type": "cvar", "help": "Maximum velocity for a drag scroll flick", "flags": []},
	{"name": "panorama_dragscroll_maxflickvelocity_vr", "type": "cvar", "help": "Maximum velocity for a drag scroll flick in VR", "flags": []},
	{"name": "panorama_dragscroll_minflickvelocity", "type": "cvar", "help": "Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick", "flags": []},
	{"name": "panorama_dragscroll_minflickvelocity_vr", "type": "cvar", "help": "Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick in VR", "flags": []},
	{"name": "panorama_dragscroll_mintime", "type": "cvar", "help": "Minimum time that the mouse button must be down before a move is treated as a drag scroll", "flags": []},
	{"name": "panorama_dragscroll_mintime_vr", "type": "cvar", "help": "Minimum time that the mouse button must be down before a move is treated as a drag scroll in VR", "flags": []},
	{"name": "panorama_dragscroll_velocitymultiplier", "type": "cvar", "help": "Multiplier for flick velocity off of actual measured velocity", "flags": []},
	{"name": "panorama_dragscroll_velocitymultiplier_vr", "type": "cvar", "help": "Multiplier for flick velocity off of actual measured velocity", "flags": []},
	{"name": "panorama_dump_deny_input", "type": "command", "help": "Dumps panels currently denying all input to the game", "flags": []},
	{"name": "panorama_dump_events_backlog", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_dump_events_threshold_break", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_dump_events_threshold_us", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_ECO_mode", "type": "cvar", "help": "0 - disable, 1 - default, 2 - force always ON", "flags": []},
	{"name": "panorama_experimental_overdraw_prevention", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_fbo_alloc_batch", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_force_sort_child_ops", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_joystick_axis_repeat_curve_time", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_joystick_axis_repeat_interval_end", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_joystick_axis_repeat_interval_start", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_joystick_button_repeat_curve_time", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_joystick_button_repeat_interval_end", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_joystick_button_repeat_interval_start", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_keep_panel_in_layer_cache", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_keep_text_in_font_cache", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_large_dispatch_event_queue", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_free_fbo", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_oof_overlay_up_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_overlay_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_min_comp_layer_cache_cost", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_model_rotate_drag", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "panorama_model_rotate_frametime_multiplier", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "panorama_model_rotate_grab_scale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "panorama_persistent_storage_dump", "type": "command", "help": "Print Panorama persistent storage KVs to console.", "flags": []},
	{"name": "panorama_persistent_storage_reload", "type": "command", "help": "Reload all Panorama persistent storage KVs from disk.", "flags": []},
	{"name": "panorama_persistent_storage_save", "type": "command", "help": "Save all Panorama persistent storage KVs to disk.", "flags": []},
	{"name": "panorama_persistent_storage_wipe", "type": "command", "help": "Remove all Panorama persistent storage KVs.", "flags": []},
	{"name": "panorama_play_movie_ambient_sound", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_print_cache_status", "type": "command", "help": "Print internal panorama refcounts for every file", "flags": []},
	{"name": "panorama_reload", "type": "command", "help": "Reloads panorama UI. Append 'force' to force the reload", "flags": []},
	{"name": "panorama_reload_animations", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_remote_debug", "type": "cvar", "help": "Enable ability to connect to process via panorama remote debugger.", "flags": []},
	{"name": "panorama_render_stats", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_render_stats_posx", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_render_stats_posy", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_render_target_cache_max_size", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_repaint_watch_id", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_show_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_spew_layout_invalidates", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_steampad_button_repeat_curve_time", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_steampad_button_repeat_interval_end", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_steampad_button_repeat_interval_start", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_suspend_paint", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_track_render_commands", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_transition_time_factor", "type": "cvar", "help": "A float representing a scale factor for transitions. 1.0 is normal, 2.0 would be twice as fast as normal, 0.5 half as fast", "flags": []},
	{"name": "panorama_volume_ambient", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_volume_effects", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_volume_master", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_volume_movies", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_vsync", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_weapon_next", "type": "command", "help": "Next item in inventory", "flags": ["server_can_execute","cl"]},
	{"name": "panorama_weapon_prev", "type": "command", "help": "Previous item in inventory", "flags": ["server_can_execute","cl"]},
	{"name": "particle_sim_alt_cores", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "particle_simulateoverflow", "type": "cvar", "help": "Used for stress-testing particle systems. Randomly denies creation of particles.", "flags": ["cheat","cl"]},
	{"name": "particle_test_attach_attachment", "type": "cvar", "help": "Attachment index for attachment mode", "flags": ["sv","cheat"]},
	{"name": "particle_test_attach_mode", "type": "cvar", "help": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'", "flags": ["sv","cheat"]},
	{"name": "particle_test_file", "type": "cvar", "help": "Name of the particle system to dynamically spawn", "flags": ["sv","cheat"]},
	{"name": "particle_test_start", "type": "command", "help": "Dispatches the test particle system with the parameters specified in particle_test_file,\n particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "particle_test_stop", "type": "command", "help": "Stops all particle systems on the selected entities.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "passenger_collision_response_threshold", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "passenger_debug_entry", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "passenger_debug_transition", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "passenger_impact_response_threshold", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "passenger_use_leaning", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "password", "type": "cvar", "help": "Current server access password", "flags": ["a","norecord"]},
	{"name": "path", "type": "command", "help": "Show the engine filesystem path.", "flags": []},
	{"name": "path_file", "type": "command", "help": "Show the absolute paths for a given filename, and optionally a pathid.", "flags": []},
	{"name": "pause", "type": "command", "help": "Toggle the server pause state.", "flags": []},
	{"name": "perfui", "type": "command", "help": "Show/hide the level performance tools UI.", "flags": ["cheat"]},
	{"name": "perfvisualbenchmark", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "perfvisualbenchmark_abort", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "phonemedelay", "type": "cvar", "help": "Phoneme delay to account for sound system latency.", "flags": ["cl"]},
	{"name": "phonemefilter", "type": "cvar", "help": "Time duration of box filter to pass over phonemes.", "flags": ["cl"]},
	{"name": "phonemesnap", "type": "cvar", "help": "Lod at level at which visemes stops always considering two phonemes, regardless of duration.", "flags": ["cl"]},
	{"name": "phys_debug_check_contacts", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "phys_gunforce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_gunglueradius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_gunmass", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_guntorque", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_gunvel", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_impactforcescale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_penetration_error_time", "type": "cvar", "help": "Controls the duration of vphysics penetration error boxes.", "flags": ["sv"]},
	{"name": "phys_pushscale", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "phys_show_active", "type": "cvar", "help": "Shows all active vphysics objects.\n", "flags": ["sv","cheat"]},
	{"name": "phys_show_collision", "type": "cvar", "help": "Shows all vphysics object collision as wireframes.\n", "flags": ["sv","cheat"]},
	{"name": "phys_show_shadows", "type": "cvar", "help": "Shows all vphysics object shadows.\n", "flags": ["sv","cheat"]},
	{"name": "phys_speeds", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "phys_stressbodyweights", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_swap", "type": "command", "help": "Automatically swaps the current weapon for the physcannon and back again.", "flags": ["sv"]},
	{"name": "phys_timescale", "type": "cvar", "help": "Scale time for physics", "flags": ["sv","cheat"]},
	{"name": "phys_upimpactforcescale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_ball_cone", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_chargetime", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_cone", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_dmg_glass", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_maxforce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_maxmass", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "physcannon_mega_enabled", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "physcannon_mega_pullforce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_mega_tracelength", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_minforce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_pullforce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_punt_cone", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_right_turrets", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_tracelength", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physcannon_use_blue_sprite", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physics_budget", "type": "command", "help": "Times the cost of each active object", "flags": ["sv","cheat"]},
	{"name": "physics_constraints", "type": "command", "help": "Highlights constraint system graph for an entity", "flags": ["sv","cheat"]},
	{"name": "physics_debug_entity", "type": "command", "help": "Dumps debug info for an entity", "flags": ["sv","cheat"]},
	{"name": "physics_highlight_active", "type": "command", "help": "Turns on the absbox for all active physics objects", "flags": ["sv","cheat"]},
	{"name": "physics_report_active", "type": "command", "help": "Lists all active physics objects", "flags": ["sv","cheat"]},
	{"name": "physics_select", "type": "command", "help": "Dumps debug info for an entity", "flags": ["sv","cheat"]},
	{"name": "physicsshadowupdate_render", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "PhysPMC", "type": "cvar", "help": "", "flags": []},
	{"name": "picker", "type": "command", "help": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.\n\tArguments:\tfull - enables all debug information", "flags": ["sv","cheat"]},
	{"name": "ping", "type": "command", "help": "Display ping to server.", "flags": []},
	{"name": "ping_max_green", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ping_max_red", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ping_max_yellow", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "pipeline_static_props", "type": "cvar", "help": "", "flags": []},
	{"name": "pistol_use_new_accuracy", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "pixelvis_debug", "type": "command", "help": "Dump debug info", "flags": ["cl"]},
	{"name": "play", "type": "command", "help": "Play a sound.", "flags": ["server_can_execute"]},
	{"name": "play_distance", "type": "cvar", "help": "Set to 1:\"2 foot\" or 2:\"10 foot\" presets.", "flags": ["a","cl"]},
	{"name": "play_hrtf", "type": "command", "help": "Play a sound with HRTF spatialization.", "flags": ["server_can_execute"]},
	{"name": "playcast", "type": "command", "help": "Play a broadcast", "flags": []},
	{"name": "playdemo", "type": "command", "help": "Play a recorded demo file (.dem ).", "flags": ["norecord"]},
	{"name": "player_debug_print_damage", "type": "cvar", "help": "When true, print amount and type of all damage received by player to console.", "flags": ["sv","cheat"]},
	{"name": "player_held_object_collide_with_player", "type": "cvar", "help": "Should held objects collide with players", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_debug_error", "type": "cvar", "help": "Spew information on dropping objects due to error", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_distance", "type": "cvar", "help": "Distance from player for held objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_distance_turret_vm", "type": "cvar", "help": "Offset for held turrets", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_distance_vm", "type": "cvar", "help": "Distance from player for held objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_keep_out_of_camera", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "player_held_object_look_down_adjustment", "type": "cvar", "help": "Moves the box forward when looking down (viewmodel held object only.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_max_knock_magnitude", "type": "cvar", "help": "For viewmodel grab controller, max velocity magnitude squared to apply to knocked objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_max_throw_magnitude", "type": "cvar", "help": "For viewmodel grab controller, max velocity magnitude squared to apply to knocked objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_min_distance", "type": "cvar", "help": "Minimum distance from player for held objects (used by viewmodel held objects).", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_offset_up_cube", "type": "cvar", "help": "offest along the up axis for held objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_offset_up_cube_vm", "type": "cvar", "help": "offest along the up axis for held objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_offset_up_sphere", "type": "cvar", "help": "offest along the up axis for held objects.", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_offset_up_turret_vm", "type": "cvar", "help": "Offset for held turrets", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_transform_bump_ray", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "player_held_object_use_view_model", "type": "cvar", "help": "Use clone models in the view model instead of physics simulated grab controller.", "flags": ["cheat","rep","cl"]},
	{"name": "player_hide_gun_when_holding", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "player_hold_column_max_size", "type": "cvar", "help": "Furthest distance an object can be when held in colmn mode.", "flags": ["cheat","rep","cl"]},
	{"name": "player_hold_object_in_column", "type": "cvar", "help": "Hold object along a fixed column in front of player\n", "flags": ["cheat","rep","cl"]},
	{"name": "player_nevershow_communityservermessage", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "player_nevershow_communityservermessage2", "type": "cvar", "help": "", "flags": ["a","cl","ss_added"]},
	{"name": "player_old_armor", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "player_paint_shoot_pos_forward_scale", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "player_paint_shoot_pos_right_scale", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "player_paint_shoot_pos_up_scale", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "player_squad_autosummon_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "player_squad_autosummon_move_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "player_squad_autosummon_player_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "player_squad_autosummon_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "player_squad_autosummon_time_after_combat", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "player_throwenable", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "player_throwforce", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "playflush", "type": "command", "help": "Play a sound, reloading from disk in case of changes.", "flags": []},
	{"name": "playgamesound", "type": "command", "help": "Play a sound from the game sounds txt file", "flags": ["cheat","server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "playsoundscape", "type": "command", "help": "Forces a soundscape to play", "flags": ["cheat"]},
	{"name": "playvideo", "type": "command", "help": "Plays a video: <filename> [width height]", "flags": ["server_can_execute","cl"]},
	{"name": "playvideo_end_level_transition", "type": "command", "help": "Plays a video fullscreen without ability to skip (unless dev 1) and fades in: <filename> <time>", "flags": ["server_can_execute","cl"]},
	{"name": "playvideo_exitcommand", "type": "command", "help": "Plays a video and fires and exit command when it is stopped or finishes: <filename> <exit command>", "flags": ["server_can_execute","cl"]},
	{"name": "playvideo_exitcommand_nointerrupt", "type": "command", "help": "Plays a video (without interruption) and fires and exit command when it is stopped or finishes: <filename> <exit command>", "flags": ["server_can_execute","cl"]},
	{"name": "playvideo_nointerrupt", "type": "command", "help": "Plays a video without ability to skip: <filename> [width height]", "flags": ["server_can_execute","cl"]},
	{"name": "playvol", "type": "command", "help": "Play a sound at a specified volume.", "flags": []},
	{"name": "png", "type": "command", "help": "Take a png screenshot: png [w] [h] <filename>", "flags": ["norecord"]},
	{"name": "portal2_portal_width", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "portal2_square_portals", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "portal_beamtrace_optimization", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_carve_vphysics_clips", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "portal_clone_displacements", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_debug", "type": "cvar", "help": "Turn on debugging for portal connections.", "flags": ["sv","cheat"]},
	{"name": "portal_demohack", "type": "cvar", "help": "Do the demo_legacy_rollback setting to help during demo playback of going through portals.", "flags": ["a","cl"]},
	{"name": "portal_draw_ghosting", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "portal_environment_radius", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_funnel_debug", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_ghost_show_bbox", "type": "cvar", "help": "Render AABBs around the bounding box used for ghost renderable bounds checking (either hitbox or collision AABB)", "flags": ["cheat","rep","cl"]},
	{"name": "portal_ghost_use_network_origin", "type": "cvar", "help": "Use the network origin for determining bounds in which to ghost renderables, rather than the abs origin.", "flags": ["cl"]},
	{"name": "portal_ghosts_disable", "type": "cvar", "help": "Disables rendering of ghosted objects in portal environments", "flags": ["cl"]},
	{"name": "portal_paint_color", "type": "cvar", "help": "Color for portal paint", "flags": ["a","rep","cl"]},
	{"name": "portal_place", "type": "command", "help": "Places a portal. Indicate the group #, then the portal #, then pos + angle", "flags": ["sv","cheat"]},
	{"name": "portal_player_interaction_quadtest_epsilon", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_pointpush_debug", "type": "cvar", "help": "Debug the portal_pointpush.", "flags": ["cheat","rep","cl"]},
	{"name": "portal_pointpush_think_rate", "type": "cvar", "help": "The amount of time between thinks for the portal_pointpush.", "flags": ["cheat","rep","cl"]},
	{"name": "portal_report", "type": "command", "help": "Reports the location of all portals", "flags": ["sv","cheat"]},
	{"name": "portal_test_resting_surface_for_paint", "type": "cvar", "help": "Test if a portal is on a white painted surface and fizzle if it goes away.  Test it EVERY FRAME.", "flags": ["sv"]},
	{"name": "portal_trace_shrink_ray_each_query", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_transmit_light", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "portal_use_player_avoidance", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "portal_viewmodel_offset", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "portal_viewmodel_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "portal_viewmodel_use_dlight", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "portalgun_fire_delay", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portalgun_held_button_fire_fire_delay", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "Portals_ResizeAll", "type": "command", "help": "Resizes all portals (for testing), Portals_ResizeAll [half width] [half height]", "flags": ["sv","cheat"]},
	{"name": "prevpaint", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "print_colorcorrection", "type": "command", "help": "Display the color correction layer information.", "flags": ["cheat"]},
	{"name": "procedural_generator_debug", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "procedural_generator_laser_catcher_at_different_height", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "procedural_generator_laser_catcher_at_same_height", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "procedural_generator_solve_it", "type": "command", "help": "Solve the procedural puzzle generator.", "flags": ["sv","cheat"]},
	{"name": "procedural_generator_test", "type": "command", "help": "Test the procedural puzzle generator.", "flags": ["sv","cheat"]},
	{"name": "procedural_surface_map", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "progress_enable", "type": "command", "help": "", "flags": []},
	{"name": "prop_active_gib_limit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "prop_active_gib_max_fade_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "prop_break_disable_float", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "prop_crosshair", "type": "command", "help": "Shows name for prop looking at", "flags": ["cheat"]},
	{"name": "prop_debug", "type": "command", "help": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.", "flags": ["sv","cheat"]},
	{"name": "prop_dynamic_create", "type": "command", "help": "Creates a dynamic prop with a specific .mdl aimed away from where the player is looking.\n\tArguments: {.mdl name}", "flags": ["sv","cheat"]},
	{"name": "prop_physics_create", "type": "command", "help": "Creates a physics prop with a specific .mdl aimed away from where the player is looking.\n\tArguments: {.mdl name}", "flags": ["sv","cheat"]},
	{"name": "props_break_max_pieces", "type": "cvar", "help": "Maximum prop breakable piece count (-1 = model default)", "flags": ["rep","cl"]},
	{"name": "props_break_max_pieces_perframe", "type": "cvar", "help": "Maximum prop breakable piece count per frame (-1 = model default)", "flags": ["rep","cl"]},
	{"name": "pvs_min_player_distance", "type": "cvar", "help": "Min distance to player at which PVS is used. At closer distances, PVS assumes we can see a shadow or something else from the player, so it's safer to just always be \"Visible\"", "flags": ["sv"]},
	{"name": "pwatchent", "type": "cvar", "help": "Entity to watch for prediction system changes.", "flags": ["cheat","cl"]},
	{"name": "pwatchvar", "type": "cvar", "help": "Entity variable to watch in prediction system for changes.", "flags": ["cheat","cl"]},
	{"name": "-quick_ping", "type": "command", "help": "Quick ping is unpressed... nothing to do here.", "flags": ["cl"]},
	{"name": "+quick_ping", "type": "command", "help": "Ping the center option from the ping menu.", "flags": ["cl"]},
	{"name": "quit", "type": "command", "help": "Exit the engine.", "flags": []},
	{"name": "quit_prompt", "type": "command", "help": "Exit the engine.", "flags": ["cl"]},
	{"name": "r_3dsky", "type": "cvar", "help": "Enable the rendering of 3d sky boxes", "flags": ["cl"]},
	{"name": "r_3dskyinreflection", "type": "cvar", "help": "Enable the rendering of 3d sky boxes in water reflection", "flags": ["cl"]},
	{"name": "r_AirboatPitchCurveLinear", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatPitchCurveZero", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatRollCurveLinear", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatRollCurveZero", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatViewBlendTo", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatViewBlendToScale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatViewBlendToTime", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_AirboatViewDampenDamp", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_AirboatViewDampenFreq", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_AirboatViewZHeight", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_alphafade_usefov", "type": "cvar", "help": "Account for FOV when computing an entity's distance-based alpha fade", "flags": ["cheat","cl"]},
	{"name": "r_ambientboost", "type": "cvar", "help": "Set to boost ambient term if it is totally swamped by local lights", "flags": []},
	{"name": "r_ambientfactor", "type": "cvar", "help": "Boost ambient cube by no more than this factor", "flags": []},
	{"name": "r_ambientfraction", "type": "cvar", "help": "Fraction of direct lighting used to boost lighting when model requests", "flags": ["cheat"]},
	{"name": "r_ambientlightingonly", "type": "cvar", "help": "Set this to 1 to light models with only ambient lighting (and no static lighting).", "flags": ["cheat"]},
	{"name": "r_ambientmin", "type": "cvar", "help": "Threshold above which ambient cube will not boost (i.e. it's already sufficiently bright", "flags": []},
	{"name": "r_aspectratio", "type": "cvar", "help": "", "flags": []},
	{"name": "r_avglight", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_avglightmap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_bloomtintb", "type": "cvar", "help": "", "flags": []},
	{"name": "r_bloomtintexponent", "type": "cvar", "help": "", "flags": []},
	{"name": "r_bloomtintg", "type": "cvar", "help": "", "flags": []},
	{"name": "r_bloomtintr", "type": "cvar", "help": "", "flags": []},
	{"name": "r_brush_queue_mode", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_buildingmapforworld", "type": "cvar", "help": "", "flags": []},
	{"name": "r_cheapwaterend", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "r_cheapwaterstart", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "r_cleardecals", "type": "command", "help": "Usage r_cleardecals <permanent>.", "flags": ["clientcmd_can_execute"]},
	{"name": "r_ClipAreaFrustums", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_ClipAreaPortals", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_colorstaticprops", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_csm_static_vb", "type": "cvar", "help": "Use a precomputed static VB for CSM rendering", "flags": []},
	{"name": "r_csm_viewmodelquality", "type": "cvar", "help": "", "flags": []},
	{"name": "r_debug_ik", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_debug_sequencesets", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_debugcheapwater", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_debugrandomstaticlighting", "type": "cvar", "help": "Set to 1 to randomize static lighting for debugging.  Must restart for change to take affect.", "flags": ["cheat"]},
	{"name": "r_decal_cover_count", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decal_overlap_area", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decal_overlap_count", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decals", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decalstaticprops", "type": "cvar", "help": "Decal static props test", "flags": []},
	{"name": "r_deferopaquefastclipped", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_depthoverlay", "type": "cvar", "help": "Replaces opaque objects with their grayscaled depth values. r_showz_power scales the output.", "flags": ["cheat","cl"]},
	{"name": "r_disable_distance_fade_on_big_props", "type": "cvar", "help": "Completely disable distance fading on large props", "flags": ["cheat","cl"]},
	{"name": "r_disable_distance_fade_on_big_props_thresh", "type": "cvar", "help": "Distance prop fade disable threshold size", "flags": ["cheat","cl"]},
	{"name": "r_disable_static_prop_loading", "type": "cvar", "help": "If non-zero when a map loads, static props won't be loaded", "flags": ["cheat"]},
	{"name": "r_disable_update_shadow", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_DispBuildable", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_DispWalkable", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dlightsenable", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dopixelvisibility", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_drawallrenderables", "type": "cvar", "help": "Draw all renderables, even ones inside solid leaves.", "flags": ["cheat","cl"]},
	{"name": "r_drawbatchdecals", "type": "cvar", "help": "Render decals batched.", "flags": []},
	{"name": "r_DrawBeams", "type": "cvar", "help": "0=Off, 1=Normal, 2=Wireframe", "flags": ["cheat"]},
	{"name": "r_drawbrushmodels", "type": "cvar", "help": "Render brush models. 0=Off, 1=Normal, 2=Wireframe", "flags": ["cheat"]},
	{"name": "r_drawclipbrushes", "type": "cvar", "help": "Draw clip brushes (red=clip, pink=playerclip, blue=invisible, purple=npcclip, yellow=grenadeclip)", "flags": ["cheat"]},
	{"name": "r_drawdecals", "type": "cvar", "help": "Render decals.", "flags": []},
	{"name": "r_DrawDisp", "type": "cvar", "help": "Toggles rendering of displacment maps", "flags": ["cheat"]},
	{"name": "r_drawentities", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawflecks", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_drawfuncdetail", "type": "cvar", "help": "Render func_detail", "flags": ["cheat"]},
	{"name": "r_drawleaf", "type": "cvar", "help": "Draw the specified leaf.", "flags": ["cheat"]},
	{"name": "r_drawlightcache", "type": "cvar", "help": "0: off\n1: draw light cache entries\n2: draw rays\n", "flags": ["cheat"]},
	{"name": "r_drawlightinfo", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawlights", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodeldecals", "type": "cvar", "help": "", "flags": []},
	{"name": "r_DrawModelLightOrigin", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelnames", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "r_drawmodelstatsoverlay", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelstatsoverlaydistance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelstatsoverlayfilter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelstatsoverlaymax", "type": "cvar", "help": "time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2", "flags": ["a"]},
	{"name": "r_drawmodelstatsoverlaymin", "type": "cvar", "help": "time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2", "flags": ["a"]},
	{"name": "r_drawopaquedetailprops", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquedetailprops_csm", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquedetailprops_reflect", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquedetailprops_refract", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquerenderables", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaqueworld", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawothermodels", "type": "cvar", "help": "0=Off, 1=Normal, 2=Wireframe", "flags": ["cheat","cl"]},
	{"name": "r_drawpanorama", "type": "cvar", "help": "Enable the rendering of panorama UI", "flags": ["cheat"]},
	{"name": "r_drawparticles", "type": "cvar", "help": "Enable/disable particle rendering", "flags": ["cheat","cl"]},
	{"name": "r_drawpixelvisibility", "type": "cvar", "help": "Show the occlusion proxies", "flags": ["cl"]},
	{"name": "r_drawportalfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_DrawPortals", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_DrawRain", "type": "cvar", "help": "Enable/disable rain rendering.", "flags": ["cheat","cl"]},
	{"name": "r_drawrenderboxes", "type": "cvar", "help": "(0 - off) (1 - Draws the bounding box of entities) (2 - Draws the axis aligned bounding box used for culling) (3 - draws both bounding boxes)", "flags": ["cheat","cl"]},
	{"name": "r_drawropes", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawscreenoverlay", "type": "cvar", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "r_drawskybox", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_DrawSpecificStaticProp", "type": "cvar", "help": "", "flags": []},
	{"name": "r_drawsprites", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawstaticprops", "type": "cvar", "help": "0=Off, 1=Normal, 2=Wireframe", "flags": ["cheat"]},
	{"name": "r_drawtracers", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawtracers_firstperson", "type": "cvar", "help": "Toggle visibility of first person weapon tracers", "flags": ["a","cl"]},
	{"name": "r_drawtracers_movetonotintersect", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawtranslucentrenderables", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawtranslucentworld", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawunderwatercap", "type": "cvar", "help": "", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "r_drawunderwateroverlay", "type": "cvar", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "r_drawvgui", "type": "cvar", "help": "Enable the rendering of vgui panels", "flags": ["cheat"]},
	{"name": "r_drawviewmodel", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "r_drawworld", "type": "cvar", "help": "Render the world.", "flags": ["cheat"]},
	{"name": "r_dscale_basefov", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_fardist", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_farscale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_neardist", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_nearscale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dynamic", "type": "cvar", "help": "", "flags": []},
	{"name": "r_dynamiclighting", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_entityclips", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_eyeglintlodpixels", "type": "cvar", "help": "The number of pixels wide an eyeball has to be before rendering an eyeglint.  Is a floating point value.", "flags": []},
	{"name": "r_eyegloss", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "r_eyemove", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyes", "type": "cvar", "help": "", "flags": []},
	{"name": "r_eyeshift_x", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyeshift_y", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyeshift_z", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyesize", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyewaterepsilon", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_farz", "type": "cvar", "help": "Override the far clipping plane. -1 means to use the value in env_fog_controller.", "flags": ["cheat","cl"]},
	{"name": "r_fastreflectionfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_fastzreject", "type": "cvar", "help": "Activate/deactivates a fast z-setting algorithm to take advantage of hardware with fast z reject. Use -1 to default to hardware settings", "flags": []},
	{"name": "r_fastzrejectdisp", "type": "cvar", "help": "Activates/deactivates fast z rejection on displacements (360 only). Only active when r_fastzreject is on.", "flags": []},
	{"name": "r_flashlight_always_cull_for_single_pass", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlight_info", "type": "cvar", "help": "Information about currently enabled flashlights", "flags": ["cl"]},
	{"name": "r_flashlight_topdown", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightambient", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightbacktraceoffset", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightbrightness", "type": "cvar", "help": "", "flags": ["cheat","server_can_execute"]},
	{"name": "r_flashlightclip", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_flashlightconstant", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightculldepth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightdepth_drawtranslucents", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdepthres", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdepthreshigh", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdepthtexture", "type": "cvar", "help": "", "flags": []},
	{"name": "r_FlashlightDetailProps", "type": "cvar", "help": "Enable a flashlight drawing pass on detail props. 0 = off, 1 = single pass, 2 = multipass (multipass is PC ONLY)", "flags": ["cl"]},
	{"name": "r_flashlightdrawclip", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_flashlightdrawdepth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightdrawdepthres", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightdrawfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdrawfrustumbbox", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdrawsweptbbox", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightenableculling", "type": "cvar", "help": "Enable frustum culling of flashlights", "flags": ["cl"]},
	{"name": "r_flashlightfar", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightfov", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightladderdist", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightlinear", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightlockposition", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightmodels", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightmuzzleflashfov", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightnear", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightnearoffsetscale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightnodraw", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightoffsetforward", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightoffsetright", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightoffsetup", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightquadratic", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightrender", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightrendermodels", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightrenderworld", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightscissor", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightshadowatten", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlighttracedistcutoff", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightupdatedepth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightvisualizetrace", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightvolumetrics", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flex", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flushlod", "type": "command", "help": "Flush and reload LODs.", "flags": ["cheat"]},
	{"name": "r_forcecheapwater", "type": "cvar", "help": "Force all water to be cheap water, will show old renders if enabled after water has been seen", "flags": ["cheat","cl"]},
	{"name": "r_ForceRestore", "type": "cvar", "help": "", "flags": []},
	{"name": "r_ForceWaterLeaf", "type": "cvar", "help": "Enable for optimization to water - considers view in leaf under water for purposes of culling", "flags": ["cl"]},
	{"name": "r_frustumcullworld", "type": "cvar", "help": "", "flags": []},
	{"name": "r_glint_alwaysdraw", "type": "cvar", "help": "", "flags": []},
	{"name": "r_hidepaintedsurfaces", "type": "cvar", "help": "If enabled, hides all surfaces which have been painted.", "flags": []},
	{"name": "r_highlight_translucent_renderables", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_hwmorph", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_impacts_alt_orientation", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_itemblinkmax", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_itemblinkrate", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_JeepFOV", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "r_JeepViewBlendTo", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_JeepViewBlendToScale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_JeepViewBlendToTime", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_JeepViewDampenDamp", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_JeepViewDampenFreq", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_JeepViewZHeight", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_jiggle_bones", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_keepstyledlightmapsonly", "type": "cvar", "help": "", "flags": []},
	{"name": "r_lightaverage", "type": "cvar", "help": "Activates/deactivate light averaging", "flags": []},
	{"name": "r_lightcache_invalidate", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "r_lightcache_numambientsamples", "type": "cvar", "help": "number of random directions to fire rays when computing ambient lighting", "flags": ["cheat"]},
	{"name": "r_lightcache_radiusfactor", "type": "cvar", "help": "Allow lights to influence lightcaches beyond the lights' radii", "flags": ["cheat"]},
	{"name": "r_lightcache_zbuffercache", "type": "cvar", "help": "", "flags": []},
	{"name": "r_lightcachecenter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightcachemodel", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightinterp", "type": "cvar", "help": "Controls the speed of light interpolation, 0 turns off interpolation", "flags": ["cheat"]},
	{"name": "r_lightmap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightstyle", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightwarpidentity", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lockportalfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_lockpvs", "type": "cvar", "help": "Lock the PVS so you can fly around and inspect what is being drawn.", "flags": ["cheat"]},
	{"name": "r_lod", "type": "cvar", "help": "Sets the renderer LOD", "flags": []},
	{"name": "r_maxdlights", "type": "cvar", "help": "", "flags": []},
	{"name": "r_maxmodeldecal", "type": "cvar", "help": "", "flags": []},
	{"name": "r_maxnewsamples", "type": "cvar", "help": "", "flags": []},
	{"name": "r_maxsampledist", "type": "cvar", "help": "", "flags": []},
	{"name": "r_minnewsamples", "type": "cvar", "help": "", "flags": []},
	{"name": "r_modelAmbientMin", "type": "cvar", "help": "Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns).", "flags": ["cheat"]},
	{"name": "r_modelwireframedecal", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_nohw", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_norefresh", "type": "cvar", "help": "", "flags": []},
	{"name": "r_nosw", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_novis", "type": "cvar", "help": "Turn off the PVS.", "flags": ["cheat"]},
	{"name": "r_occludeemaxarea", "type": "cvar", "help": "Prevents occlusion testing for entities that take up more than X% of the screen. 0 means use whatever the level said to use.", "flags": []},
	{"name": "r_occluderminarea", "type": "cvar", "help": "Prevents this occluder from being used if it takes up less than X% of the screen. 0 means use whatever the level said to use.", "flags": []},
	{"name": "r_occludermincount", "type": "cvar", "help": "At least this many occluders will be used, no matter how big they are.", "flags": []},
	{"name": "r_occlusion", "type": "cvar", "help": "Activate/deactivate the occlusion system.", "flags": []},
	{"name": "r_occlusionspew", "type": "cvar", "help": "Activate/deactivates spew about what the occlusion system is doing.", "flags": ["cheat"]},
	{"name": "r_oldlightselection", "type": "cvar", "help": "Set this to revert to HL2's method of selecting lights", "flags": ["cheat"]},
	{"name": "r_overlayfadeenable", "type": "cvar", "help": "", "flags": []},
	{"name": "r_overlayfademax", "type": "cvar", "help": "", "flags": []},
	{"name": "r_overlayfademin", "type": "cvar", "help": "", "flags": []},
	{"name": "r_overlaywireframe", "type": "cvar", "help": "", "flags": []},
	{"name": "r_paintblob_blr_cutoff_radius", "type": "cvar", "help": "Set cutoff radius (how far field extends from each particle)", "flags": ["cl"]},
	{"name": "r_paintblob_blr_render_radius", "type": "cvar", "help": "Set render radius (how far from particle center surface will be)", "flags": ["cl"]},
	{"name": "r_paintblob_blr_scale", "type": "cvar", "help": "Scale all surface rendering parameters.", "flags": ["cl"]},
	{"name": "r_paintblob_debug_draw_margin", "type": "cvar", "help": "If tiler is disabled, whether to draw the margin.", "flags": ["cl"]},
	{"name": "r_paintblob_debug_draw_tile_boundaries", "type": "cvar", "help": "Whether to draw outlines of all tiles.", "flags": ["cl"]},
	{"name": "r_paintblob_debug_spu", "type": "cvar", "help": "Set this to 1 to break in the SPU code for the blob. Otherwise use 0.", "flags": ["cl"]},
	{"name": "r_paintblob_display_clip_box", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_paintblob_draw_isosurface", "type": "cvar", "help": "Draws the surface as an isosurface", "flags": ["cl"]},
	{"name": "r_paintblob_force_single_pass", "type": "cvar", "help": "If 0, render the blob in two passes. Set to 1 to force rendering of the blob in a single pass.", "flags": ["cl"]},
	{"name": "r_paintblob_highres_cube", "type": "cvar", "help": "Set cubewidth (coarseness of the mesh)", "flags": ["cl"]},
	{"name": "r_paintblob_mainview_highres", "type": "cvar", "help": "If 1, make the main view high resolution. Set to 0 to make the main view low resolution.", "flags": ["cl"]},
	{"name": "r_paintblob_material", "type": "cvar", "help": "Choose a material from 0 to N", "flags": ["cl"]},
	{"name": "r_paintblob_max_number_of_indices_displayed", "type": "cvar", "help": "Indicates the maximum number of indices to display per tile. The index size will be the limiting factor though (regardless of this number).", "flags": ["cl"]},
	{"name": "r_paintblob_max_number_of_threads", "type": "cvar", "help": "Indicates the maximum number of threads that will be spawn for the blob.", "flags": ["cl"]},
	{"name": "r_paintblob_max_number_of_vertices_displayed", "type": "cvar", "help": "Indicates the maximum number of vertices to display per tile. The VB size will be the limiting factor though (regardless of this number).", "flags": ["cl"]},
	{"name": "r_paintblob_max_particles_per_buckets", "type": "cvar", "help": "Indicates the maximum number of particles that will be calculated per bucket.", "flags": ["cl"]},
	{"name": "r_paintblob_only_mainview_displayed", "type": "cvar", "help": "If 0, other views are displayed (portal, shadow, reflection, ...). Note that shadows are disabled on game consoles. Set to 1 to only display the main view.", "flags": ["cl"]},
	{"name": "r_paintblob_otherviews_highres", "type": "cvar", "help": "If 0, all other views are low resolution. Set to 1 to make other views high resolution.", "flags": ["cl"]},
	{"name": "r_paintblob_rotate", "type": "cvar", "help": "Whether to rotate for transparency", "flags": ["cl"]},
	{"name": "r_paintblob_seeding_with_simd", "type": "cvar", "help": "Set this to 1 to run the seeding in SIMD. Otherwise use 0.", "flags": ["cl"]},
	{"name": "r_paintblob_shader", "type": "cvar", "help": "Choose a shader", "flags": ["cl"]},
	{"name": "r_paintblob_tile_index_to_draw", "type": "cvar", "help": "-1 to display all tiles. Otherwise the index of the tile to draw.", "flags": ["cl"]},
	{"name": "r_paintblob_timeout_for_recycling_fragments", "type": "cvar", "help": "Timeout in milliseconds used to recycle the fragments. Default is 64 in release, 1000 in debug.", "flags": ["cl"]},
	{"name": "r_paintblob_use_optimized_fragment_copy", "type": "cvar", "help": "Indicates if optimized VB/IB copy is enabled (Write-combine memory optimization).", "flags": ["cl"]},
	{"name": "r_paintblob_wireframe", "type": "cvar", "help": "Draw wireframe", "flags": ["cl"]},
	{"name": "r_particle_demo", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_particle_sim_spike_threshold_ms", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_particle_timescale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_partition_level", "type": "cvar", "help": "Displays a particular level of the spatial partition system. Use -1 to disable it.", "flags": ["cheat"]},
	{"name": "r_PhysPropStaticLighting", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_pixelvisibility_partial", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_pixelvisibility_spew", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_earlyz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_fastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_fastpath_max_ghost_recursion", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_stencil_depth", "type": "cvar", "help": "When using stencil views, this changes how many views within views we see", "flags": ["a","cl"]},
	{"name": "r_portal_use_complex_frustums", "type": "cvar", "help": "View optimization, turn this off if you get odd visual bugs.", "flags": ["cl"]},
	{"name": "r_portal_use_dlights", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_use_pvs_optimization", "type": "cvar", "help": "Enables an optimization that allows portals to be culled when outside of the PVS.", "flags": []},
	{"name": "r_portalscissor", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portalscloseall", "type": "cvar", "help": "", "flags": []},
	{"name": "r_portalsopenall", "type": "cvar", "help": "Open all portals", "flags": ["cheat"]},
	{"name": "r_portalstencildisable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_PortalTestEnts", "type": "cvar", "help": "Clip entities against portal frustums.", "flags": ["cheat","cl"]},
	{"name": "r_printdecalinfo", "type": "command", "help": "", "flags": []},
	{"name": "r_proplightingfromdisk", "type": "cvar", "help": "0=Off, 1=On, 2=Show Errors", "flags": []},
	{"name": "r_proplightingpooling", "type": "cvar", "help": "0 - off, 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset)", "flags": ["cheat"]},
	{"name": "r_propsmaxdist", "type": "cvar", "help": "Maximum visible distance", "flags": ["cl"]},
	{"name": "r_pspm_farz_multiplier", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_pspm_nearz_multiplier", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_queued_post_processing", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_queued_ropes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_radiosity", "type": "cvar", "help": "0: no radiosity\n1: radiosity with ambient cube (6 samples)\n2: radiosity with 162 samples\n3: 162 samples for static props, 6 samples for everything else", "flags": ["cheat"]},
	{"name": "r_RainAllowInSplitScreen", "type": "cvar", "help": "Allows rain in splitscreen", "flags": ["cl"]},
	{"name": "r_rainalpha", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_rainalphapow", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainCheck", "type": "cvar", "help": "Enable/disable IsInAir() check for rain drops?", "flags": ["cheat","cl"]},
	{"name": "r_RainDebugDuration", "type": "cvar", "help": "Shows rain tracelines for this many seconds (0 disables)", "flags": ["cheat","cl"]},
	{"name": "r_raindensity", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainHack", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_rainlength", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainParticleDensity", "type": "cvar", "help": "Density of Particle Rain 0-1", "flags": ["cl"]},
	{"name": "r_RainProfile", "type": "cvar", "help": "Enable/disable rain profiling.", "flags": ["cheat","cl"]},
	{"name": "r_RainRadius", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainSideVel", "type": "cvar", "help": "How much sideways velocity rain gets.", "flags": ["cheat","cl"]},
	{"name": "r_RainSimulate", "type": "cvar", "help": "Enable/disable rain simulation.", "flags": ["cheat","cl"]},
	{"name": "r_rainspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainSplashPercentage", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_rainwidth", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_randomflex", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_renderoverlayfragment", "type": "cvar", "help": "", "flags": []},
	{"name": "r_rimlight", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_rootlod", "type": "cvar", "help": "Root LOD", "flags": []},
	{"name": "r_ropetranslucent", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_screenoverlay", "type": "command", "help": "Draw specified material as an overlay", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "r_sequence_debug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_sequence_old_order", "type": "cvar", "help": "Use the old layer accumulation code, which initialises the overlays differently", "flags": ["cl"]},
	{"name": "r_shader_srgb", "type": "cvar", "help": "-1 = use hardware caps. 0 = use hardware srgb. 1 = use shader srgb(software lookup)", "flags": []},
	{"name": "r_shader_srgbread", "type": "cvar", "help": "1 = use shader srgb texture reads, 0 = use HW", "flags": []},
	{"name": "r_shadow_debug_spew", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_shadow_deferred", "type": "cvar", "help": "Toggle deferred shadow rendering", "flags": ["cheat"]},
	{"name": "r_shadow_deferred_downsample", "type": "cvar", "help": "Toggle low-res deferred shadow rendering", "flags": ["cl"]},
	{"name": "r_shadow_deferred_simd", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadow_half_update_rate", "type": "cvar", "help": "Updates shadows at half the framerate", "flags": ["cl"]},
	{"name": "r_shadow_lightpos_lerptime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadow_shortenfactor", "type": "cvar", "help": "Makes shadows cast from local lights shorter", "flags": ["cl"]},
	{"name": "r_shadowangles", "type": "command", "help": "Set shadow angles", "flags": ["cheat","cl"]},
	{"name": "r_shadowblobbycutoff", "type": "command", "help": "some shadow stuff", "flags": ["cheat","cl"]},
	{"name": "r_shadowcolor", "type": "command", "help": "Set shadow color", "flags": ["cheat","cl"]},
	{"name": "r_shadowdir", "type": "command", "help": "Set shadow direction", "flags": ["cheat","cl"]},
	{"name": "r_shadowdist", "type": "command", "help": "Set shadow distance", "flags": ["cheat","cl"]},
	{"name": "r_shadowfromanyworldlight", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_shadowfromworldlights", "type": "cvar", "help": "Enable shadowing from world lights", "flags": ["cl"]},
	{"name": "r_shadowfromworldlights_debug", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_shadowids", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_shadowlod", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadowmaxrendered", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadowrendertotexture", "type": "cvar", "help": "", "flags": []},
	{"name": "r_shadows", "type": "cvar", "help": "", "flags": []},
	{"name": "r_shadows_gamecontrol", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_shadows_on_renderables_enable", "type": "cvar", "help": "Support casting RTT shadows onto other renderables", "flags": ["cl"]},
	{"name": "r_shadowwireframe", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_showenvcubemap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_ShowViewerArea", "type": "cvar", "help": "", "flags": []},
	{"name": "r_showz_power", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_simpleworldmodel_drawbeyonddistance_fullscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawbeyonddistance_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawbeyonddistance_splitscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawforrecursionlevel_fullscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawforrecursionlevel_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawforrecursionlevel_splitscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_waterreflections_fullscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_waterreflections_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_waterreflections_splitscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_skin", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_skybox", "type": "cvar", "help": "Enable the rendering of sky boxes", "flags": ["cheat","cl"]},
	{"name": "r_skybox_draw_last", "type": "cvar", "help": "Draws skybox after world brush geometry, rather than before.", "flags": []},
	{"name": "r_skybox_occlude", "type": "cvar", "help": "Allows rendering of %compileSkyOcclusion sky materials", "flags": []},
	{"name": "r_slowpathwireframe", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_snapportal", "type": "cvar", "help": "", "flags": []},
	{"name": "r_SnowDebugBox", "type": "cvar", "help": "Snow Debug Boxes.", "flags": ["cheat","cl"]},
	{"name": "r_SnowEnable", "type": "cvar", "help": "Snow Enable", "flags": ["cheat","cl"]},
	{"name": "r_SnowEndAlpha", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowEndSize", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowFallSpeed", "type": "cvar", "help": "Snow fall speed scale.", "flags": ["cheat","cl"]},
	{"name": "r_SnowInsideRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowOutsideRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowParticles", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowPosScale", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowRayEnable", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowRayLength", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowRayRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowSpeedScale", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowStartAlpha", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowStartSize", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowWindScale", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowZoomOffset", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowZoomRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_sse_s", "type": "cvar", "help": "sse ins for particle sphere create", "flags": ["cl"]},
	{"name": "r_staticpropinfo", "type": "cvar", "help": "", "flags": []},
	{"name": "r_surface_blr_cubewidth", "type": "cvar", "help": "Set cubewidth (coarseness of the mesh)", "flags": ["cl"]},
	{"name": "r_surface_blr_cutoff_radius", "type": "cvar", "help": "Set cutoff radius (how far field extends from each particle)", "flags": ["cl"]},
	{"name": "r_surface_blr_render_radius", "type": "cvar", "help": "Set render radius (how far from particle center surface will be)", "flags": ["cl"]},
	{"name": "r_surface_blr_scale", "type": "cvar", "help": "Scale all surface rendering parameters.", "flags": ["cl"]},
	{"name": "r_surface_calc_color", "type": "cvar", "help": "Just interpolate colors", "flags": ["a","cl"]},
	{"name": "r_surface_calc_hifreq_color", "type": "cvar", "help": "Experimental hi-freq colors", "flags": ["a","cl"]},
	{"name": "r_surface_calc_tan_only", "type": "cvar", "help": "Calculate Only Tangents", "flags": ["a","cl"]},
	{"name": "r_surface_calc_tile_color", "type": "cvar", "help": "Shows color of the tile", "flags": ["a","cl"]},
	{"name": "r_surface_calc_uv_and_tan", "type": "cvar", "help": "Calculate UVs and Tangents", "flags": ["a","cl"]},
	{"name": "r_surface_debug_draw_margin", "type": "cvar", "help": "If tiler is disabled, whether to draw the margin.", "flags": ["cl"]},
	{"name": "r_surface_debug_draw_tile_boundaries", "type": "cvar", "help": "Whether to draw outlines of all tiles.", "flags": ["cl"]},
	{"name": "r_surface_debug_max_slices", "type": "cvar", "help": "The maximum number of slices to draw", "flags": ["cl"]},
	{"name": "r_surface_debug_max_tiles", "type": "cvar", "help": "The maximum number of tiles to draw", "flags": ["cl"]},
	{"name": "r_surface_debug_tile", "type": "cvar", "help": "If tiler is enabled, whether we draw all tiles or just the central one.", "flags": ["cl"]},
	{"name": "r_surface_debug_use_tiler", "type": "cvar", "help": "Use the tiler", "flags": ["cl"]},
	{"name": "r_surface_draw_isosurface", "type": "cvar", "help": "Draws the surface as an isosurface", "flags": ["cl"]},
	{"name": "r_surface_material", "type": "cvar", "help": "Choose a material from 0 to N", "flags": ["cl"]},
	{"name": "r_surface_rotate", "type": "cvar", "help": "Whether to rotate for transparency", "flags": ["cl"]},
	{"name": "r_surface_rotate_by90", "type": "cvar", "help": "Whether to only rotate in 90 degree increments", "flags": ["cl"]},
	{"name": "r_surface_shader", "type": "cvar", "help": "Choose a shader", "flags": ["cl"]},
	{"name": "r_surface_wireframe", "type": "cvar", "help": "Draw wireframe", "flags": ["cl"]},
	{"name": "r_swingflashlight", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_teeth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_threaded_blobulator", "type": "cvar", "help": "If enabled, blobulator will use material thread.", "flags": ["cl"]},
	{"name": "r_threaded_particles", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_threaded_shadow_clip", "type": "cvar", "help": "", "flags": []},
	{"name": "r_threadeddetailprops", "type": "cvar", "help": "enable threading of detail prop drawing", "flags": ["cl"]},
	{"name": "r_underwateroverlay_drain_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_unlimitedrefract", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_unloadlightmaps", "type": "cvar", "help": "", "flags": []},
	{"name": "r_updaterefracttexture", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_vehicleBrakeRate", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "r_VehicleViewClamp", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_VehicleViewDampen", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "r_viewmodel_opacity", "type": "cvar", "help": "Set the opacity of view models. MIN = 0.01, MAX = 1.", "flags": ["a","cl"]},
	{"name": "r_visambient", "type": "cvar", "help": "Draw leaf ambient lighting samples.  Needs mat_leafvis 1 to work", "flags": []},
	{"name": "r_visocclusion", "type": "cvar", "help": "Activate/deactivate wireframe rendering of what the occlusion system is doing.", "flags": ["cheat"]},
	{"name": "r_visualizelighttraces", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_visualizelighttracesshowfulltrace", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_visualizeproplightcaching", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_visualizetraces", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_WaterDraw2DSky", "type": "cvar", "help": "Draw 2d sky in water reflection views", "flags": ["cl"]},
	{"name": "r_WaterDraw3DSky", "type": "cvar", "help": "Draw 3d sky in water reflection views", "flags": ["cl"]},
	{"name": "r_WaterDrawReflection", "type": "cvar", "help": "Enable water reflection", "flags": ["cl"]},
	{"name": "r_WaterDrawRefraction", "type": "cvar", "help": "Enable water refraction", "flags": ["cl"]},
	{"name": "r_waterforceexpensive", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_waterforcereflectentities", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_worldlightmin", "type": "cvar", "help": "", "flags": []},
	{"name": "r_worldlights", "type": "cvar", "help": "number of world lights to use per vertex", "flags": []},
	{"name": "r_worldlistcache", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "radar_range", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ragdoll_sleepaftertime", "type": "cvar", "help": "After this many seconds of being basically stationary, the ragdoll will go to sleep.", "flags": ["cl"]},
	{"name": "rate", "type": "cvar", "help": "Max bytes/sec the host can receive data", "flags": ["a","user"]},
	{"name": "recompute_speed", "type": "command", "help": "Recomputes clock speed (for debugging purposes).", "flags": ["cheat"]},
	{"name": "record", "type": "command", "help": "Record a demo.", "flags": ["norecord"]},
	{"name": "record_research_data", "type": "cvar", "help": "In challenge and editor maps, output research data to portal2_research_data.csv if enabled", "flags": ["sv"]},
	{"name": "reflect_paint_color", "type": "cvar", "help": "Color for reflect paint", "flags": ["a","rep","cl"]},
	{"name": "reflector_cube_disable_when_on_laser", "type": "cvar", "help": "If the reflector cube should get disabled when left on the ground with a laser going through it.", "flags": ["sv","cheat"]},
	{"name": "reflector_cube_freeze_fix", "type": "cvar", "help": "Enable a fix for reflector cubes floating in mid-air.", "flags": ["sv"]},
	{"name": "reload", "type": "command", "help": "Reload the most recent saved game (add setpos to jump to current view position on reload).", "flags": ["norecord"]},
	{"name": "+reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "reload_materials", "type": "cvar", "help": "", "flags": []},
	{"name": "reload_soft", "type": "command", "help": "Performs a soft reload (respawn entities, teleport player back to last save point. Experimental.)", "flags": ["sv"]},
	{"name": "-remote_view", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "+remote_view", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "remove_boots", "type": "command", "help": "Removes long fall boots from the player", "flags": ["sv","cheat"]},
	{"name": "removeallids", "type": "command", "help": "Remove all user IDs from the ban list.", "flags": []},
	{"name": "removeallpaint", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "removeid", "type": "command", "help": "Remove a user ID from the ban list.", "flags": []},
	{"name": "removeip", "type": "command", "help": "Remove an IP address from the ban list.", "flags": []},
	{"name": "render_blanks", "type": "command", "help": "render N blank frames", "flags": []},
	{"name": "replay_debug", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "report_cliententitysim", "type": "cvar", "help": "List all clientside simulations and time - will report and turn itself off.", "flags": ["cheat","cl"]},
	{"name": "report_clientthinklist", "type": "cvar", "help": "List all clientside entities thinking and time - will report and turn itself off.", "flags": ["cheat","cl"]},
	{"name": "report_entities", "type": "command", "help": "Lists all entities", "flags": ["sv"]},
	{"name": "report_simthinklist", "type": "command", "help": "Lists all simulating/thinking entities", "flags": ["sv"]},
	{"name": "report_soundpatch", "type": "command", "help": "reports sound patch count", "flags": ["sv"]},
	{"name": "report_touchlinks", "type": "command", "help": "Lists all touchlinks", "flags": ["sv"]},
	{"name": "res_restrict_access", "type": "cvar", "help": "", "flags": []},
	{"name": "respawn_entities", "type": "command", "help": "Respawn all the entities in the map.", "flags": ["sp","sv","cheat"]},
	{"name": "restart", "type": "command", "help": "Restart the game on the same level (add setpos to jump to current view position on restart).", "flags": ["norecord"]},
	{"name": "retry", "type": "command", "help": "Retry connection to last server.", "flags": ["norecord","server_can_execute","clientcmd_can_execute"]},
	{"name": "-right", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+right", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "room_type", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "rope_averagelight", "type": "cvar", "help": "Makes ropes use average of cubemap lighting instead of max intensity.", "flags": ["cl"]},
	{"name": "rope_collide", "type": "cvar", "help": "Collide rope with the world", "flags": ["cl"]},
	{"name": "rope_min_pixel_diameter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "rope_rendersolid", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_shake", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_smooth", "type": "cvar", "help": "Do an antialiasing effect on ropes", "flags": ["cl"]},
	{"name": "rope_smooth_enlarge", "type": "cvar", "help": "How much to enlarge ropes in screen space for antialiasing effect", "flags": ["cl"]},
	{"name": "rope_smooth_maxalpha", "type": "cvar", "help": "Alpha for rope antialiasing effect", "flags": ["cl"]},
	{"name": "rope_smooth_maxalphawidth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_smooth_minalpha", "type": "cvar", "help": "Alpha for rope antialiasing effect", "flags": ["cl"]},
	{"name": "rope_smooth_minwidth", "type": "cvar", "help": "When using smoothing, this is the min screenspace width it lets a rope shrink to", "flags": ["cl"]},
	{"name": "rope_solid_maxalpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_solid_maxwidth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_solid_minalpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_solid_minwidth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_subdiv", "type": "cvar", "help": "Rope subdivision amount", "flags": ["cl"]},
	{"name": "rope_wind_dist", "type": "cvar", "help": "Don't use CPU applying small wind gusts to ropes when they're past this distance.", "flags": ["cl"]},
	{"name": "round_start_reset_duck", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "round_start_reset_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rpg_missle_use_custom_detonators", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "rr_debug_qa", "type": "cvar", "help": "Set to 1 to see debug related to the Question & Answer system used to create conversations between allied NPCs.", "flags": ["sv"]},
	{"name": "rr_debugresponseconcept", "type": "cvar", "help": "If set, rr_debugresponses will print only responses testing for the specified concept", "flags": ["sv"]},
	{"name": "rr_debugresponses", "type": "cvar", "help": "Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs.", "flags": ["sv"]},
	{"name": "rr_debugrule", "type": "cvar", "help": "If set to the name of the rule, that rule's score will be shown whenever a concept is passed into the response rules system.", "flags": ["sv"]},
	{"name": "rr_dumpresponses", "type": "cvar", "help": "Dump all response_rules.txt and rules (requires restart)", "flags": ["sv"]},
	{"name": "rr_followup_maxdist", "type": "cvar", "help": "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.", "flags": ["sv","cheat"]},
	{"name": "rr_forceconcept", "type": "command", "help": "fire a response concept directly at a given character.\nUSAGE: rr_forceconcept <target> <concept> \"criteria1:value1,criteria2:value2,...\"\ncriteria values are optional.\n", "flags": ["sv","cheat"]},
	{"name": "rr_reloadresponsesystems", "type": "command", "help": "Reload all response system scripts.", "flags": ["sv","cheat"]},
	{"name": "rr_remarkable_max_distance", "type": "cvar", "help": "AIs will not even consider remarkarbles that are more than this many units away.", "flags": ["sv","cheat"]},
	{"name": "rr_remarkable_world_entities_replay_limit", "type": "cvar", "help": "TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable", "flags": ["sv","cheat"]},
	{"name": "rr_remarkables_enabled", "type": "cvar", "help": "If 1, polling for info_remarkables and issuances of TLK_REMARK is enabled.", "flags": ["sv","cheat"]},
	{"name": "rr_thenany_score_slop", "type": "cvar", "help": "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.", "flags": ["sv","cheat"]},
	{"name": "safezonex", "type": "cvar", "help": "The percentage of the screen width that is considered safe from overscan", "flags": ["a","cl"]},
	{"name": "safezoney", "type": "cvar", "help": "The percentage of the screen height that is considered safe from overscan", "flags": ["a","cl"]},
	{"name": "save", "type": "command", "help": "Saves current game.", "flags": ["norecord"]},
	{"name": "save_async", "type": "cvar", "help": "", "flags": []},
	{"name": "save_asyncdelay", "type": "cvar", "help": "For testing, adds this many milliseconds of delay to the save operation.", "flags": []},
	{"name": "save_console", "type": "cvar", "help": "Autosave on the PC behaves like it does on the consoles.", "flags": []},
	{"name": "save_disable", "type": "cvar", "help": "", "flags": []},
	{"name": "save_finish_async", "type": "command", "help": "", "flags": ["norecord"]},
	{"name": "save_history_count", "type": "cvar", "help": "Keep this many old copies in history of autosaves and quicksaves.", "flags": []},
	{"name": "save_huddelayframes", "type": "cvar", "help": "Number of frames to defer for drawing the Saving message.", "flags": []},
	{"name": "save_screenshot", "type": "cvar", "help": "0 = none, 1 = non-autosave, 2 = always", "flags": []},
	{"name": "save_spew", "type": "cvar", "help": "", "flags": []},
	{"name": "say", "type": "command", "help": "Display player message", "flags": ["sv","print"]},
	{"name": "say_team", "type": "command", "help": "Display player message to team", "flags": ["sv","print"]},
	{"name": "sc_footer_glyph_force_style", "type": "cvar", "help": "Forces the style of footer glyphs. -1, default, uses whether we use alternate tiles (ie. community maps menus and puzzlemaker) to determine whether to be white or black.", "flags": ["cl"]},
	{"name": "sc_footer_glyph_neutral_abxy", "type": "cvar", "help": "Sets the ESteamInputGlyphStyle_NeutralColorABXY flag.", "flags": ["cl"]},
	{"name": "sc_footer_glyph_solid_abxy", "type": "cvar", "help": "Sets the ESteamInputGlyphStyle_SolidABXY flag.", "flags": ["cl"]},
	{"name": "sc_say", "type": "command", "help": "Opens the Steam keyboard for Deck", "flags": ["cl"]},
	{"name": "sc_say_team", "type": "command", "help": "Opens the Steam keyboard for Deck", "flags": ["cl"]},
	{"name": "scandemo", "type": "command", "help": "Scan a recorded demo file (.dem ) for specific game events and dump data.", "flags": ["norecord"]},
	{"name": "scene_async_prefetch_spew", "type": "cvar", "help": "Display async .ani file loading info.", "flags": ["sv"]},
	{"name": "scene_clamplookat", "type": "cvar", "help": "Clamp head turns to a MAX of 20 degrees per think.", "flags": ["sv"]},
	{"name": "scene_clientflex", "type": "cvar", "help": "Do client side flex animation.", "flags": ["rep","cl"]},
	{"name": "scene_clientplayback", "type": "cvar", "help": "Play all vcds on the clients.", "flags": ["sv"]},
	{"name": "scene_flatturn", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "scene_flush", "type": "command", "help": "Flush all .vcds from the cache and reload from disk.", "flags": ["sv"]},
	{"name": "scene_forcecombined", "type": "cvar", "help": "When playing back, force use of combined .wav files even in english.", "flags": ["sv"]},
	{"name": "scene_maxcaptionradius", "type": "cvar", "help": "Only show closed captions if recipient is within this many units of speaking actor (0==disabled).", "flags": ["sv"]},
	{"name": "scene_playvcd", "type": "command", "help": "Play the given VCD as an instanced scripted scene.", "flags": ["sv","cheat"]},
	{"name": "scene_print", "type": "cvar", "help": "When playing back a scene, print timing and event info to console.", "flags": ["rep","cl"]},
	{"name": "scene_showfaceto", "type": "cvar", "help": "When playing back, show the directions of faceto events.", "flags": ["a","sv"]},
	{"name": "scene_showlook", "type": "cvar", "help": "When playing back, show the directions of look events.", "flags": ["a","sv"]},
	{"name": "scene_showmoveto", "type": "cvar", "help": "When moving, show the end location.", "flags": ["a","sv"]},
	{"name": "scene_showunlock", "type": "cvar", "help": "Show when a vcd is playing but normal AI is running.", "flags": ["a","sv"]},
	{"name": "scene_useactorpitch", "type": "cvar", "help": "Uses the actor speech pitch when determining the sound pitch.", "flags": ["sv"]},
	{"name": "scene_vcdautosave", "type": "cvar", "help": "Create a savegame before VCD playback", "flags": ["cl"]},
	{"name": "+score", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-score", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "scr_centertime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "screenshot", "type": "command", "help": "Take a screenshot.", "flags": ["clientcmd_can_execute"]},
	{"name": "script", "type": "command", "help": "Run the text as a script", "flags": ["sv"]},
	{"name": "script_client", "type": "command", "help": "Run the text as a script", "flags": ["cl"]},
	{"name": "script_client_storage_dump", "type": "command", "help": "Dump all saved stuff to console", "flags": ["norecord","cl"]},
	{"name": "script_client_storage_list", "type": "command", "help": "Lists all scopes", "flags": ["norecord","cl"]},
	{"name": "script_client_storage_reset", "type": "command", "help": "Resets the script persistent storage; WARNING! this will reset all state that has ever been saved!", "flags": ["norecord","cl"]},
	{"name": "script_connect_debugger_on_mapspawn", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "script_debug", "type": "command", "help": "Connect the vscript VM to the script debugger", "flags": ["sv"]},
	{"name": "script_debug_client", "type": "command", "help": "Connect the vscript VM to the script debugger", "flags": ["cl"]},
	{"name": "script_dump_all", "type": "command", "help": "Dump the state of the VM to the console", "flags": ["sv"]},
	{"name": "script_dump_all_client", "type": "command", "help": "Dump the state of the VM to the console", "flags": ["cl"]},
	{"name": "script_execute", "type": "command", "help": "Run a vscript file", "flags": ["sv"]},
	{"name": "script_execute_client", "type": "command", "help": "Run a vscript file", "flags": ["cl"]},
	{"name": "script_help", "type": "command", "help": "Output help for script functions, optionally with a search string", "flags": ["sv"]},
	{"name": "script_help_client", "type": "command", "help": "Output help for script functions, optionally with a search string", "flags": ["cl"]},
	{"name": "script_reload_code", "type": "command", "help": "Execute a vscript file, replacing existing functions with the functions in the run script", "flags": ["sv"]},
	{"name": "script_reload_entity_code", "type": "command", "help": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts", "flags": ["sv"]},
	{"name": "script_reload_think", "type": "command", "help": "Execute an activation script, replacing existing functions with the functions in the run script", "flags": ["sv"]},
	{"name": "script_storage_dump", "type": "command", "help": "Dump all saved stuff to console", "flags": ["sv","norecord"]},
	{"name": "script_storage_list", "type": "command", "help": "Lists all scopes", "flags": ["sv","norecord"]},
	{"name": "script_storage_reset", "type": "command", "help": "Resets the script persistent storage; WARNING! this will reset all state that has ever been saved!", "flags": ["sv","norecord"]},
	{"name": "scriptsystem_exec", "type": "command", "help": "Executes a function within the given file", "flags": ["sv","cheat"]},
	{"name": "sdl_double_click_size", "type": "cvar", "help": "", "flags": []},
	{"name": "sdl_double_click_time", "type": "cvar", "help": "", "flags": []},
	{"name": "sdr_spew_level", "type": "cvar", "help": "verbosity level for SteamNetSockets spew", "flags": []},
	{"name": "sensitivity", "type": "cvar", "help": "Mouse sensitivity.", "flags": ["a","cl"]},
	{"name": "sentry_consent_give", "type": "command", "help": "Tells sentry we have given consent to upload crash dumps", "flags": ["cl"]},
	{"name": "sentry_consent_revoke", "type": "command", "help": "Tells sentry we have revoked consent to upload crash dumps", "flags": ["cl"]},
	{"name": "server_game_time", "type": "command", "help": "Gives the game time in seconds (server's curtime)", "flags": ["sv"]},
	{"name": "servercfgfile", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "setang", "type": "command", "help": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setang_exact", "type": "command", "help": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setinfo", "type": "command", "help": "Adds a new user info value", "flags": ["clientcmd_can_execute"]},
	{"name": "setmodel", "type": "command", "help": "Changes's player's model", "flags": ["sv","cheat"]},
	{"name": "setpause", "type": "command", "help": "Set the pause state of the server.", "flags": []},
	{"name": "setpos", "type": "command", "help": "Move player to specified origin (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setpos_exact", "type": "command", "help": "Move player to an exact specified origin (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setpos_player", "type": "command", "help": "Move specified player to specified origin (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "sfm_record_hz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "shake", "type": "command", "help": "Shake the screen.", "flags": ["sv","cheat"]},
	{"name": "shake_show", "type": "cvar", "help": "Displays a list of the active screen shakes.", "flags": ["cl"]},
	{"name": "shake_stop", "type": "command", "help": "Stops all active screen shakes.\n", "flags": ["cheat","cl"]},
	{"name": "shake_testpunch", "type": "command", "help": "Test a punch-style screen shake.\n", "flags": ["cheat","cl"]},
	{"name": "show_main_menu", "type": "command", "help": "Show the main menu", "flags": ["cl"]},
	{"name": "-showbudget", "type": "command", "help": "", "flags": []},
	{"name": "+showbudget", "type": "command", "help": "", "flags": []},
	{"name": "-showbudget_texture", "type": "command", "help": "", "flags": []},
	{"name": "+showbudget_texture", "type": "command", "help": "", "flags": []},
	{"name": "-showbudget_texture_global", "type": "command", "help": "", "flags": []},
	{"name": "+showbudget_texture_global", "type": "command", "help": "", "flags": []},
	{"name": "showconsole", "type": "command", "help": "Show the console.", "flags": ["norecord"]},
	{"name": "showGameSettings", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "showhitlocation", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "showinfo", "type": "command", "help": "Shows a info panel: <type> <title> <message> [<command>]", "flags": ["cl"]},
	{"name": "showpanel", "type": "command", "help": "Shows a viewport panel <name>", "flags": ["cl"]},
	{"name": "showparticlecounts", "type": "cvar", "help": "Display number of particles drawn per frame", "flags": ["cl"]},
	{"name": "+showportals", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-showportals", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+showscores", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-showscores", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "showsniperdist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "showsniperlines", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "showtriggers", "type": "cvar", "help": "Shows trigger brushes", "flags": ["sv","cheat"]},
	{"name": "showtriggers_toggle", "type": "command", "help": "Toggle show triggers", "flags": ["sv","cheat"]},
	{"name": "-showvprof", "type": "command", "help": "Hide VProf UI", "flags": []},
	{"name": "+showvprof", "type": "command", "help": "Show VProf UI", "flags": []},
	{"name": "+showweaponhud", "type": "command", "help": "Show the panorama weapon selector", "flags": ["cl"]},
	{"name": "-showweaponhud", "type": "command", "help": "Hide the panorama weapon selector", "flags": ["cl"]},
	{"name": "singlestep", "type": "cvar", "help": "Run engine in single step mode ( set next to 1 to advance a frame )", "flags": ["cheat"]},
	{"name": "sk_advisor_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_airboat_drain_rate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_airboat_max_ammo", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_airboat_recharge_rate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_allow_autoaim", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_ally_regen_time", "type": "cvar", "help": "Time taken for an ally to regenerate a point of health.", "flags": ["sv"]},
	{"name": "sk_ammo_qty_scale1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_ammo_qty_scale2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_ammo_qty_scale3", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_antlion_air_attack_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_antlion_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_antlion_jump_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_antlion_swipe_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_antlion_worker_burst_damage", "type": "cvar", "help": "How much damage is inflicted by an antlion worker's death explosion.", "flags": ["sv"]},
	{"name": "sk_antlion_worker_burst_radius", "type": "cvar", "help": "Effect radius of an antlion worker's death explosion.", "flags": ["sv"]},
	{"name": "sk_antlion_worker_health", "type": "cvar", "help": "Hitpoints of an antlion worker. If 0, will use base antlion hitpoints.", "flags": ["sv"]},
	{"name": "sk_antlion_worker_spit_grenade_dmg", "type": "cvar", "help": "Total damage done by an individual antlion worker loogie.", "flags": ["sv"]},
	{"name": "sk_antlion_worker_spit_grenade_poison_ratio", "type": "cvar", "help": "Percentage of an antlion worker's spit damage done as poison (which regenerates)", "flags": ["sv"]},
	{"name": "sk_antlion_worker_spit_grenade_radius", "type": "cvar", "help": "Radius of effect for an antlion worker spit grenade.", "flags": ["sv"]},
	{"name": "sk_antlion_worker_spit_speed", "type": "cvar", "help": "Speed at which an antlion spit grenade travels.", "flags": ["sv"]},
	{"name": "sk_antlionguard_dmg_charge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_antlionguard_dmg_shove", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_antlionguard_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_apc_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_apc_missile_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_auto_reload_time", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_autoaim_mode", "type": "cvar", "help": "", "flags": ["a","rep","cl"]},
	{"name": "sk_autoaim_scale1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_autoaim_scale2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_barnacle_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_barney_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_battery", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "sk_bullseye_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_giveammo_player_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_ally", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_ally_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_ally_min_pct", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_player", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_player_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_player_min_forced", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_player_min_pct", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_heal_toss_player_delay", "type": "cvar", "help": "how long between throwing healthkits", "flags": ["sv"]},
	{"name": "sk_citizen_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_player_stare_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_player_stare_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_citizen_stare_heal_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_combine_ball_search_radius", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sk_combine_guard_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_combine_guard_kick", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_combine_s_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_combine_s_kick", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_combineball_guidefactor", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sk_combineball_seek_angle", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sk_combineball_seek_kill", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sk_crow_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_crow_melee_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_crowbar_lead_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_dmg_energy_grenade", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_dmg_homer_grenade", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_dmg_inflict_scale1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_inflict_scale2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_inflict_scale3", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_pathfollower_grenade", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_dmg_sniper_penetrate_npc", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_sniper_penetrate_plr", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_take_scale1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_take_scale2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_take_scale3", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_dmg_tripwire", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_dropship_container_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_dynamic_resupply_modifier", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_energy_grenade_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_env_headcrabcanister_shake_amplitude", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_env_headcrabcanister_shake_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_env_headcrabcanister_shake_radius_vehicle", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_fraggrenade_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_grubnugget_enabled", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_grubnugget_health_large", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_grubnugget_health_medium", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_grubnugget_health_small", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_gunship_burst_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_gunship_burst_min", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_gunship_burst_size", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_gunship_health_increments", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_headcrab_fast_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_headcrab_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_headcrab_melee_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_headcrab_poison_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_headcrab_poison_npc_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_healthcharger", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_healthkit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_healthvial", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_helicopter_burstcount", "type": "cvar", "help": "How many shot bursts to fire after charging up. The bigger the number, the longer the firing is", "flags": ["sv"]},
	{"name": "sk_helicopter_drone_speed", "type": "cvar", "help": "How fast does the zapper drone move?", "flags": ["sv"]},
	{"name": "sk_helicopter_firingcone", "type": "cvar", "help": "The angle in degrees of the cone in which the shots will be fired", "flags": ["sv"]},
	{"name": "sk_helicopter_grenade_puntscale", "type": "cvar", "help": "When physpunting a chopper's grenade, scale its velocity by this much.", "flags": ["sv"]},
	{"name": "sk_helicopter_grenadedamage", "type": "cvar", "help": "The amount of damage the helicopter grenade deals.", "flags": ["sv"]},
	{"name": "sk_helicopter_grenadeforce", "type": "cvar", "help": "The physics force that the helicopter grenade exerts.", "flags": ["sv"]},
	{"name": "sk_helicopter_grenaderadius", "type": "cvar", "help": "The damage radius of the helicopter grenade.", "flags": ["sv"]},
	{"name": "sk_helicopter_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_helicopter_num_bombs1", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_helicopter_num_bombs2", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_helicopter_num_bombs3", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_helicopter_roundsperburst", "type": "cvar", "help": "How many shots to fire in a single burst", "flags": ["sv"]},
	{"name": "sk_homer_grenade_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_buckshot_damage_scale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_bullet_damage_scale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_charge_damage_scale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_citizen_damage_scale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_dmg_charge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_dmg_flechette", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_dmg_from_striderbuster", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_dmg_one_slash", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_flechette_explode_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_flechette_explode_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_hunter_vehicle_damage_scale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_ichthyosaur_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_ichthyosaur_melee_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_jeep_gauss_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_manhack_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_manhack_melee_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_manhack_v2", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_max_357", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_alyxgun", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_ar2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_ar2_altfire", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_buckshot", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_crossbow", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_gauss_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_grenade", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_molotov", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_pistol", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_rpg_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_smg1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_smg1_grenade", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_sniper_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_max_striderbuster", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_metropolice_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_simple_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_stitch_along_hitcount", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_stitch_at_hitcount", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_stitch_behind_hitcount", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_stitch_distance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_stitch_reaction", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_metropolice_stitch_tight_hitcount", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_arm", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_chest", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_dmg_357", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_airboat", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_alyxgun", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_ar2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_buckshot", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_combineball", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sk_npc_dmg_crossbow", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_crowbar", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_dmg_dropship", "type": "cvar", "help": "Dropship container cannon damage.", "flags": ["sv"]},
	{"name": "sk_npc_dmg_fraggrenade", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_dmg_grenade", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_gunship", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_gunship_to_plr", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_helicopter", "type": "cvar", "help": "Damage helicopter shots deal to everything but the player", "flags": ["sv"]},
	{"name": "sk_npc_dmg_helicopter_to_plr", "type": "cvar", "help": "Damage helicopter shots deal to the player", "flags": ["sv"]},
	{"name": "sk_npc_dmg_molotov", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_pistol", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_rpg_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_smg1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_smg1_grenade", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_sniper_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_npc_dmg_stunstick", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_dmg_tripmine", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_head", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_leg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_npc_stomach", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_pathfollower_grenade_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_arm", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_chest", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_head", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_leg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_stomach", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_plr_dmg_357", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_airboat", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_alyxgun", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_ar2", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_buckshot", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_crossbow", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_crowbar", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_plr_dmg_fraggrenade", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_plr_dmg_grenade", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_molotov", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_pistol", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_rpg_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_smg1", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_smg1_grenade", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_sniper_round", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_dmg_stunstick", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_plr_dmg_tripmine", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_plr_grenade_drop_time", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_health_drop_time", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_plr_num_shotgun_pellets", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sk_rollermine_shock", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_rollermine_stun_delay", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_rollermine_vehicle_intercept", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_scanner_dmg_dive", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_scanner_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_smg1_grenade_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_stalker_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_stalker_melee_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_strider_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_strider_num_missiles1", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_strider_num_missiles2", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_strider_num_missiles3", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_striderbuster_magnet_multiplier", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_suitcharger", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_suitcharger_citadel", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_suitcharger_citadel_maxarmor", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_tripmine_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_tripwire_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_armor_charge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_armor_charge_per_token", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_dmg_claw", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_dmg_rake", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_dmg_zap", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_vortigaunt_vital_antlion_worker_dmg", "type": "cvar", "help": "Vital-ally vortigaunts scale damage taken from antlion workers by this amount.", "flags": ["sv"]},
	{"name": "sk_vortigaunt_zap_range", "type": "cvar", "help": "Range of vortigaunt's ranged attack (feet)", "flags": ["sv"]},
	{"name": "sk_weapon_ar2_alt_fire_duration", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_weapon_ar2_alt_fire_mass", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_weapon_ar2_alt_fire_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_zombie_dmg_both_slash", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_zombie_dmg_one_slash", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_zombie_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_zombie_poison_dmg_spit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_zombie_poison_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_zombie_soldier_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "skill", "type": "cvar", "help": "Game skill level (1-3).", "flags": ["a"]},
	{"name": "skip_next_map", "type": "command", "help": "Skips the next map in the map rotation for the server.", "flags": ["sv"]},
	{"name": "skybox_disablereflection", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "skybox_swap", "type": "command", "help": "Swap through the skyboxes in our queue", "flags": ["sv","cheat"]},
	{"name": "sleep_when_meeting_framerate", "type": "cvar", "help": "Sleep instead of spinning if we're meeting the desired framerate.", "flags": []},
	{"name": "slot0", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot1", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot10", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot11", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot12", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot13", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot2", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot3", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot4", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot5", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot6", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot7", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot8", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot9", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "-slowtime", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+slowtime", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "slowtime_max", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "slowtime_must_refill", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "slowtime_regen_per_second", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "slowtime_speed", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "smoke_trail", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "smoothstairs", "type": "cvar", "help": "Smooth player eye z coordinate when traversing stairs.", "flags": ["rep","cl"]},
	{"name": "snapto", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "snd_async_flush", "type": "command", "help": "Flush all unlocked async audio data", "flags": []},
	{"name": "snd_async_fullyasync", "type": "cvar", "help": "All playback is fully async (sound doesn't play until data arrives).", "flags": []},
	{"name": "snd_async_minsize", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_async_showmem", "type": "command", "help": "Show async memory stats", "flags": []},
	{"name": "snd_async_showmem_music", "type": "command", "help": "Show async memory stats for just non-streamed music", "flags": []},
	{"name": "snd_async_showmem_summary", "type": "command", "help": "Show brief async memory stats", "flags": []},
	{"name": "snd_async_spew_blocking", "type": "cvar", "help": "Spew message to console any time async sound loading blocks on file i/o.", "flags": []},
	{"name": "snd_async_stream_fail", "type": "cvar", "help": "Spew stream pool failures.", "flags": []},
	{"name": "snd_async_stream_purges", "type": "cvar", "help": "Spew stream pool purges.", "flags": []},
	{"name": "snd_async_stream_recover_from_exhausted_stream", "type": "cvar", "help": "If 1, recovers when the stream is exhausted when playing PCM sounds (prevents music or ambiance sounds to stop if too many sounds are played). Set to 0, to stop the sound otherwise.", "flags": []},
	{"name": "snd_async_stream_spew", "type": "cvar", "help": "Spew streaming info ( 0=Off, 1=streams, 2=buffers", "flags": []},
	{"name": "snd_async_stream_spew_delayed_start_filter", "type": "cvar", "help": "Filter used to spew sounds that starts late. Use an empty string \"\" to display all sounds. By default only the VO are displayed.", "flags": []},
	{"name": "snd_async_stream_spew_delayed_start_time", "type": "cvar", "help": "Spew any asynchronous sound that starts with more than N milliseconds delay. By default spew when there is more than 500 ms delay.", "flags": []},
	{"name": "snd_async_stream_spew_exhausted_buffer", "type": "cvar", "help": "If 1, spews warnings when the buffer is exhausted (recommended). Set to 0 for no spew (for debugging purpose only).", "flags": []},
	{"name": "snd_async_stream_spew_exhausted_buffer_time", "type": "cvar", "help": "Number of milliseconds between each exhausted buffer spew.", "flags": []},
	{"name": "snd_async_stream_static_alloc", "type": "cvar", "help": "If 1, spews allocations on the static alloc pool. Set to 0 for no spew.", "flags": []},
	{"name": "snd_cache_memsize", "type": "cvar", "help": "Audio Source data cache max memory size (in mb)", "flags": []},
	{"name": "snd_cull_duplicates", "type": "cvar", "help": "If nonzero, aggressively cull duplicate sounds during mixing. The number specifies the number of duplicates allowed to be played.", "flags": []},
	{"name": "snd_debug_gaincurve", "type": "cvar", "help": "Visualize sound gain fall off", "flags": []},
	{"name": "snd_debug_gaincurvevol", "type": "cvar", "help": "Visualize sound gain fall off", "flags": []},
	{"name": "snd_debug_panlaw", "type": "cvar", "help": "Visualize panning crossfade curves", "flags": ["cheat"]},
	{"name": "snd_defer_trace", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_delay_for_choreo_enabled", "type": "cvar", "help": "Enables update of delay for choreo to compensate for IO latency.\n", "flags": []},
	{"name": "snd_delay_for_choreo_reset_after_N_milliseconds", "type": "cvar", "help": "Resets the choreo latency after N milliseconds of VO not playing. Default is 500 ms.\n", "flags": []},
	{"name": "snd_delay_sound_shift", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_disable_mixer_duck", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_disable_mixer_solo", "type": "cvar", "help": "\n", "flags": ["cheat"]},
	{"name": "snd_dsp_cancel_old_preset_after_N_milliseconds", "type": "cvar", "help": "Number of milliseconds after an unused previous preset is not considered valid for the start of a cross-fade.", "flags": []},
	{"name": "snd_dsp_optimization", "type": "cvar", "help": "Turns optimization on for DSP effects if set to 1 (default). 0 to turn the optimization off.", "flags": []},
	{"name": "snd_dsp_spew_changes", "type": "cvar", "help": "Spews major changes to the dsp or presets if set to 1. 0 to turn the spew off (default).", "flags": []},
	{"name": "snd_dsp_test1", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_dsp_test2", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_duckerattacktime", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_duckerreleasetime", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_duckerthreshold", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_ducking_off", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_ducktovolume", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_dump_filepaths", "type": "command", "help": "", "flags": []},
	{"name": "snd_dumpclientsounds", "type": "command", "help": "Dump sounds to console", "flags": ["cheat"]},
	{"name": "snd_dvar_dist_max", "type": "cvar", "help": "Play full 'far' sound at this distance", "flags": ["cheat"]},
	{"name": "snd_dvar_dist_min", "type": "cvar", "help": "Play full 'near' sound at this distance", "flags": ["cheat"]},
	{"name": "snd_filter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_find_channel", "type": "cvar", "help": "Scan every channel to find the corresponding sound.\n", "flags": []},
	{"name": "snd_foliage_db_loss", "type": "cvar", "help": "foliage dB loss per 1200 units", "flags": ["cheat"]},
	{"name": "snd_front_headphone_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual front left/right headphones.", "flags": []},
	{"name": "snd_front_stereo_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual front left/right speakers.", "flags": []},
	{"name": "snd_front_surround_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual front left/right speakers.", "flags": []},
	{"name": "snd_gain", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_gain_max", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_gain_min", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_getmixer", "type": "command", "help": "Get data related to mix group matching string", "flags": []},
	{"name": "snd_headphone_pan_exponent", "type": "command", "help": "Specifies the exponent for the pan xfade from phone to phone if the \"exp\" pan law is being used.", "flags": []},
	{"name": "snd_headphone_pan_radial_weight", "type": "command", "help": "Apply cos(angle) * weight before pan law", "flags": []},
	{"name": "snd_hrtf_async", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_benchmark", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_distance_behind", "type": "cvar", "help": "HRTF calculations will calculate the player as being this far behind the camera. Valid values are between 0 and 300.\n", "flags": ["a"]},
	{"name": "snd_hrtf_lerp_max_distance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_hrtf_lerp_method", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_lerp_min_distance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_hrtf_passthrough", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_voice_delay", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_hrtf_volume", "type": "cvar", "help": "Controls volume of HRTF sounds", "flags": ["cheat"]},
	{"name": "snd_hwcompat", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_list", "type": "cvar", "help": "lists all sounds played that match substring filter arg. \"\" = none, \"*\" = all\n", "flags": ["cheat"]},
	{"name": "snd_mainmenu_music_break_time_max", "type": "cvar", "help": "Minimum amount of time to pause between playing main menu music", "flags": ["cheat","cl"]},
	{"name": "snd_mainmenu_music_break_time_min", "type": "cvar", "help": "Minimum amount of time to pause between playing main menu music", "flags": ["cheat","cl"]},
	{"name": "snd_mainmusic_hrtf", "type": "cvar", "help": "Makes main menu music sound like a radio", "flags": []},
	{"name": "snd_mainmusic_hrtf_transition_speed", "type": "cvar", "help": "Makes main menu music sound like a radio", "flags": []},
	{"name": "snd_max_same_sounds", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_max_same_weapon_sounds", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_menumusic_volume", "type": "cvar", "help": "Relative volume of the main menu music\n", "flags": ["a"]},
	{"name": "snd_mergemethod", "type": "cvar", "help": "Sound merge method (0 == sum and clip, 1 == max, 2 == avg).", "flags": []},
	{"name": "snd_mix_async", "type": "cvar", "help": "Sets sound to get mixed asynchronously on a different thread\n", "flags": ["a"]},
	{"name": "snd_mix_async_frequency", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_directivity", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_dry_volume", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_occlusion", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_optimization", "type": "cvar", "help": "Turns optimization on for mixing if set to 1 (default). 0 to turn the optimization off.", "flags": []},
	{"name": "snd_mix_soundchar_enabled", "type": "cvar", "help": "Turns sound char on for mixing if set to 1 (default). 0 to turn the sound char off and use default behavior (spatial instead of doppler, directional, etc...).", "flags": []},
	{"name": "snd_mix_spatial_blend", "type": "cvar", "help": "Ratio to use to blend spatialized (3d) audio with mono input", "flags": ["a"]},
	{"name": "snd_mix_spatial_blend_override", "type": "cvar", "help": "Allows snd_mix_spatial_blend to override provided blend values", "flags": ["a"]},
	{"name": "snd_mix_test1", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_test2", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mixahead", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_mixerMasterDSP", "type": "cvar", "help": "\n", "flags": ["cheat"]},
	{"name": "snd_mixerMasterLevel", "type": "cvar", "help": "\n", "flags": ["cheat"]},
	{"name": "snd_musicvolume", "type": "cvar", "help": "Overall music volume\n", "flags": ["a"]},
	{"name": "snd_mute_losefocus", "type": "cvar", "help": "Percentage of volume reduced when game is not in focus", "flags": ["a"]},
	{"name": "snd_noextraupdate", "type": "cvar", "help": "\n", "flags": []},
	{"name": "snd_obscured_gain_dB", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_bounces", "type": "cvar", "help": "", "flags": ["cheat","rep"]},
	{"name": "snd_occlusion_eq_high", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_eq_low", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_eq_mid", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_no_eq_scale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_rays", "type": "cvar", "help": "", "flags": ["cheat","rep"]},
	{"name": "snd_op_test_convar", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_pause_all", "type": "cvar", "help": "Specifies to pause all sounds and not just voice", "flags": ["cheat"]},
	{"name": "snd_pitchquality", "type": "cvar", "help": "Whether to use high quality pitch shifters\n", "flags": ["a"]},
	{"name": "snd_playsounds", "type": "command", "help": "Play sounds from the game sounds txt file at a given location", "flags": ["cheat","server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "snd_pre_gain_dist_falloff", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_prefetch_common", "type": "cvar", "help": "Prefetch common sounds from directories specified in scripts/sound_prefetch.txt", "flags": []},
	{"name": "snd_print_channel_by_guid", "type": "command", "help": "Prints the content of a channel from its guid. snd_print_channel_by_guid <guid>.", "flags": ["cheat"]},
	{"name": "snd_print_channel_by_index", "type": "command", "help": "Prints the content of a channel from its index. snd_print_channel_by_index <index>.", "flags": ["cheat"]},
	{"name": "snd_print_channels", "type": "command", "help": "Prints all the active channel.", "flags": ["cheat"]},
	{"name": "snd_print_dsp_effect", "type": "command", "help": "Prints the content of a dsp effect.", "flags": []},
	{"name": "snd_profile", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "snd_rear_headphone_position", "type": "command", "help": "Specifies the position  (in degrees) of the virtual rear left/right headphones.", "flags": []},
	{"name": "snd_rear_speaker_scale", "type": "cvar", "help": "How much to scale rear speaker contribution to front stereo output", "flags": ["cheat"]},
	{"name": "snd_rear_stereo_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual rear left/right speakers.", "flags": []},
	{"name": "snd_rear_surround_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual rear left/right speakers.", "flags": []},
	{"name": "snd_refdb", "type": "cvar", "help": "Reference dB at snd_refdist", "flags": ["cheat"]},
	{"name": "snd_refdist", "type": "cvar", "help": "Reference distance for snd_refdb", "flags": ["cheat"]},
	{"name": "snd_report_format_sound", "type": "cvar", "help": "If set to 1, report all sound formats.\n", "flags": ["cheat"]},
	{"name": "snd_report_loop_sound", "type": "cvar", "help": "If set to 1, report all sounds that just looped.\n", "flags": ["cheat"]},
	{"name": "snd_report_start_sound", "type": "cvar", "help": "If set to 1, report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example). Use snd_showstart to see the sounds that are really played.\n", "flags": ["cheat"]},
	{"name": "snd_report_stop_sound", "type": "cvar", "help": "If set to 1, report all sounds stopped with S_StopSound().\n", "flags": ["cheat"]},
	{"name": "snd_report_verbose_error", "type": "cvar", "help": "If set to 1, report more error found when playing sounds.\n", "flags": ["cheat"]},
	{"name": "snd_restart", "type": "command", "help": "Restart sound system.", "flags": ["cheat"]},
	{"name": "snd_ricochets", "type": "cvar", "help": "Toggles the ricochet sounds on impacts.", "flags": ["a","cl"]},
	{"name": "snd_set_master_volume", "type": "command", "help": "Sets the master volume for a channel. snd_set_master_volume <guid> <mastervolume>.", "flags": ["cheat"]},
	{"name": "snd_setmixer", "type": "command", "help": "Set named Mixgroup of current mixer to mix vol, mute, solo.", "flags": ["cheat"]},
	{"name": "snd_setmixlayer", "type": "command", "help": "Set named Mixgroup of named mix layer to mix vol, mute, solo.", "flags": ["cheat"]},
	{"name": "snd_setmixlayer_amount", "type": "command", "help": "Set named mix layer mix amount.", "flags": ["cheat"]},
	{"name": "snd_setsoundparam", "type": "command", "help": "Set a sound paramater", "flags": ["server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "snd_show", "type": "cvar", "help": "Show sounds info\n", "flags": ["cheat"]},
	{"name": "snd_show_channel_count", "type": "cvar", "help": "Show the current count of channel types.", "flags": []},
	{"name": "snd_show_filter", "type": "cvar", "help": "Limit debug sounds to those containing this substring\n", "flags": ["cheat"]},
	{"name": "snd_show_print", "type": "cvar", "help": "Print to console the sounds that are normally printed on screen only. 1 = print to console and to screen; 2 = print only to console\n", "flags": ["cheat"]},
	{"name": "snd_showmixer", "type": "cvar", "help": "Toggles showing the sound mixer every frame.\n", "flags": ["cheat"]},
	{"name": "snd_showmixgroupcontext", "type": "cvar", "help": "0 - OFF\n, 1 - Show mixgroup context of entity making sound\n2 - Show all mixgroup matches\n3 - Show all mixgroup matches with current soundmixer for entity\n", "flags": ["cheat"]},
	{"name": "snd_showstart", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_allow_dynamic_chantype", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_exec_when_paused", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_flush_operators", "type": "command", "help": "Flush and re-parse the sound operator system", "flags": ["cheat"]},
	{"name": "snd_sos_list_operator_updates", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_print_operators", "type": "command", "help": "Prints a list of currently available operators", "flags": []},
	{"name": "snd_sos_show_block_debug", "type": "cvar", "help": "Spew data about the list of block entries.", "flags": ["cheat"]},
	{"name": "snd_sos_show_client_rcv", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_client_xmit", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "snd_sos_show_entry_match_free", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_show_operator_entry_filter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_init", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_parse", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_prestart", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_shutdown", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_start", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_stop_entry", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_updates", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_opvar_list", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_show_queuetotrack", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_server_xmit", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "snd_sos_show_source_info", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_show_startqueue", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_track_list", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_soundmixer", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_soundmixer_flush", "type": "command", "help": "Reload soundmixers.txt file.", "flags": ["cheat"]},
	{"name": "snd_soundmixer_list_mix_groups", "type": "command", "help": "List all mix groups to dev console.", "flags": []},
	{"name": "snd_soundmixer_list_mix_layers", "type": "command", "help": "List all mix layers to dev console.", "flags": []},
	{"name": "snd_soundmixer_list_mixers", "type": "command", "help": "List all mixers to dev console.", "flags": []},
	{"name": "snd_soundmixer_parse_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_soundmixer_set_trigger_factor", "type": "command", "help": "Set named mix layer / mix group, trigger amount.", "flags": ["cheat"]},
	{"name": "snd_soundmixer_version", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_spatialize_roundrobin", "type": "cvar", "help": "Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized per frame.", "flags": []},
	{"name": "snd_spew_dsp_process", "type": "cvar", "help": "Spews text every time a DSP effect is applied if set to 1. 0 to turn the spew off (default).", "flags": []},
	{"name": "snd_stereo_speaker_pan_exponent", "type": "command", "help": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.", "flags": []},
	{"name": "snd_stereo_speaker_pan_radial_weight", "type": "command", "help": "Apply cos(angle) * weight before pan law", "flags": []},
	{"name": "snd_store_filepaths", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_surround_speaker_pan_exponent", "type": "command", "help": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.", "flags": []},
	{"name": "snd_surround_speaker_pan_radial_weight", "type": "command", "help": "Apply cos(angle) * weight before pan law", "flags": []},
	{"name": "snd_surround_speakers", "type": "cvar", "help": "0 = Headphones, 2 = Stereo speakers, 4 = Quad, 5 = 5.1 Surround\n", "flags": ["a"]},
	{"name": "snd_thread_mode", "type": "cvar", "help": "Run the sound on a thread (independent of mix): 0 = no thread, 1 = sync thread, 2 = async thread", "flags": []},
	{"name": "snd_thread_updaterate", "type": "cvar", "help": "Number of async thread updates per second", "flags": []},
	{"name": "snd_visualize", "type": "cvar", "help": "Show sounds location in world\n", "flags": ["cheat"]},
	{"name": "snd_vol_no_xfade", "type": "cvar", "help": "If current and target volumes are close, don't cross-fade.", "flags": []},
	{"name": "snd_vol_xfade_incr_max", "type": "cvar", "help": "Never change volume by more than +/-N units per frame during cross-fade.", "flags": []},
	{"name": "snd_vol_xfade_speed_multiplier_for_doppler", "type": "cvar", "help": "Doppler effect is extremely sensible to volume variation. To reduce the pops, the cross-fade has to be very slow.", "flags": []},
	{"name": "snd_vol_xfade_time", "type": "cvar", "help": "Channel volume cross-fade time in seconds.", "flags": []},
	{"name": "snd_volume_ambient", "type": "cvar", "help": "Overall ambient volume\n", "flags": ["a"]},
	{"name": "snd_volume_footsteps", "type": "cvar", "help": "Overall footsteps volume\n", "flags": ["a"]},
	{"name": "snd_volume_menumusic", "type": "cvar", "help": "Relative volume of the main menu music\n", "flags": ["a"]},
	{"name": "snd_volume_music", "type": "cvar", "help": "Overall music volume\n", "flags": ["a"]},
	{"name": "snd_volume_music_multiplier_inoverlay", "type": "cvar", "help": "Music/ambient volume multiplier when Steam Overlay is active", "flags": ["a"]},
	{"name": "snd_volume_physics", "type": "cvar", "help": "Overall Physics volume\n", "flags": ["a"]},
	{"name": "snd_volume_ui", "type": "cvar", "help": "Overall UI volume\n", "flags": ["a"]},
	{"name": "snd_volume_weapon", "type": "cvar", "help": "Overall weapon volume\n", "flags": ["a"]},
	{"name": "snd_volume_weapon_localplayer", "type": "cvar", "help": "Weapon volume of the local player\n", "flags": ["a"]},
	{"name": "snd_vox_captiontrace", "type": "cvar", "help": "Shows sentence name for sentences which are set not to show captions.", "flags": []},
	{"name": "snd_vox_globaltimeout", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_vox_sectimetout", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_vox_seqtimetout", "type": "cvar", "help": "", "flags": []},
	{"name": "sndplaydelay", "type": "command", "help": "", "flags": []},
	{"name": "sniperspeak", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sniperviewdist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sound_device_list", "type": "command", "help": "Lists all available audio devices.", "flags": []},
	{"name": "sound_device_override", "type": "cvar", "help": "ID of the sound device to use", "flags": ["a"]},
	{"name": "soundfade", "type": "command", "help": "Fade client volume.", "flags": ["server_can_execute"]},
	{"name": "soundinfo", "type": "command", "help": "Describe the current sound device.", "flags": []},
	{"name": "soundlist", "type": "command", "help": "List all known sounds.", "flags": []},
	{"name": "soundpatch_captionlength", "type": "cvar", "help": "How long looping soundpatch captions should display for.", "flags": ["rep","cl"]},
	{"name": "soundscape_debug", "type": "cvar", "help": "When on, draws lines to all env_soundscape entities.Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.", "flags": ["sv","cheat"]},
	{"name": "soundscape_dumpclient", "type": "command", "help": "Dumps the client's soundscape data.\n", "flags": ["cheat","cl"]},
	{"name": "soundscape_fadetime", "type": "cvar", "help": "Time to crossfade sound effects between soundscapes", "flags": ["cheat"]},
	{"name": "soundscape_flush", "type": "command", "help": "Flushes the server & client side soundscapes", "flags": ["sv"]},
	{"name": "soundscape_message", "type": "cvar", "help": "", "flags": []},
	{"name": "soundscape_radius_debug", "type": "cvar", "help": "Prints current volume of radius sounds", "flags": ["cheat"]},
	{"name": "sp_fade_and_force_respawn", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "speak", "type": "command", "help": "Play a constructed sentence.", "flags": []},
	{"name": "spec_allow_roaming", "type": "cvar", "help": "If nonzero, allow free-roaming spectator camera.", "flags": ["sv","cheat","rep"]},
	{"name": "spec_freeze_deathanim_time", "type": "cvar", "help": "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_distance_max", "type": "cvar", "help": "Maximum random distance from the target to stop when framing them in observer freeze cam.", "flags": ["cheat","cl"]},
	{"name": "spec_freeze_distance_min", "type": "cvar", "help": "Minimum random distance from the target to stop when framing them in observer freeze cam.", "flags": ["cheat","cl"]},
	{"name": "spec_freeze_panel_extended_time", "type": "cvar", "help": "Time spent with the freeze panel still up after observer freeze cam is done.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_target_fov", "type": "cvar", "help": "The target FOV that the deathcam should use.", "flags": ["cheat","rep","cl"]},
	{"name": "spec_freeze_target_fov_long", "type": "cvar", "help": "The target FOV that the deathcam should use when the cam zoom far away on the target.", "flags": ["cheat","rep","cl"]},
	{"name": "spec_freeze_time", "type": "cvar", "help": "Time spend frozen in observer freeze cam.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_time_lock", "type": "cvar", "help": "Time players are prevented from skipping the freeze cam", "flags": ["sv","rep"]},
	{"name": "spec_freeze_traveltime", "type": "cvar", "help": "Time taken to zoom in to frame a target in observer freeze cam.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_traveltime_long", "type": "cvar", "help": "Time taken to zoom in to frame a target in observer freeze cam when they are far away.", "flags": ["cheat","rep","cl"]},
	{"name": "spec_lock_to_accountid", "type": "cvar", "help": "As an observer, lock the spectate target to the given accountid.", "flags": ["cl"]},
	{"name": "spec_mode", "type": "command", "help": "Set spectator mode", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "spec_next", "type": "command", "help": "Spectate next player", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "spec_player", "type": "command", "help": "Spectate player by name", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "spec_pos", "type": "command", "help": "dump position and angles to the console", "flags": ["cl"]},
	{"name": "spec_prev", "type": "command", "help": "Spectate previous player", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "spec_replay_message_time", "type": "cvar", "help": "How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time", "flags": ["rep"]},
	{"name": "spec_replay_on_death", "type": "cvar", "help": "When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players", "flags": ["rep"]},
	{"name": "spec_replay_rate_base", "type": "cvar", "help": "Base time scale of Killer Replay.Experimental.", "flags": ["rep"]},
	{"name": "spec_replay_rate_limit", "type": "cvar", "help": "Minimum allowable pause between replay requests in seconds", "flags": ["rep"]},
	{"name": "spec_scoreboard", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "spec_track", "type": "cvar", "help": "Tracks an entity in spec mode", "flags": ["cl"]},
	{"name": "-speed", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+speed", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "speed_funnelling_enabled", "type": "cvar", "help": "Toggle whether the player is funneled into portals while running on speed paint.", "flags": ["rep","cl"]},
	{"name": "speed_paint_color", "type": "cvar", "help": "Color for speed paint", "flags": ["a","rep","cl"]},
	{"name": "ss_enable", "type": "cvar", "help": "Enables Split Screen support. Play Single Player now launches into split screen mode. NO ONLINE SUPPORT", "flags": ["cl"]},
	{"name": "ss_force_primary_fullscreen", "type": "cvar", "help": "If enabled, all splitscreen users will only see the first user's screen full screen", "flags": ["cl"]},
	{"name": "ss_map", "type": "command", "help": "Start playing on specified map with max allowed splitscreen players.", "flags": ["norecord"]},
	{"name": "ss_pip_bottom_offset", "type": "cvar", "help": "PIP offset vector from the bottom of the screen", "flags": ["cl"]},
	{"name": "ss_pip_right_offset", "type": "cvar", "help": "PIP offset vector from the right of the screen", "flags": ["cl"]},
	{"name": "ss_pipscale", "type": "cvar", "help": "Scale of the PIP aspect ratio to our resolution.", "flags": ["cl"]},
	{"name": "ss_pipsplit", "type": "cvar", "help": "If enabled, use PIP instead of splitscreen. (Only works for 2 players)", "flags": ["cl"]},
	{"name": "ss_reloadletterbox", "type": "command", "help": "ss_reloadletterbox", "flags": ["cl"]},
	{"name": "ss_splitmode", "type": "cvar", "help": "Two player split screen mode (0 - recommended settings base on the width, 1 - horizontal, 2 - vertical (only allowed in widescreen)", "flags": ["a","cl"]},
	{"name": "ss_verticalsplit", "type": "cvar", "help": "Two player split screen uses vertical split (do not set this directly, use ss_splitmode instead).", "flags": ["cl"]},
	{"name": "ss_voice_hearpartner", "type": "cvar", "help": "Route voice between splitscreen players on same system.", "flags": []},
	{"name": "startdemos", "type": "command", "help": "Play demos in demo sequence.", "flags": ["norecord"]},
	{"name": "startmovie", "type": "command", "help": "Start recording movie frames.", "flags": ["norecord"]},
	{"name": "startneurotoxins", "type": "command", "help": "Starts the nerve gas timer.", "flags": ["sv"]},
	{"name": "startupmenu", "type": "command", "help": "Opens initial menu screen and loads the background bsp, but only if no other level is being loaded, and we're not in developer mode.", "flags": ["clientcmd_can_execute"]},
	{"name": "stat_memory", "type": "command", "help": "Dump memory stats", "flags": []},
	{"name": "status", "type": "command", "help": "Display map and connection status.", "flags": []},
	{"name": "steam_controller_status", "type": "command", "help": "Spew report of steam controller status", "flags": []},
	{"name": "steamcontroller_flow_interval", "type": "cvar", "help": "", "flags": []},
	{"name": "steamcontroller_flow_sensitivity", "type": "cvar", "help": "", "flags": []},
	{"name": "steamcontroller_haptic_intensity", "type": "cvar", "help": "", "flags": []},
	{"name": "steaminput_default_glyphstyle", "type": "cvar", "help": "Fallback values for unspecified style in steam input Glyphs. 0: Knockout, 1: Light, 2: Dark", "flags": ["a","cl"]},
	{"name": "steaminput_default_neutral", "type": "cvar", "help": "Fallback values for unspecified style in steam input Glyphs. 0: Use Colors, 1: Solid", "flags": ["a","cl"]},
	{"name": "steaminput_default_solid", "type": "cvar", "help": "Fallback values for unspecified style in steam input Glyphs. 0: Not Solid, 1: Solid", "flags": ["a","cl"]},
	{"name": "step_spline", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "stick_cam_correct_pitch", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "stick_cam_input_cancel_threshold", "type": "cvar", "help": "Threshold of mouse_y input to cancel correct pitch", "flags": ["cheat","rep","cl"]},
	{"name": "stick_cam_min_rotation_rate", "type": "cvar", "help": "The rotation rate with which to rotate the player's up vector", "flags": ["rep","cl"]},
	{"name": "stick_cam_over_the_top_threshold", "type": "cvar", "help": "How far up/down the player must look to trigger pitch instead of roll correction", "flags": ["rep","cl"]},
	{"name": "stick_cam_pitch_rate", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "stick_cam_pitch_vs_roll_good_angle_threshold", "type": "cvar", "help": "When not overpitched in the target orientation, how close to straight up/down we have to be looking to trigger the pitch transition", "flags": ["rep","cl"]},
	{"name": "stick_cam_roll_rate", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "stick_paint_color", "type": "cvar", "help": "Color for stick paint", "flags": ["a","rep","cl"]},
	{"name": "stick_props_use_constraints", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "stick_surface_transition_delay", "type": "cvar", "help": "How long to wait after transitioning to a new stick surface before the player can transition again.", "flags": ["cheat","rep","cl"]},
	{"name": "stop", "type": "command", "help": "Finish recording demo.", "flags": ["norecord"]},
	{"name": "stop_transition_videos_fadeout", "type": "command", "help": "Fades out all transition videos playing to the screen: <time>", "flags": ["server_can_execute","cl"]},
	{"name": "stopdemo", "type": "command", "help": "Stop playing back a demo.", "flags": ["norecord"]},
	{"name": "stopsound", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "stopsoundscape", "type": "command", "help": "Stops all soundscape processing and fades current looping sounds", "flags": ["cheat"]},
	{"name": "stopvideos", "type": "command", "help": "Stops all videos playing to the screen", "flags": ["server_can_execute","cl"]},
	{"name": "stopvideos_fadeout", "type": "command", "help": "Fades out all videos playing to the screen: <time>", "flags": ["server_can_execute","cl"]},
	{"name": "+strafe", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-strafe", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "strider_always_use_procedural_height", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_ar2_altfire_dmg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_distributed_fire", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_eyepositions", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_knowledge", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_after_escorts_dead", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_cover_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_duration", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_move_tolerance", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_refill_rate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_start_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_free_pass_tolerance_after_escorts_dead", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_idle_test", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_immolate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_missile_suppress_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_missile_suppress_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_pct_height_no_crouch_move", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_peek_eye_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_peek_eye_dist_z", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_peek_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_peek_time_after_damage", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_show_cannonlos", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_show_focus", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_show_weapon_los_condition", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_show_weapon_los_z", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "strider_test_height", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "striderbuster_allow_all_damage", "type": "cvar", "help": "If set to '1' the bomb will detonate on any damage taken.  Otherwise only the player may trigger it.", "flags": ["sv"]},
	{"name": "striderbuster_autoaim_radius", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "striderbuster_debugseek", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "striderbuster_die_detach", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "striderbuster_dive_force", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "striderbuster_falloff_power", "type": "cvar", "help": "Order of the distance falloff. 1 = linear 2 = quadratic", "flags": ["sv"]},
	{"name": "striderbuster_health", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "striderbuster_leg_stick_dist", "type": "cvar", "help": "If the buster hits a strider's leg, the max distance from the head at which it sticks anyway.", "flags": ["sv"]},
	{"name": "striderbuster_magnetic_force_hunter", "type": "cvar", "help": "Intensity of magnade's attraction to a hunter.", "flags": ["sv"]},
	{"name": "striderbuster_magnetic_force_strider", "type": "cvar", "help": "Intensity of magnade's attraction to a strider.", "flags": ["sv"]},
	{"name": "striderbuster_shot_velocity", "type": "cvar", "help": "Speed at which launch the bomb from the physcannon", "flags": ["sv"]},
	{"name": "striderbuster_use_particle_flare", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "stringtable_alwaysrebuilddictionaries", "type": "cvar", "help": "Rebuild dictionary file on every level load\n", "flags": []},
	{"name": "stringtable_showsizes", "type": "cvar", "help": "Show sizes of string tables when building for signon\n", "flags": []},
	{"name": "stringtable_usedictionaries", "type": "cvar", "help": "Use dictionaries for string table networking\n", "flags": []},
	{"name": "stringtabledictionary", "type": "command", "help": "Create dictionary for current strings.", "flags": []},
	{"name": "studio_queue_mode", "type": "cvar", "help": "", "flags": []},
	{"name": "stuffcmds", "type": "command", "help": "Parses and stuffs command line + commands to command buffer.", "flags": []},
	{"name": "suitvolume", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "surfaceprop", "type": "command", "help": "Reports the surface properties at the cursor", "flags": ["sv","cheat"]},
	{"name": "sv_accelerate", "type": "cvar", "help": "Linear acceleration amount (old value is 5.6)", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_air_max_horizontal_parachute_ratio", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_air_max_wishspeed", "type": "cvar", "help": "How much maximum speed a player accelerates when jumping from a standstill and holding forward in air.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_air_pushaway_dist", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_airaccelerate", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_allchat", "type": "cvar", "help": "Players can receive all other players' text chat, team restrictions apply", "flags": ["sv","nf"]},
	{"name": "sv_allow_legacy_cmd_execution_from_client", "type": "cvar", "help": "Enables old concommand execution behavior allowing remote clients to run any command not explicitly flagged as disallowed.", "flags": []},
	{"name": "sv_allow_lobby_connect_only", "type": "cvar", "help": "If set, players may only join this server from matchmaking lobby, may not connect directly.", "flags": []},
	{"name": "sv_allow_logic_convar", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_allow_mobile_portal_teleportation", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_allow_mobile_portals", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_allow_pas_attenutation_in_singleplayer", "type": "cvar", "help": "Toggles allowing CPASAttenuationFilter for singleplayer games.", "flags": ["sv"]},
	{"name": "sv_allowdownload", "type": "cvar", "help": "Allow clients to download files", "flags": []},
	{"name": "sv_allowupload", "type": "cvar", "help": "Allow clients to upload customizations files", "flags": []},
	{"name": "sv_alternateticks", "type": "cvar", "help": "If set, server only simulates entities on even numbered ticks.\n", "flags": []},
	{"name": "sv_autoladderdismount", "type": "cvar", "help": "Automatically dismount from ladders when you reach the end (don't have to +USE).", "flags": ["rep","cl"]},
	{"name": "sv_autosave", "type": "cvar", "help": "Set to 1 to autosave game on level transition. Does not affect autosave triggers.", "flags": []},
	{"name": "sv_benchmark_autovprofrecord", "type": "cvar", "help": "If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark.vprof.", "flags": ["sv"]},
	{"name": "sv_benchmark_force_start", "type": "command", "help": "Force start the benchmark. This is only for debugging. It's better to set sv_benchmark to 1 and restart the level.", "flags": ["sv"]},
	{"name": "sv_benchmark_numticks", "type": "cvar", "help": "If > 0, then it only runs the benchmark for this # of ticks.", "flags": ["sv"]},
	{"name": "sv_bonus_challenge", "type": "cvar", "help": "Set to values other than 0 to select a bonus map challenge type.", "flags": ["sv","rep"]},
	{"name": "sv_bounce", "type": "cvar", "help": "Bounce multiplier for when physically simulated objects collide with other objects.", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_bounce_anim_time_continue", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_bounce_anim_time_predict", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_bounce_reflect_enabled", "type": "cvar", "help": "Enable/Disable reflection on bounce.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_bowie_maneuver_threshold", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_box_physgundrop_angle_threshold", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_broadcast_ugc_download_progress_interval", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_broadcast_ugc_downloads", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_cacheencodedents", "type": "cvar", "help": "If set to 1, does an optimization to prevent extra SendTable_Encode calls.", "flags": []},
	{"name": "sv_can_carry_both_guns", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "sv_can_swap_guns", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "sv_can_swap_guns_anytime", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_cheats", "type": "cvar", "help": "Allow cheats on server", "flags": ["nf","rep"]},
	{"name": "sv_clearhinthistory", "type": "command", "help": "Clear memory of server side hints displayed to the player.", "flags": ["sv"]},
	{"name": "sv_client_cmdrate_difference", "type": "cvar", "help": "cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate.", "flags": ["rep"]},
	{"name": "sv_client_event_data_ratelimit_bytes", "type": "cvar", "help": "Max bytes per window for client listen event data.", "flags": ["rep"]},
	{"name": "sv_client_keyvalues_data_ratelimit_bytes", "type": "cvar", "help": "Max bytes per window for client keyvalue data.", "flags": ["rep"]},
	{"name": "sv_client_max_interp_ratio", "type": "cvar", "help": "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect.", "flags": ["rep"]},
	{"name": "sv_client_min_interp_ratio", "type": "cvar", "help": "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected).\n              -1 = let clients set cl_interp_ratio to anything\n any other value = set minimum value for cl_interp_ratio", "flags": ["rep"]},
	{"name": "sv_client_predict", "type": "cvar", "help": "This can be used to force the value of cl_predict for connected clients (only while they are connected).\n   -1 = let clients set cl_predict to anything\n    0 = force cl_predict to 0\n    1 = force cl_predict to 1", "flags": ["rep"]},
	{"name": "sv_client_voice_data_ratelimit_bytes", "type": "cvar", "help": "Max bytes per window for client voice data.", "flags": ["rep"]},
	{"name": "sv_clip_contacts_to_portals", "type": "cvar", "help": "Enable/Disable clipping contact regions to portal planes.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_clockcorrection_msecs", "type": "cvar", "help": "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount", "flags": ["sv"]},
	{"name": "sv_consistency", "type": "cvar", "help": "Whether the server enforces file consistency for critical files", "flags": ["rep"]},
	{"name": "sv_contact", "type": "cvar", "help": "Contact email for server sysop", "flags": ["nf"]},
	{"name": "sv_contact_region_thickness", "type": "cvar", "help": "The thickness of a contact region (how much the box expands).", "flags": ["cheat","rep","cl"]},
	{"name": "sv_dc_friends_reqd", "type": "cvar", "help": "Set this to 0 to allow direct connects to a game in progress even if no presents are present", "flags": ["sv"]},
	{"name": "sv_debug_draw_contacts", "type": "cvar", "help": "0: Dont draw anything.  1: Draw contacts.  2: Draw colored contacts", "flags": ["cheat","rep","cl"]},
	{"name": "sv_debug_dumpportalhole_nextcheck", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_debug_laser", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_debug_physicsshadowclones", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_debug_player_use", "type": "cvar", "help": "Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success", "flags": ["rep","cl"]},
	{"name": "sv_debug_portal_race_checkpoint", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_debug_ugc_downloads", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_debugmanualmode", "type": "cvar", "help": "Make sure entities correctly report whether or not their network data has changed.", "flags": []},
	{"name": "sv_debugtempentities", "type": "cvar", "help": "Show temp entity bandwidth usage.", "flags": []},
	{"name": "sv_delta_entity_full_buffer_size", "type": "cvar", "help": "Buffer size for delta entities", "flags": []},
	{"name": "sv_deltaprint", "type": "cvar", "help": "Print accumulated CalcDelta profiling data (only if sv_deltatime is on)", "flags": []},
	{"name": "sv_deltatime", "type": "cvar", "help": "Enable profiling of CalcDelta calls", "flags": []},
	{"name": "sv_disable_pas", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "sv_downloadlist_include_navfile", "type": "cvar", "help": "Include map nav files in the download list for clients.", "flags": []},
	{"name": "sv_downloadurl", "type": "cvar", "help": "Location from which clients can download missing files", "flags": ["rep"]},
	{"name": "sv_drowning_damage_initial", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_drowning_damage_max", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_dump_class_info", "type": "command", "help": "Dump server class infos.", "flags": []},
	{"name": "sv_dump_class_table", "type": "command", "help": "Dump server class table matching the pattern (substr).", "flags": []},
	{"name": "sv_dump_entity_factories", "type": "command", "help": "Lists all server entity factory names.", "flags": ["sv"]},
	{"name": "sv_dump_entity_namespaces", "type": "command", "help": "Lists all server entity namespaces.", "flags": ["sv"]},
	{"name": "sv_dump_entity_sizes", "type": "command", "help": "Print sizeof(entclass)", "flags": ["sv"]},
	{"name": "sv_dump_portalsimulator_collision", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_dump_portalsimulator_holeshapes", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_dump_serialized_entities_mem", "type": "command", "help": "Dump serialized entity allocations stats.", "flags": []},
	{"name": "sv_dumpstringtables", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "sv_duplicate_playernames_ok", "type": "cvar", "help": "When enabled player names won't have the (#) in front of their names its the same as another player.", "flags": ["rep"]},
	{"name": "sv_edgefriction", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_enable_delta_packing", "type": "cvar", "help": "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.", "flags": []},
	{"name": "sv_enable_paint_power_user_debug", "type": "cvar", "help": "Enable debug spew for paint power users.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_enableholdrotation", "type": "cvar", "help": "When enabled, hold attack2 to rotate held objects", "flags": ["rep","cl"]},
	{"name": "sv_enableoldqueries", "type": "cvar", "help": "Enable support for old style (HL1) server queries", "flags": []},
	{"name": "sv_enablepreferredcarry", "type": "cvar", "help": "When enabled, held objects stay at their preferred carry angle", "flags": ["rep","cl"]},
	{"name": "sv_env_entity_makers_enabled", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_extra_client_connect_time", "type": "cvar", "help": "Seconds after client connect during which extra frames are buffered to prevent non-delta'd update", "flags": []},
	{"name": "sv_extract_ammo_from_dropped_weapons", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_filterban", "type": "cvar", "help": "Set packet filtering by IP mode", "flags": []},
	{"name": "sv_findsoundname", "type": "command", "help": "Find sound names which reference the specified wave files.", "flags": ["cheat"]},
	{"name": "sv_footstep_sound_frequency", "type": "cvar", "help": "How frequent to hear the player's step sound or how fast they appear to be running from first person.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_footsteps", "type": "cvar", "help": "Play footstep sound for players", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_force_enable_paint_in_map", "type": "cvar", "help": "Forcefully allocates paintmaps in maps that don't have 'Paint in map' set.", "flags": ["cheat","rep"]},
	{"name": "sv_force_transmit_ents", "type": "cvar", "help": "Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however).", "flags": ["sv"]},
	{"name": "sv_force_transmit_players", "type": "cvar", "help": "Will transmit players to all clients regardless of PVS checks.", "flags": ["sv"]},
	{"name": "sv_forcepreload", "type": "cvar", "help": "Force server side preloading.", "flags": ["a"]},
	{"name": "sv_friction", "type": "cvar", "help": "World friction.", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_fullsyncclones", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_futbol_fake_force", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_futbol_floor_exit_angle", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_futbol_force_players_to_catch", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_futbol_use_cooldown_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_futbol_use_steals_from_holding_player", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_gameinstructor_disable", "type": "cvar", "help": "Force all clients to disable their game instructors.", "flags": ["rep","cl"]},
	{"name": "sv_gravity", "type": "cvar", "help": "World gravity.", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_health_approach_enabled", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_health_approach_speed", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_hibernate_ms", "type": "cvar", "help": "# of milliseconds to sleep per frame while hibernating", "flags": []},
	{"name": "sv_hibernate_postgame_delay", "type": "cvar", "help": "# of seconds to wait after final client leaves before hibernating.", "flags": []},
	{"name": "sv_hibernate_punt_tv_clients", "type": "cvar", "help": "When enabled will punt all GOTV clients during hibernation", "flags": []},
	{"name": "sv_hibernate_when_empty", "type": "cvar", "help": "Puts the server into extremely low CPU usage mode when no clients connected", "flags": []},
	{"name": "sv_highlight_distance", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_highlight_duration", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_hl2mp_item_respawn_time", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "sv_hl2mp_weapon_respawn_time", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "sv_holdrotationsensitivity", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "sv_hudhint_sound", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_infinite_ammo", "type": "cvar", "help": "Player's active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the magazine.", "flags": ["rep","cl"]},
	{"name": "sv_ladder_useonly", "type": "cvar", "help": "If set, ladders can only be mounted by pressing +USE", "flags": ["rep","cl"]},
	{"name": "sv_ladderautomountdot", "type": "cvar", "help": "When auto-mounting a ladder by looking up its axis, this is the tolerance for looking now directly along the ladder axis.", "flags": ["rep","cl"]},
	{"name": "sv_lagcompensateself", "type": "cvar", "help": "Player can lag compensate themselves.", "flags": ["sv","cheat"]},
	{"name": "sv_lagcompensationforcerestore", "type": "cvar", "help": "Don't test validity of a lag comp restore, just do it.", "flags": ["sv","cheat"]},
	{"name": "sv_lan", "type": "cvar", "help": "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )", "flags": []},
	{"name": "sv_laser_cube_autoaim", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_load_forced_client_names_file", "type": "command", "help": "Loads a file containing SteamID64 names for clients", "flags": ["sv"]},
	{"name": "sv_log_http_record_before_any_listeners", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_log_onefile", "type": "cvar", "help": "Log server information to only one file.", "flags": ["a"]},
	{"name": "sv_logbans", "type": "cvar", "help": "Log server bans in the server logs.", "flags": ["a"]},
	{"name": "sv_logblocks", "type": "cvar", "help": "If true when log when a query is blocked (can cause very large log files)", "flags": []},
	{"name": "sv_logdownloadlist", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_logecho", "type": "cvar", "help": "Echo log information to the console.", "flags": ["a"]},
	{"name": "sv_logfile", "type": "cvar", "help": "Log server information in the log file.", "flags": ["a"]},
	{"name": "sv_logflush", "type": "cvar", "help": "Flush the log file to disk on each write (slow).", "flags": ["a"]},
	{"name": "sv_logsdir", "type": "cvar", "help": "Folder in the game directory where server logs will be stored.", "flags": ["a"]},
	{"name": "sv_logsecret", "type": "cvar", "help": "If set then include this secret when doing UDP logging (will use 0x53 as packet type, not usual 0x52)", "flags": []},
	{"name": "sv_logsocket", "type": "cvar", "help": "Uses a specific outgoing socket for sv udp logging", "flags": []},
	{"name": "sv_logsocket2", "type": "cvar", "help": "Uses a specific outgoing socket for second source of sv udp logging", "flags": []},
	{"name": "sv_logsocket2_substr", "type": "cvar", "help": "Uses a substring match for second source of sv udp logging", "flags": []},
	{"name": "sv_massreport", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_master_share_game_socket", "type": "cvar", "help": "Use the game's socket to communicate to the master server. If this is 0, then it will create a socket on -steamport + 1 to communicate to the master server on.", "flags": []},
	{"name": "sv_max_allowed_developer", "type": "cvar", "help": "Determines maximum allowed developer.", "flags": ["rep"]},
	{"name": "sv_max_allowed_net_graph", "type": "cvar", "help": "Determines max allowed net_graph value for clients in multiplayer.", "flags": ["nf","rep","cl"]},
	{"name": "sv_max_distance_transmit_footsteps", "type": "cvar", "help": "Maximum distance to transmit footstep sound effects.", "flags": ["rep","cl"]},
	{"name": "sv_max_dropped_packets_to_process", "type": "cvar", "help": "Max dropped packets to process. Lower settings prevent lagged players from simulating too far in the past. Setting of 0 disables cap.", "flags": []},
	{"name": "sv_max_queries_sec", "type": "cvar", "help": "Maximum queries per second to respond to from a single IP address.", "flags": []},
	{"name": "sv_max_queries_sec_global", "type": "cvar", "help": "Maximum queries per second to respond to from anywhere.", "flags": []},
	{"name": "sv_max_queries_tracked_ips_max", "type": "cvar", "help": "Window over which to average queries per second averages.", "flags": []},
	{"name": "sv_max_queries_tracked_ips_prune", "type": "cvar", "help": "Window over which to average queries per second averages.", "flags": []},
	{"name": "sv_max_queries_window", "type": "cvar", "help": "Window over which to average queries per second averages.", "flags": []},
	{"name": "sv_max_usercmd_move_magnitude", "type": "cvar", "help": "Maximum move magnitude that can be requested by client.", "flags": ["sv"]},
	{"name": "sv_maxclientframes", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_maxcmdrate", "type": "cvar", "help": "(If sv_mincmdrate is > 0), this sets the maximum value for cl_cmdrate.", "flags": ["rep"]},
	{"name": "sv_maxrate", "type": "cvar", "help": "Max bandwidth rate allowed on server, 0 == unlimited", "flags": ["rep"]},
	{"name": "sv_maxreplay", "type": "cvar", "help": "Maximum replay time in seconds", "flags": []},
	{"name": "sv_maxroutable", "type": "cvar", "help": "Server upper bound on net_maxroutable that a client can use.", "flags": []},
	{"name": "sv_maxspeed", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_maxunlag", "type": "cvar", "help": "Maximum lag compensation in seconds", "flags": ["sv"]},
	{"name": "sv_maxupdaterate", "type": "cvar", "help": "Maximum updates per second that the server will allow", "flags": ["rep"]},
	{"name": "sv_maxuptimelimit", "type": "cvar", "help": "If set, whenever a game ends, if the server uptime exceeds this number of hours, the server will exit.", "flags": []},
	{"name": "sv_maxusrcmdprocessticks", "type": "cvar", "help": "Maximum number of client-issued usrcmd ticks that can be replayed in packet loss conditions, 0 to allow no restrictions", "flags": ["sv"]},
	{"name": "sv_maxusrcmdprocessticks_holdaim", "type": "cvar", "help": "Hold client aim for multiple server sim ticks when client-issued usrcmd contains multiple actions (0: off; 1: hold this server tick; 2+: hold multiple ticks)", "flags": ["sv"]},
	{"name": "sv_maxusrcmdprocessticks_warning", "type": "cvar", "help": "Print a warning when user commands get dropped due to insufficient usrcmd ticks allocated, number of seconds to throttle, negative disabled", "flags": ["sv"]},
	{"name": "sv_maxvelocity", "type": "cvar", "help": "Maximum speed any ballistically moving object is allowed to attain per axis.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_memlimit", "type": "cvar", "help": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.", "flags": []},
	{"name": "sv_mincmdrate", "type": "cvar", "help": "This sets the minimum value for cl_cmdrate. 0 == unlimited.", "flags": ["rep"]},
	{"name": "sv_minrate", "type": "cvar", "help": "Min bandwidth rate allowed on server, 0 == unlimited", "flags": ["rep"]},
	{"name": "sv_minupdaterate", "type": "cvar", "help": "Minimum updates per second that the server will allow", "flags": ["rep"]},
	{"name": "sv_minuptimelimit", "type": "cvar", "help": "If set, whenever a game ends, if the server uptime is less than this number of hours, the server will continue running regardless of sv_memlimit.", "flags": []},
	{"name": "sv_monster_turret_velocity", "type": "cvar", "help": "The amount of velocity the monster turret tries to move with.", "flags": ["sv","cheat"]},
	{"name": "sv_multiplayer_maxtempentities", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_multiplayer_sounds", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_new_delta_bits", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_noclipaccelerate", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_noclipduringpause", "type": "cvar", "help": "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.).", "flags": ["cheat","rep","cl"]},
	{"name": "sv_noclipspeed", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_noclipspeed_duck_multiplier", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_noclipspeed_sprint_multiplier", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_npc_talker_maxdist", "type": "cvar", "help": "NPCs over this distance from the player won't attempt to speak.", "flags": ["sv"]},
	{"name": "sv_occlude_players", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_paint_detection_sphere_radius", "type": "cvar", "help": "The radius of the query sphere used to find the color of a light map at a contact point in world space.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_paint_surface_prop_force", "type": "cvar", "help": "How strongly to stick props to sticky surfaces.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_paint_trigger_sound_delay", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_paint_unpaintable_ents", "type": "cvar", "help": "Allows painting unpaintable entities visually by changing the rendercolor.", "flags": ["sv","cheat"]},
	{"name": "sv_paintairacceleration", "type": "cvar", "help": "Air acceleration in Paint", "flags": ["cheat","rep","cl"]},
	{"name": "sv_paintblob_applies_impulse", "type": "cvar", "help": "Should paint blobs apply an impulse when they impact physics objects?", "flags": ["sv","cheat"]},
	{"name": "sv_paintblob_force_scale", "type": "cvar", "help": "Scale of force to apply to physics objects hit by paint blobs", "flags": ["sv","cheat"]},
	{"name": "sv_parallel_packentities", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_parallel_send", "type": "cvar", "help": "Pack and send snapshots in parallel for smoother server tick rate at the expense of spending more CPU.", "flags": []},
	{"name": "sv_parallel_sendsnapshot", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_password", "type": "cvar", "help": "Server password for entry into multiplayer games", "flags": ["nf","prot","norecord"]},
	{"name": "sv_pausable", "type": "cvar", "help": "Is the server pausable.", "flags": []},
	{"name": "sv_pausable_dev", "type": "cvar", "help": "Whether listen server is pausable when running -dev and playing solo against bots", "flags": []},
	{"name": "sv_pausable_dev_ds", "type": "cvar", "help": "Whether dedicated server is pausable when running -dev and playing solo against bots", "flags": []},
	{"name": "sv_personality_core_pca_pitch", "type": "cvar", "help": "Pitch value for personality core perferred carry angles.", "flags": ["sv"]},
	{"name": "sv_personality_core_pca_roll", "type": "cvar", "help": "Roll value for personality core perferred carry angles.", "flags": ["sv"]},
	{"name": "sv_personality_core_pca_yaw", "type": "cvar", "help": "Yaw value for personality core perferred carry angles.", "flags": ["sv"]},
	{"name": "sv_phys_props_block_movers", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_player_collide_with_laser", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_player_funnel_gimme_dot", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_player_funnel_height_adjust", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_player_funnel_into_portals", "type": "cvar", "help": "Causes the player to auto correct toward the center of floor portals.", "flags": ["rep","cl"]},
	{"name": "sv_player_funnel_snap_threshold", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_player_funnel_speed_bonus", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_player_funnel_well_above", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_player_trace_through_portals", "type": "cvar", "help": "Causes player movement traces to trace through portals.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_player_use_cone_size", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_playeranimstate_transitions", "type": "cvar", "help": "Enable transitions on animstate sequence changes", "flags": ["sv"]},
	{"name": "sv_playerperfhistorycount", "type": "cvar", "help": "Number of samples to maintain in player perf history", "flags": ["sv"]},
	{"name": "sv_portal2_button_hint_range", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_portal2_pickup_hint_range", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_portal_coop_ping_cooldown_time", "type": "cvar", "help": "Time (in seconds) between coop pings", "flags": ["sv","cheat"]},
	{"name": "sv_portal_coop_ping_hud_indicitator_duration", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_portal_coop_ping_indicator_show_to_all_players", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_portal_debug_touch", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_portal_gamemode_override", "type": "cvar", "help": "Game mode type override. none, sp=singleplayer, coop=coop, mp=multiplayer", "flags": ["sv"]},
	{"name": "sv_portal_high_speed_physics_early_untouch", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_portal_legacy_compat", "type": "cvar", "help": "Enables Portal 1 compatibility mode.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_new_player_trace", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_new_player_trace_vs_remote_ents", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_new_trace_debugboxes", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_portal_new_velocity_check", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_portal_pathtrack_track_width_on", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_portal_placement_debug", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_portal_placement_never_bump", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_placement_never_fail", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_placement_on_paint", "type": "cvar", "help": "Enable/Disable placing portal on painted surfaces", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_race_checkpoint_model_scale", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_portal_shot_fizzles_enemy_portals", "type": "cvar", "help": "[PORTALMP] Your portal shots will fizzle any enemy player portals that they hit", "flags": ["sv"]},
	{"name": "sv_portal_shot_push", "type": "cvar", "help": "[PORTALMP] Amount of force to apply to a player if your shot hits them. <= 0 passes through the player", "flags": ["sv"]},
	{"name": "sv_portal_staticcollisioncache_cachebrushes", "type": "cvar", "help": "Cache all solid brushes as polyhedrons on level load", "flags": ["rep","cl"]},
	{"name": "sv_portal_staticcollisioncache_cachestaticprops", "type": "cvar", "help": "Cache all solid static props' vcollides as polyhedrons on level load", "flags": ["rep","cl"]},
	{"name": "sv_portal_teleportation_resets_collision_events", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_portal_trace_vs_displacements", "type": "cvar", "help": "Use traces against portal environment displacement geometry", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_trace_vs_holywall", "type": "cvar", "help": "Use traces against portal environment carved wall", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_trace_vs_staticprops", "type": "cvar", "help": "Use traces against portal environment static prop geometry", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_trace_vs_world", "type": "cvar", "help": "Use traces against portal environment world geometry", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_turret_fire_cone_z_tolerance", "type": "cvar", "help": "The max height of the turrets firing view cone (in degrees)", "flags": ["sv","cheat"]},
	{"name": "sv_portal_turret_max_burn_time", "type": "cvar", "help": "The max time that the turret will burn for.", "flags": ["sv","cheat"]},
	{"name": "sv_portal_turret_min_burn_time", "type": "cvar", "help": "The min time that the turret will burn for.", "flags": ["sv","cheat"]},
	{"name": "sv_portal_turret_shoot_at_death", "type": "cvar", "help": "If the turrets should shoot after they die.", "flags": ["sv","cheat"]},
	{"name": "sv_portal_turret_shoot_through_portals_proximity", "type": "cvar", "help": "Only allow turrets to shoot through portals at players this close to portals (in square units)", "flags": ["sv","cheat"]},
	{"name": "sv_portal_unified_velocity", "type": "cvar", "help": "An attempt at removing patchwork velocity tranformation in portals, moving to a unified approach.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_post_teleportation_box_time", "type": "cvar", "help": "Time to use a slightly expanded box for contacts right after teleportation.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_precacheinfo", "type": "command", "help": "Show precache info.", "flags": []},
	{"name": "sv_press_jump_to_bounce", "type": "cvar", "help": "0: Bounce on touch, 1: Bounce on press, 2: Bounce on hold", "flags": ["rep","cl"]},
	{"name": "sv_projected_entities_use_placement_helper", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_prop_door_open_speed_scale", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_props_funnel_into_portals", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_props_funnel_into_portals_deceleration", "type": "cvar", "help": "When a funneling prop is leaving a portal, decelerate any velocity that is in opposition to funneling by this amount per second", "flags": ["sv","cheat"]},
	{"name": "sv_pure", "type": "command", "help": "Show user data.", "flags": []},
	{"name": "sv_pure_consensus", "type": "cvar", "help": "Minimum number of file hashes to agree to form a consensus.", "flags": []},
	{"name": "sv_pure_kick_clients", "type": "cvar", "help": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.", "flags": []},
	{"name": "sv_pure_retiretime", "type": "cvar", "help": "Seconds of server idle time to flush the sv_pure file hash cache.", "flags": []},
	{"name": "sv_pure_trace", "type": "cvar", "help": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.", "flags": []},
	{"name": "sv_pvsskipanimation", "type": "cvar", "help": "Skips SetupBones when npc's are outside the PVS", "flags": ["a","sv"]},
	{"name": "sv_querycache_stats", "type": "command", "help": "Display status of the query cache (client only)", "flags": ["sv"]},
	{"name": "sv_quota_stringcmdspersecond", "type": "cvar", "help": "How many string commands per second clients are allowed to submit, 0 to disallow all string commands", "flags": []},
	{"name": "sv_randomize_nugget_availability", "type": "cvar", "help": "[PORTALMP] Randomize which nuggets are available on map start", "flags": ["sv"]},
	{"name": "sv_randomize_nugget_availability_groupavailability", "type": "cvar", "help": "[PORTALMP] 0.0 to 1.0 chances that a group of nuggets exists after randomization", "flags": ["sv"]},
	{"name": "sv_randomize_nugget_availability_ungroupedavailability", "type": "cvar", "help": "[PORTALMP] 0.0 to 1.0 chances that an individual ungrouped nugget exists after randomization", "flags": ["sv"]},
	{"name": "sv_regeneration_force_on", "type": "cvar", "help": "Cheat to test regenerative health systems", "flags": ["sv","cheat"]},
	{"name": "sv_regeneration_wait_time", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_region", "type": "cvar", "help": "The region of the world to report this server in.", "flags": []},
	{"name": "sv_reliableavatardata", "type": "cvar", "help": "When enabled player avatars are exchanged via gameserver (0: off, 1: players, 2: server)", "flags": ["rep"]},
	{"name": "sv_reload_node_position_keys", "type": "command", "help": "Reloads node positions for challenge mode finish lines.", "flags": ["sv"]},
	{"name": "sv_remove_old_ugc_downloads", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_replaybots", "type": "cvar", "help": "If set to 1, the server records data needed to replay network stream from bot's perspective", "flags": []},
	{"name": "sv_report_client_settings", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "sv_reservation_grace", "type": "cvar", "help": "Time in seconds given for a lobby reservation.", "flags": []},
	{"name": "sv_reservation_tickrate_adjustment", "type": "cvar", "help": "Adjust server tickrate upon reservation", "flags": []},
	{"name": "sv_reservation_timeout", "type": "cvar", "help": "Time in seconds before lobby reservation expires.", "flags": []},
	{"name": "sv_robust_explosions", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_rollangle", "type": "cvar", "help": "Max view roll angle", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_rollspeed", "type": "cvar", "help": "", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_schrodinger_emit_sound", "type": "cvar", "help": "Emit a sound at the cube's partner when it becomes powered. Used as an audio cue", "flags": ["sv"]},
	{"name": "sv_script_dump_docs", "type": "command", "help": "Dump server VScript docs", "flags": ["sv","norecord"]},
	{"name": "sv_script_think_interval", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_search_key", "type": "cvar", "help": "When searching for a dedicated server from lobby, restrict search to only dedicated servers having the same sv_search_key.", "flags": []},
	{"name": "sv_search_team_key", "type": "cvar", "help": "When initiating team search, set this key to match with known opponents team", "flags": []},
	{"name": "sv_setsteamaccount", "type": "command", "help": "token\nSet game server account token to use for logging in to a persistent game server account", "flags": []},
	{"name": "sv_show_cull_props", "type": "cvar", "help": "Print out props that are being culled/added by recipent proxies.", "flags": []},
	{"name": "sv_show_placement_help_in_preview", "type": "cvar", "help": "Forces the placement preview to show any help in placement given from info_placement_helper entities.\n", "flags": ["sv"]},
	{"name": "sv_show_usermessage", "type": "cvar", "help": "Shows the user messages that the server is sending to clients. Setting this to 2 will show the contents of the message", "flags": []},
	{"name": "sv_showanimstate", "type": "cvar", "help": "Show the (server) animation state for the specified entity (-1 for none).", "flags": ["sv","cheat"]},
	{"name": "sv_showanimstate_activities", "type": "cvar", "help": "Show activities in the (server) animation state display.", "flags": ["sv","cheat"]},
	{"name": "sv_showanimstate_log", "type": "cvar", "help": "1 to output sv_showanimstate to Msg(). 2 to store in AnimStateServer.log. 3 for both.", "flags": ["sv","cheat"]},
	{"name": "sv_showladders", "type": "cvar", "help": "Show bbox and dismount points for all ladders (must be set before level load.)\n", "flags": ["sv"]},
	{"name": "sv_showlagcompensation", "type": "cvar", "help": "Show lag compensated hitboxes whenever a player is lag compensated.", "flags": ["sv","cheat"]},
	{"name": "sv_showlagcompensation_duration", "type": "cvar", "help": "Duration to show lag-compensated hitboxes", "flags": ["sv","cheat"]},
	{"name": "sv_showtags", "type": "command", "help": "Describe current gametags.", "flags": []},
	{"name": "sv_shutdown", "type": "command", "help": "Sets the server to shutdown when all games have completed", "flags": []},
	{"name": "sv_signon_dos_disconnect", "type": "cvar", "help": "Number of extra signon state confirmations required to disconnect a misbehaving client.", "flags": []},
	{"name": "sv_skyname", "type": "cvar", "help": "Current name of the skybox texture", "flags": ["a","sv","rep"]},
	{"name": "sv_slippery_cube_button", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_sound_discardextraunreliable", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_soundemitter_filecheck", "type": "command", "help": "Report missing wave files for sounds and game_sounds files.", "flags": ["cheat"]},
	{"name": "sv_soundemitter_flush", "type": "command", "help": "Flushes the sounds.txt system (server only)", "flags": ["sv","cheat"]},
	{"name": "sv_soundemitter_reload", "type": "command", "help": "Flushes the sounds.txt system", "flags": ["sv"]},
	{"name": "sv_soundemitter_spew", "type": "command", "help": "Print details about a sound.", "flags": ["cheat"]},
	{"name": "sv_soundemitter_trace", "type": "cvar", "help": "Show all EmitSound calls including their symbolic name and the actual wave file they resolved to. (-1 = for nobody, 0 = for everybody, n = for one entity)\n", "flags": ["rep","cl"]},
	{"name": "sv_soundscape_printdebuginfo", "type": "command", "help": "print soundscapes", "flags": ["sv","cheat"]},
	{"name": "sv_spec_post_death_additional_time", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_specaccelerate", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_specnoclip", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_specspeed", "type": "cvar", "help": "", "flags": ["a","nf","rep","cl"]},
	{"name": "sv_speed_normal", "type": "cvar", "help": "For tweaking the normal speed when off speed paint.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_speed_paint_acceleration", "type": "cvar", "help": "How fast the player accelerates on speed paint.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_speed_paint_max", "type": "cvar", "help": "For tweaking the max speed for speed paint.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_speed_paint_on_bounce_deceleration_delay", "type": "cvar", "help": "How long before starting to decelerate if going from speed to bounce.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_speed_paint_ramp_acceleration", "type": "cvar", "help": "How fast the player accelerates on speed paint when on a ramp.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_speed_paint_side_move_factor", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_standable_normal", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_stats", "type": "cvar", "help": "Collect CPU usage stats", "flags": []},
	{"name": "sv_steamauth_enforce", "type": "cvar", "help": "By default, player must maintain a reliable connection to Steam servers. When player Steam session drops, enforce it: 2 = instantly kick, 1 = kick at next spawn, 0 = do not kick.", "flags": []},
	{"name": "sv_steamgroup", "type": "cvar", "help": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.", "flags": ["nf"]},
	{"name": "sv_steamgroup_exclusive", "type": "cvar", "help": "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.", "flags": []},
	{"name": "sv_stickysprint_default", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "sv_stopspeed", "type": "cvar", "help": "Minimum stopping speed when on ground.", "flags": ["cheat","nf","rep","cl"]},
	{"name": "sv_stressbots", "type": "cvar", "help": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.", "flags": []},
	{"name": "sv_strict_notarget", "type": "cvar", "help": "If set, notarget will cause entities to never think they are in the pvs", "flags": ["sv"]},
	{"name": "sv_tags", "type": "cvar", "help": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.", "flags": ["nf"]},
	{"name": "sv_temp_baseline_string_table_buffer_size", "type": "cvar", "help": "Buffer size for writing string table baselines", "flags": []},
	{"name": "sv_test_scripted_sequences", "type": "cvar", "help": "Tests for scripted sequences that are embedded in the world. Run through your map with this set to check for NPCs falling through the world.", "flags": ["sv"]},
	{"name": "sv_test_steam_connection_failure", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_teststepsimulation", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_thinktimecheck", "type": "cvar", "help": "Check for thinktimes all on same timestamp.", "flags": ["sv"]},
	{"name": "sv_thinnerprojectedwalls", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_timeout", "type": "cvar", "help": "After this many seconds without a message from a client, the client is dropped", "flags": []},
	{"name": "sv_ugc_manager_max_new_file_check_interval_secs", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_unlockedchapters", "type": "cvar", "help": "Highest unlocked game chapter.", "flags": ["a"]},
	{"name": "sv_use_bendy_model", "type": "cvar", "help": "Use the bendy stick-man as the player model", "flags": ["rep","cl"]},
	{"name": "sv_use_edgefriction", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_use_find_closest_passable_space", "type": "cvar", "help": "Enables heavy-handed player teleporting stuck fix code.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_use_shadow_clones", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "sv_use_trace_duration", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_use_transformed_collideables", "type": "cvar", "help": "Disables traces against remote portal moving entities using transforms to bring them into local space.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_usercmd_custom_random_seed", "type": "cvar", "help": "When enabled server will populate an additional random seed independent of the client", "flags": ["sv"]},
	{"name": "sv_validate_edict_change_infos", "type": "cvar", "help": "Verify that edict changeinfos are being calculated properly (used to debug local network backdoor mode).", "flags": []},
	{"name": "sv_vehicle_autoaim_scale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_visiblemaxplayers", "type": "cvar", "help": "Overrides the max players reported to prospective clients", "flags": []},
	{"name": "sv_voice_proximity", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_voice_proximity_minvolume", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "sv_voice_proximity_positional", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_voice_proximity_use_falloff", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "sv_voicecodec", "type": "cvar", "help": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.", "flags": ["rep"]},
	{"name": "sv_voiceenable", "type": "cvar", "help": "", "flags": ["a","nf"]},
	{"name": "sv_walkable_normal", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_wall_bounce_trade", "type": "cvar", "help": "How much outward velocity is traded for upward velocity on wall bounces", "flags": ["cheat","rep","cl"]},
	{"name": "sv_wall_jump_help", "type": "cvar", "help": "Enable the wall jump helper to help keep players bouncing between two opposing walls", "flags": ["rep","cl"]},
	{"name": "sv_wall_jump_help_amount", "type": "cvar", "help": "Maximum correction amount per wall bounce", "flags": ["rep","cl"]},
	{"name": "sv_wall_jump_help_debug", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_wall_jump_help_threshold", "type": "cvar", "help": "Threshold at which the wall jump helper will bring the player's velocity in line with the surface normal", "flags": ["rep","cl"]},
	{"name": "sv_water_movespeed_multiplier", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_water_swim_mode", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_weapon_pickup_time_delay", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_workshop_allow_other_maps", "type": "cvar", "help": "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.", "flags": ["sv"]},
	{"name": "sv_zoom_stop_movement_threashold", "type": "cvar", "help": "Move command amount before breaking player out of toggle zoom.", "flags": ["rep","cl"]},
	{"name": "sv_zoom_stop_time_threashold", "type": "cvar", "help": "Time amount before breaking player out of toggle zoom.", "flags": ["rep","cl"]},
	{"name": "swap_model_for_fizzler_fx", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "swap_ss_input", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "tbeam_air_ctrl_threshold", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "tbeam_allow_player_struggle", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "tbeam_prevent_players_from_colliding", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "template_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "test_dispatcheffect", "type": "command", "help": "Test a clientside dispatch effect.\n\tUsage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>\n\tDefaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>\n", "flags": ["sv","cheat"]},
	{"name": "test_for_vphysics_clips_when_dropping", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "test_freezeframe", "type": "command", "help": "Test the freeze frame code.", "flags": ["cheat","cl"]},
	{"name": "testhudanim", "type": "command", "help": "Test a hud element animation.\n\tArguments: <anim name>\n", "flags": ["cheat","cl"]},
	{"name": "testscript_debug", "type": "cvar", "help": "Debug test scripts.", "flags": []},
	{"name": "testscript_running", "type": "cvar", "help": "Set to true when test scripts are running", "flags": []},
	{"name": "think_limit", "type": "cvar", "help": "Maximum think time in milliseconds, warning is printed if this is exceeded.", "flags": ["rep","cl"]},
	{"name": "thirdperson", "type": "command", "help": "Switch to thirdperson camera.", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "thirdperson_mayamode", "type": "command", "help": "Switch to thirdperson Maya-like camera controls.", "flags": ["cheat","cl"]},
	{"name": "thirdperson_platformer", "type": "cvar", "help": "Player will aim in the direction they are moving.", "flags": ["cl"]},
	{"name": "thirdperson_screenspace", "type": "cvar", "help": "Movement will be relative to the camera, eg: left means screen-left", "flags": ["cl"]},
	{"name": "threadpool_affinity", "type": "cvar", "help": "Enable setting affinity", "flags": []},
	{"name": "threadpool_cycle_reserve", "type": "command", "help": "Cycles threadpool reservation by powers of 2", "flags": []},
	{"name": "threadpool_reserve", "type": "cvar", "help": "Consume the specified number of threads in the thread pool", "flags": []},
	{"name": "thumper_show_radius", "type": "cvar", "help": "If true, advisor will use her custom impact damage table.", "flags": ["sv","cheat"]},
	{"name": "timedemo", "type": "command", "help": "Play a demo and report performance info.", "flags": ["norecord"]},
	{"name": "timedemo_vprofrecord", "type": "command", "help": "Play a demo and report performance info.  Also record vprof data for the span of the demo", "flags": ["norecord"]},
	{"name": "timedemoquit", "type": "command", "help": "Play a demo, report performance info, and then exit", "flags": ["norecord"]},
	{"name": "timerefresh", "type": "command", "help": "Profile the renderer.", "flags": ["cheat"]},
	{"name": "toggle", "type": "command", "help": "Toggles a convar on or off, or cycles through a set of values.", "flags": []},
	{"name": "toggle_duck", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "toggle_speed", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "toggleconsole", "type": "command", "help": "Show/hide the console.", "flags": ["norecord"]},
	{"name": "trace_report", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "tracer_extra", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "traceray_cliptoworld", "type": "cvar", "help": "Limit the range of traces against entities to where the world was hit.", "flags": ["cheat","rep"]},
	{"name": "traceray_force_vphysics", "type": "cvar", "help": "0 = standard trace behavior, 1 = use vphysics for displacement collisions, 2 = use vphysics for all collisions", "flags": ["cheat","rep"]},
	{"name": "traceray_test", "type": "command", "help": "Perform a TraceRay in front of the player. Args: [startdist=64.0] [length=256.0] [size=8.0] [offset=0.0] [hittriggers=0]", "flags": ["sv","cheat"]},
	{"name": "traceray_test_exact", "type": "command", "help": "Perform a TraceRay with the specified attributes. Args: startX startY startZ endX endY endZ minsX minsY minsZ maxsX maxsY maxsZ [hittriggers=0]", "flags": ["sv","cheat"]},
	{"name": "traceray_unshrink_vphysics_brushes", "type": "cvar", "help": "Roughly account for shrunken VPhysics brush collision by expanding the trace epsilon.", "flags": ["cheat","rep"]},
	{"name": "triple_monitor_mode", "type": "cvar", "help": "Enable triple-monitor mode, restricting UI elements to the middle third of the display", "flags": ["a","cl"]},
	{"name": "tv_playcast_delay_prediction", "type": "cvar", "help": "", "flags": []},
	{"name": "tv_playcast_delay_resync", "type": "cvar", "help": "To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure", "flags": []},
	{"name": "tv_playcast_retry_timeout", "type": "cvar", "help": "In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync", "flags": []},
	{"name": "ui_gameui_debug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_loadingscreen_autotransition_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_loadingscreen_fadein_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_loadingscreen_mintransition_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_loadingscreen_transition_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_play_online_browser", "type": "cvar", "help": "Whether play online displays a browser or plain search dialog.", "flags": ["cl"]},
	{"name": "ui_posedebug_fade_in_time", "type": "cvar", "help": "Time during which a new pose activity layer is shown in green in +posedebug UI", "flags": ["cheat","norecord","cl"]},
	{"name": "ui_posedebug_fade_out_time", "type": "cvar", "help": "Time to keep a no longer active pose activity layer in red until removing it from +posedebug UI", "flags": ["cheat","norecord","cl"]},
	{"name": "ui_public_lobby_filter_campaign", "type": "cvar", "help": "Filter type for campaigns on the public lobby display", "flags": ["a","cl"]},
	{"name": "ui_public_lobby_filter_difficulty2", "type": "cvar", "help": "Filter type for difficulty on the public lobby display", "flags": ["a","cl"]},
	{"name": "ui_public_lobby_filter_status", "type": "cvar", "help": "Filter type for game status on the public lobby display", "flags": ["a","cl"]},
	{"name": "ui_reloadscheme", "type": "command", "help": "Reloads the resource files for the active UI window", "flags": ["cl"]},
	{"name": "ui_show_community_map_names", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_steam_overlay_notification_position", "type": "cvar", "help": "Steam overlay notification position", "flags": ["a","cl"]},
	{"name": "ui_transition_delay", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_transition_effect", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_transition_time", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ui_volume_scale", "type": "cvar", "help": "\n", "flags": []},
	{"name": "unbind", "type": "command", "help": "Unbind a key.", "flags": []},
	{"name": "unbindall", "type": "command", "help": "Unbind all keys.", "flags": []},
	{"name": "unbindalljoystick", "type": "command", "help": "Unbind all joystick keys.", "flags": []},
	{"name": "unbindallmousekeyboard", "type": "command", "help": "Unbind all mouse / keyboard keys.", "flags": []},
	{"name": "unpause", "type": "command", "help": "Unpause the game.", "flags": []},
	{"name": "upgrade_paintgun", "type": "command", "help": "Upgrades the paintgun to all powers.\n\tArguments:   \tnone ", "flags": ["sv","cheat"]},
	{"name": "upgrade_portalgun", "type": "command", "help": "Upgrades the portalgun to a dual portalgun.\n\tArguments:   \tnone ", "flags": ["sv","cheat"]},
	{"name": "upgrade_potatogun", "type": "command", "help": "Upgrades to the portalgun to the dual portalgun with potatos attached", "flags": ["sv","cheat"]},
	{"name": "+use", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-use", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "use", "type": "command", "help": "Use a particular weapon\t\nArguments: <weapon_name>", "flags": ["sv","print"]},
	{"name": "+use_or_reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-use_or_reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "use_server_portal_particles", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "user", "type": "command", "help": "Show user data.", "flags": []},
	{"name": "users", "type": "command", "help": "Show user info for players on server.", "flags": []},
	{"name": "v_centermove", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_centerspeed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_ipitch_cycle", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_ipitch_level", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_iroll_cycle", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_iroll_level", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_iyaw_cycle", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_iyaw_level", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_view_height", "type": "cvar", "help": "Sets the player's view height.", "flags": ["cheat","rep","cl"]},
	{"name": "v_view_height_dead", "type": "cvar", "help": "Sets the player's view height when dead.", "flags": ["cheat","rep","cl"]},
	{"name": "v_view_height_ducked", "type": "cvar", "help": "Set's the player's view height when ducked.", "flags": ["cheat","rep","cl"]},
	{"name": "vcollide_wireframe", "type": "cvar", "help": "Render physics collision models (models, static props, ragdolls) in wireframe", "flags": ["cheat","cl"]},
	{"name": "vehicle_flushscript", "type": "command", "help": "Flush and reload all vehicle scripts", "flags": ["sv"]},
	{"name": "version", "type": "command", "help": "Print version info string.", "flags": []},
	{"name": "vgui_drawfocus", "type": "cvar", "help": "Report which panel is under the mouse.", "flags": []},
	{"name": "vgui_drawkeyfocus", "type": "cvar", "help": "Report which panel has keyboard focus.", "flags": []},
	{"name": "-vgui_drawtree", "type": "command", "help": "", "flags": []},
	{"name": "vgui_drawtree", "type": "cvar", "help": "Draws the vgui panel hiearchy to the specified depth level.", "flags": ["cheat"]},
	{"name": "+vgui_drawtree", "type": "command", "help": "", "flags": []},
	{"name": "vgui_drawtree_bounds", "type": "cvar", "help": "Show panel bounds.", "flags": []},
	{"name": "vgui_drawtree_clear", "type": "command", "help": "", "flags": []},
	{"name": "vgui_drawtree_draw_selected", "type": "cvar", "help": "Highlight the selected panel", "flags": []},
	{"name": "vgui_drawtree_freeze", "type": "cvar", "help": "Set to 1 to stop updating the vgui_drawtree view.", "flags": []},
	{"name": "vgui_drawtree_hidden", "type": "cvar", "help": "Draw the hidden panels.", "flags": []},
	{"name": "vgui_drawtree_panelalpha", "type": "cvar", "help": "Show the panel alpha values in the vgui_drawtree view.", "flags": []},
	{"name": "vgui_drawtree_panelptr", "type": "cvar", "help": "Show the panel pointer values in the vgui_drawtree view.", "flags": []},
	{"name": "vgui_drawtree_popupsonly", "type": "cvar", "help": "Draws the vgui popup list in hierarchy(1) or most recently used(2) order.", "flags": []},
	{"name": "vgui_drawtree_render_order", "type": "cvar", "help": "List the vgui_drawtree panels in render order.", "flags": []},
	{"name": "vgui_drawtree_scheme", "type": "cvar", "help": "Show scheme file for each panel", "flags": []},
	{"name": "vgui_drawtree_visible", "type": "cvar", "help": "Draw the visible panels.", "flags": []},
	{"name": "vgui_dump_panels", "type": "command", "help": "vgui_dump_panels [visible]", "flags": []},
	{"name": "vgui_message_dialog_modal", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "vgui_spew_fonts", "type": "command", "help": "", "flags": []},
	{"name": "vgui_togglepanel", "type": "command", "help": "show/hide vgui panel by name.", "flags": []},
	{"name": "view_punch_decay", "type": "cvar", "help": "Decay factor exponent for view punch", "flags": ["cheat","rep","cl"]},
	{"name": "view_recoil_tracking", "type": "cvar", "help": "How closely the view tracks with the aim punch from weapon recoil", "flags": ["cheat","rep","cl"]},
	{"name": "viewanim_addkeyframe", "type": "command", "help": "", "flags": ["cheat","cl"]},
	{"name": "viewanim_create", "type": "command", "help": "viewanim_create", "flags": ["cl"]},
	{"name": "viewanim_load", "type": "command", "help": "load animation from file", "flags": ["cl"]},
	{"name": "viewanim_reset", "type": "command", "help": "reset view angles!", "flags": ["cheat","cl"]},
	{"name": "viewanim_save", "type": "command", "help": "Save current animation to file", "flags": ["cl"]},
	{"name": "viewanim_test", "type": "command", "help": "test view animation", "flags": ["cl"]},
	{"name": "viewmodel_offset_x", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "viewmodel_offset_y", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "viewmodel_offset_z", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "viewmodel_recoil", "type": "cvar", "help": "Amount of weapon recoil/aimpunch to display on viewmodel", "flags": ["a","cl"]},
	{"name": "viper_bug", "type": "command", "help": "Starts a remote bug on machine aliased <name>. See scripts/remotebugids.txt for alias list.\n", "flags": ["sv"]},
	{"name": "vis_force", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "vismon_poll_frequency", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "vismon_trace_limit", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "vm_debug", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "vm_draw_addon", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "vm_draw_always", "type": "cvar", "help": "1 - Always draw view models, 2 - Never draw view models.  Should be done before map launches.", "flags": ["cheat","cl"]},
	{"name": "voice_all_icons", "type": "cvar", "help": "Draw all players' voice icons", "flags": ["cl"]},
	{"name": "voice_buffer_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_caster_enable", "type": "cvar", "help": "Toggle voice transmit and receive for casters. 0 = no caster, account number of caster to enable.", "flags": ["a"]},
	{"name": "voice_caster_scale", "type": "cvar", "help": "Caster Volume 0.0-1.0", "flags": ["a"]},
	{"name": "voice_clientdebug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "voice_debugfeedback", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_debugfeedbackfrom", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_enable", "type": "cvar", "help": "Toggle voice transmit and receive.", "flags": ["a"]},
	{"name": "voice_enable_toggle", "type": "command", "help": "Toggles voice_enable convar.", "flags": []},
	{"name": "voice_fadeouttime", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_forcemicrecord", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "voice_gain_downward_multiplier", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_gain_max", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_gain_rate", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_gain_target", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_head_icon_height", "type": "cvar", "help": "Voice icons are this many inches over player eye positions", "flags": ["cl"]},
	{"name": "voice_head_icon_size", "type": "cvar", "help": "Size of voice icon over player heads in inches", "flags": ["cl"]},
	{"name": "voice_icons_method", "type": "cvar", "help": "0 = classic style, 1 = particles, 2 = integrated into target ID", "flags": ["cl"]},
	{"name": "voice_inputfromfile", "type": "cvar", "help": "Get voice input from 'voice_input.wav' rather than from the microphone.", "flags": []},
	{"name": "voice_local_icon", "type": "cvar", "help": "Draw local player's voice icon", "flags": ["cl"]},
	{"name": "voice_loopback", "type": "cvar", "help": "", "flags": ["user"]},
	{"name": "voice_minimum_gain", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_modenable", "type": "cvar", "help": "Enable/disable voice in this mod.", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "voice_mute", "type": "command", "help": "Mute a specific Steam user", "flags": []},
	{"name": "voice_overdrive", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_overdrivefadetime", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_player_speaking_delay_threshold", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "voice_player_volume", "type": "command", "help": "", "flags": []},
	{"name": "voice_positional", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "voice_positional_seconds_after_death", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_profile", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_recordtofile", "type": "cvar", "help": "Record mic data and decompressed voice data into 'voice_micdata.wav' and 'voice_decompressed.wav'", "flags": []},
	{"name": "voice_reset_mutelist", "type": "command", "help": "Reset all mute information for all players who were ever muted.", "flags": []},
	{"name": "voice_scale", "type": "cvar", "help": "Overall volume of voice over IP 0.0-1.0", "flags": ["a"]},
	{"name": "voice_serverdebug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "voice_show_mute", "type": "command", "help": "Show whether current players are muted.", "flags": []},
	{"name": "voice_showchannels", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_showincoming", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_steal", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_system_enable", "type": "cvar", "help": "Toggle voice system.", "flags": ["a"]},
	{"name": "voice_threshold", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "voice_thresold_delay", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_unmute", "type": "command", "help": "Unmute a specific Steam user, or `all` to unmute all connected players.", "flags": []},
	{"name": "voice_vox", "type": "cvar", "help": "Voice chat uses a vox-style always on", "flags": ["a","clientcmd_can_execute"]},
	{"name": "voice_writevoices", "type": "cvar", "help": "Saves each speaker's voice data into separate .wav files\n", "flags": []},
	{"name": "voice_xsend_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "-voicerecord", "type": "command", "help": "", "flags": []},
	{"name": "+voicerecord", "type": "command", "help": "", "flags": []},
	{"name": "voicerecord_toggle", "type": "command", "help": "", "flags": []},
	{"name": "volume", "type": "cvar", "help": "Sound volume\n", "flags": ["a"]},
	{"name": "vox_reload", "type": "command", "help": "Reload sentences.txt file", "flags": ["cheat"]},
	{"name": "voxeltree_box", "type": "command", "help": "View entities in the voxel-tree inside box <Vector(min), Vector(max)>.", "flags": ["sv","cheat"]},
	{"name": "voxeltree_playerview", "type": "command", "help": "View entities in the voxel-tree at the player position.", "flags": ["sv","cheat"]},
	{"name": "voxeltree_sphere", "type": "command", "help": "View entities in the voxel-tree inside sphere <Vector(center), float(radius)>.", "flags": ["sv","cheat"]},
	{"name": "voxeltree_view", "type": "command", "help": "View entities in the voxel-tree.", "flags": ["sv","cheat"]},
	{"name": "vphys_sleep_timeout", "type": "command", "help": "set sleep timeout: large values mean stuff won't ever sleep", "flags": []},
	{"name": "vprof", "type": "command", "help": "Toggle VProf profiler", "flags": []},
	{"name": "vprof_child", "type": "command", "help": "", "flags": []},
	{"name": "vprof_counters", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_counters_show_minmax", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_dump_counters", "type": "command", "help": "Dump vprof counters to the console", "flags": []},
	{"name": "vprof_dump_groupnames", "type": "command", "help": "Write the names of all of the vprof groups to the console.", "flags": []},
	{"name": "vprof_dump_oninterval", "type": "cvar", "help": "Interval (in seconds) at which vprof will batch up data and dump it to the console.", "flags": []},
	{"name": "vprof_dump_spikes", "type": "cvar", "help": "Framerate at which vprof will begin to dump spikes to the console. 0 = disabled, negative to reset after dump", "flags": []},
	{"name": "vprof_dump_spikes_budget_group", "type": "cvar", "help": "Budget gtNode to start report from when doing a dump spikes", "flags": []},
	{"name": "vprof_dump_spikes_hiearchy", "type": "cvar", "help": "Set to 1 to get a hierarchy report whith vprof_dump_spikes", "flags": []},
	{"name": "vprof_dump_spikes_node", "type": "cvar", "help": "Node to start report from when doing a dump spikes", "flags": []},
	{"name": "vprof_dump_spikes_terse", "type": "cvar", "help": "Whether to use most terse output", "flags": []},
	{"name": "vprof_generate_report", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_AI", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_AI_only", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_budget", "type": "command", "help": "Generate a report to the console based on budget group.", "flags": []},
	{"name": "vprof_generate_report_hierarchy", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_hierarchy_per_frame_and_count_only", "type": "command", "help": "Generate a minimal hiearchical report to the console.", "flags": []},
	{"name": "vprof_generate_report_map_load", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_graph", "type": "cvar", "help": "Draw the vprof graph.", "flags": []},
	{"name": "vprof_graphheight", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "vprof_graphwidth", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "vprof_nextsibling", "type": "command", "help": "", "flags": []},
	{"name": "vprof_off", "type": "command", "help": "Turn off VProf profiler", "flags": []},
	{"name": "vprof_on", "type": "command", "help": "Turn on VProf profiler", "flags": []},
	{"name": "vprof_parent", "type": "command", "help": "", "flags": []},
	{"name": "vprof_playback_average", "type": "command", "help": "Average the next N frames.", "flags": []},
	{"name": "vprof_playback_start", "type": "command", "help": "Start playing back a recorded .vprof file.", "flags": []},
	{"name": "vprof_playback_step", "type": "command", "help": "While playing back a .vprof file, step to the next tick.", "flags": []},
	{"name": "vprof_playback_stepback", "type": "command", "help": "While playing back a .vprof file, step to the previous tick.", "flags": []},
	{"name": "vprof_playback_stop", "type": "command", "help": "Stop playing back a recorded .vprof file.", "flags": []},
	{"name": "vprof_prevsibling", "type": "command", "help": "", "flags": []},
	{"name": "vprof_record_start", "type": "command", "help": "Start recording vprof data for playback later.", "flags": []},
	{"name": "vprof_record_stop", "type": "command", "help": "Stop recording vprof data", "flags": []},
	{"name": "vprof_render_stats", "type": "cvar", "help": "Draws render stats info to the screen", "flags": []},
	{"name": "vprof_reset", "type": "command", "help": "Reset the stats in VProf profiler", "flags": []},
	{"name": "vprof_reset_peaks", "type": "command", "help": "Reset just the peak time in VProf profiler", "flags": []},
	{"name": "vprof_scope_entity_gamephys", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "vprof_scope_entity_thinks", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "vprof_server_spike_threshold", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_server_thread", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_think_limit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "vprof_to_csv", "type": "command", "help": "Convert a recorded .vprof file to .csv.", "flags": []},
	{"name": "+walk", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-walk", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "wall_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "wall_debug_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "wc_air_edit_further", "type": "command", "help": "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location further away from player", "flags": ["sv","cheat"]},
	{"name": "wc_air_edit_nearer", "type": "command", "help": "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location nearer to from player", "flags": ["sv","cheat"]},
	{"name": "wc_air_node_edit", "type": "command", "help": "When in WC edit mode, toggles laying down or air nodes instead of ground nodes", "flags": ["sv","cheat"]},
	{"name": "wc_create", "type": "command", "help": "When in WC edit mode, creates a node where the player is looking if a node is allowed at that location for the currently selected hull size (see ai_next_hull)", "flags": ["sv","cheat"]},
	{"name": "wc_destroy", "type": "command", "help": "When in WC edit mode, destroys the node that the player is nearest to looking at.  (The node will be highlighted by a red box).", "flags": ["sv","cheat"]},
	{"name": "wc_destroy_undo", "type": "command", "help": "When in WC edit mode restores the last deleted node", "flags": ["sv","cheat"]},
	{"name": "wc_link_edit", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "weapon_showproficiency", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "whitelistcmd", "type": "command", "help": "Runs a whitelisted command.", "flags": []},
	{"name": "workshop_flush", "type": "command", "help": "Completely rebuild list of installed addons, remount them and flush content", "flags": []},
	{"name": "workshop_list", "type": "command", "help": "List all installed workshop addons", "flags": []},
	{"name": "workshop_mount", "type": "command", "help": "Mount an addon by published file ID", "flags": []},
	{"name": "workshop_start_map", "type": "command", "help": "Sets the first map to load once a workshop collection been hosted. Takes the file id of desired start map as a parameter.", "flags": ["sv"]},
	{"name": "workshop_unmount", "type": "command", "help": "Unmount an addon by published file ID", "flags": []},
	{"name": "writeid", "type": "command", "help": "Writes a list of permanently-banned user IDs to banned_user.cfg.", "flags": []},
	{"name": "writeip", "type": "command", "help": "Save the ban list to banned_ip.cfg.", "flags": []},
	{"name": "xbox_autothrottle", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "xbox_steering_deadzone", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "xbox_throttlebias", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "xbox_throttlespoof", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "xc_crouch_debounce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "z_ragdoll_impact_strength", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "zombie_ambushdist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_basemax", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_basemin", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_changemax", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_changemin", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_decaymax", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_decaymin", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_moanfreq", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "zombie_stepfreq", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "-zoom", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+zoom", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+zoom_in", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-zoom_in", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-zoom_out", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+zoom_out", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "zoom_sensitivity_ratio_joystick", "type": "cvar", "help": "Additional controller sensitivity scale factor applied when FOV is zoomed in.", "flags": ["a","cl","ss"]},
	{"name": "zoom_sensitivity_ratio_joystick2", "type": "cvar", "help": "Additional controller sensitivity scale factor applied when FOV is zoomed in.", "flags": ["a","cl","ss_added"]},
	{"name": "zoom_sensitivity_ratio_mouse", "type": "cvar", "help": "Additional mouse sensitivity scale factor applied when FOV is zoomed in.", "flags": ["a","cl","ss"]},
	{"name": "zoom_sensitivity_ratio_mouse2", "type": "cvar", "help": "Additional mouse sensitivity scale factor applied when FOV is zoomed in.", "flags": ["a","cl","ss_added"]}
]
