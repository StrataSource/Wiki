[
	{"name": "_autosave", "type": "command", "help": "Autosave", "flags": ["norecord"]},
	{"name": "_autosavedangerous", "type": "command", "help": "AutoSaveDangerous", "flags": ["norecord"]},
	{"name": "_fov", "type": "cvar", "help": "Automates fov command to server.", "flags": ["cl"]},
	{"name": "_record", "type": "command", "help": "Record a demo incrementally.", "flags": ["norecord"]},
	{"name": "_resetgamestats", "type": "command", "help": "Erases current game stats and writes out a blank stats file", "flags": ["sv"]},
	{"name": "_restart", "type": "command", "help": "Shutdown and restart the engine.", "flags": ["norecord"]},
	{"name": "addip", "type": "command", "help": "Add an IP address to the ban list.", "flags": []},
	{"name": "adsp_alley_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_courtyard_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_debug", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "adsp_door_height", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_duct_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_hall_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_low_ceiling", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_opencourtyard_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_openspace_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_openstreet_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_openwall_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_reset_nodes", "type": "command", "help": "", "flags": []},
	{"name": "adsp_room_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_scale_delay_feedback", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_scale_delay_gain", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_street_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_tunnel_min", "type": "cvar", "help": "", "flags": []},
	{"name": "adsp_wall_height", "type": "cvar", "help": "", "flags": []},
	{"name": "ai_debug_ragdoll_magnets", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_debug_shoot_positions", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "ai_expression_frametime", "type": "cvar", "help": "Maximum frametime to still play background expressions.", "flags": ["sv"]},
	{"name": "ai_expression_optimization", "type": "cvar", "help": "Disable npc background expressions when you can't see them.", "flags": ["sv"]},
	{"name": "ai_sequence_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ai_setupbones_debug", "type": "cvar", "help": "Shows that bones that are setup every think", "flags": ["sv"]},
	{"name": "ai_shot_bias_max", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "ai_shot_bias_min", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "air_density", "type": "command", "help": "Changes the density of air for drag computations.", "flags": ["sv","cheat"]},
	{"name": "alias", "type": "command", "help": "Alias a command.", "flags": []},
	{"name": "-alt1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+alt1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+alt2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-alt2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "anim_3wayblend", "type": "cvar", "help": "Toggle the 3-way animation blending code.", "flags": ["rep","cl"]},
	{"name": "anim_twistbones_enabled", "type": "cvar", "help": "Enable procedural twist bones.", "flags": ["cheat","rep","cl"]},
	{"name": "askconnect_accept", "type": "command", "help": "Accept a redirect request by the server.", "flags": ["norecord"]},
	{"name": "async_allow_held_files", "type": "cvar", "help": "Allow AsyncBegin/EndRead()", "flags": []},
	{"name": "async_mode", "type": "cvar", "help": "Set the async filesystem mode (0 = async, 1 = synchronous)", "flags": []},
	{"name": "async_resume", "type": "command", "help": "", "flags": []},
	{"name": "async_serialize", "type": "cvar", "help": "Force async reads to serialize for profiling", "flags": []},
	{"name": "async_simulate_delay", "type": "cvar", "help": "Simulate a delay of up to a set msec per file operation", "flags": []},
	{"name": "async_suspend", "type": "command", "help": "", "flags": []},
	{"name": "-attack", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+attack", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+attack2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-attack2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "autoaim_max_deflect", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "autoaim_max_dist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "autosave", "type": "command", "help": "Autosave", "flags": ["norecord"]},
	{"name": "autosavedangerous", "type": "command", "help": "AutoSaveDangerous", "flags": ["norecord"]},
	{"name": "autosavedangerousissafe", "type": "command", "help": "", "flags": ["norecord"]},
	{"name": "+back", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-back", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "banid", "type": "command", "help": "Add a user ID to the ban list.", "flags": []},
	{"name": "banip", "type": "command", "help": "Add an IP address to the ban list.", "flags": []},
	{"name": "bench_end", "type": "command", "help": "Ends gathering of info.", "flags": ["cheat"]},
	{"name": "bench_start", "type": "command", "help": "Starts gathering of info. Arguments: filename to write results into", "flags": ["cheat"]},
	{"name": "benchframe", "type": "command", "help": "Takes a snapshot of a particular frame in a time demo.", "flags": ["norecord"]},
	{"name": "bind", "type": "command", "help": "Bind a key.", "flags": []},
	{"name": "bind_osx", "type": "command", "help": "Bind a key for OSX only.", "flags": []},
	{"name": "BindToggle", "type": "command", "help": "Performs a bind <key> \"increment var <cvar> 0 1 1\"", "flags": []},
	{"name": "BlendBonesMode", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "blink_duration", "type": "cvar", "help": "How many seconds an eye blink will last.", "flags": ["cl"]},
	{"name": "box", "type": "command", "help": "Draw a debug box.", "flags": ["cheat"]},
	{"name": "+break", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-break", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "breakable_disable_gib_limit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "breakable_multiplayer", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "buddha", "type": "command", "help": "Toggle.  Player takes damage but won't die. (Shows red cross when health is zero). Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "budget_toggle_group", "type": "command", "help": "Turn a budget group on/off", "flags": []},
	{"name": "buildambientcache", "type": "command", "help": "Stores ambient cache inside BSP", "flags": []},
	{"name": "buildcubemaps", "type": "command", "help": "Rebuild cubemaps.", "flags": []},
	{"name": "buildmodelforworld", "type": "command", "help": "buildmodelforworld", "flags": []},
	{"name": "c_cam_ortho_height", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_cam_ortho_width", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_maxdistance", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_maxpitch", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_maxyaw", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_mindistance", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_minpitch", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_minyaw", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulder", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderaimdist", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderdist", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderheight", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "c_thirdpersonshoulderoffset", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cache_print", "type": "command", "help": "cache_print [section]\nPrint out contents of cache memory.", "flags": []},
	{"name": "cache_print_lru", "type": "command", "help": "cache_print_lru [section]\nPrint out contents of cache memory.", "flags": []},
	{"name": "cache_print_summary", "type": "command", "help": "cache_print_summary [section]\nPrint out a summary contents of cache memory.", "flags": []},
	{"name": "cam_collision", "type": "cvar", "help": "When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls.", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_command", "type": "command", "help": "Tells camera to change modes", "flags": ["cheat","cl"]},
	{"name": "cam_idealdist", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealdistright", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealdistup", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealpitch", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_idealyaw", "type": "cvar", "help": "", "flags": ["a","server_can_execute","cl"]},
	{"name": "cam_ortho", "type": "command", "help": "Switch camera between orthographic and perspective view.", "flags": ["cheat","cl"]},
	{"name": "cam_showangles", "type": "cvar", "help": "When in thirdperson, print viewangles/idealangles/cameraoffsets to the console.", "flags": ["cheat","cl"]},
	{"name": "cam_smooth", "type": "cvar", "help": "Use smooth camera movement", "flags": ["a","cl"]},
	{"name": "cam_smooth_lag", "type": "cvar", "help": "Amount of lag used when matching offset to ideal angles when camera smoothing is enabled", "flags": ["a","cl"]},
	{"name": "cam_smooth_lag_delta", "type": "cvar", "help": "Controls the speed when matching offset to ideal angles when camera smoothing is enabled", "flags": ["a","cl"]},
	{"name": "-camdistance", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camdistance", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cameraman_override", "type": "cvar", "help": "Set to 1 when you're secondary cameraman and need to override the primary cameraman's observer target and mode", "flags": []},
	{"name": "-camin", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camin", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-cammousemove", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+cammousemove", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-camout", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camout", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-campitchdown", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+campitchdown", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-campitchup", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+campitchup", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camyawleft", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-camyawleft", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+camyawright", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-camyawright", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cast_hull", "type": "command", "help": "Tests hull collision detection", "flags": ["sv","cheat"]},
	{"name": "cast_ray", "type": "command", "help": "Tests collision detection", "flags": ["sv","cheat"]},
	{"name": "catapult_physics_drag_boost", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "cc_captiontrace", "type": "cvar", "help": "Show missing closecaptions (0 = no, 1 = devconsole, 2 = show in hud)", "flags": ["cl"]},
	{"name": "cc_emit", "type": "command", "help": "Emits a closed caption", "flags": ["cl"]},
	{"name": "cc_findsound", "type": "command", "help": "Searches for soundname which emits specified text.", "flags": ["cl"]},
	{"name": "cc_flush", "type": "command", "help": "Flushes async'd captions.", "flags": ["cl"]},
	{"name": "cc_lang", "type": "cvar", "help": "Current close caption language (emtpy = use game UI language)", "flags": ["a","cl"]},
	{"name": "cc_linger_time", "type": "cvar", "help": "Close caption linger time.", "flags": ["a","cl"]},
	{"name": "cc_minvisibleitems", "type": "cvar", "help": "Minimum number of caption items to show.", "flags": ["cl"]},
	{"name": "cc_norepeat", "type": "cvar", "help": "In multiplayer games, don't repeat captions more often than this many seconds.", "flags": ["sv"]},
	{"name": "cc_predisplay_time", "type": "cvar", "help": "Close caption delay before showing caption.", "flags": ["a","cl"]},
	{"name": "cc_random", "type": "command", "help": "Emits a random caption", "flags": ["cl"]},
	{"name": "cc_sentencecaptionnorepeat", "type": "cvar", "help": "How often a sentence can repeat.", "flags": ["cl"]},
	{"name": "cc_showblocks", "type": "command", "help": "Toggles showing which blocks are pending/loaded async.", "flags": ["cl"]},
	{"name": "cc_showmissing", "type": "cvar", "help": "Show missing closecaption entries.", "flags": ["rep","cl"]},
	{"name": "cc_subtitles", "type": "cvar", "help": "If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players).", "flags": ["a","cl"]},
	{"name": "centerview", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "changelevel", "type": "command", "help": "Change server to the specified map", "flags": ["norecord"]},
	{"name": "changelevel2", "type": "command", "help": "Transition to the specified map in single player", "flags": ["norecord"]},
	{"name": "chat_open", "type": "command", "help": "Opens the HUD chat window.", "flags": ["cl"]},
	{"name": "cheap_captions_fadetime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cheap_captions_test", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "choreo_spew_filter", "type": "cvar", "help": "Spew choreo. Use a sub-string or * to display all events.", "flags": ["rep","cl"]},
	{"name": "cl_aggregate_particles", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_allowdownload", "type": "cvar", "help": "Client downloads customization files", "flags": ["a"]},
	{"name": "cl_allowupload", "type": "cvar", "help": "Client uploads customization files", "flags": ["a"]},
	{"name": "cl_anglespeedkey", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_backspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_blurClearAlpha", "type": "cvar", "help": "0-255, but 0 has errors at the moment", "flags": ["cl"]},
	{"name": "cl_blurDebug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_blurPasses", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_blurTapSize", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_bob", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_bobcycle", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_bobup", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_brushfastpath", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_burninggibs", "type": "cvar", "help": "A burning player that gibs has burning gibs.", "flags": ["cl"]},
	{"name": "cl_camera_follow_bone_index", "type": "cvar", "help": "Index of the bone to follow.  -2 == disabled.  -1 == root bone.  0+ is bone index.", "flags": ["cheat","cl"]},
	{"name": "cl_clear_input_on_load", "type": "cvar", "help": "Toggles clearing inputs on level load. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "cl_clearhinthistory", "type": "command", "help": "Clear memory of client side hints displayed to the player.", "flags": ["cl"]},
	{"name": "cl_clock_correction", "type": "cvar", "help": "Enable/disable clock correction on the client.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_adjustment_max_amount", "type": "cvar", "help": "Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_adjustment_max_offset", "type": "cvar", "help": "As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_adjustment_min_offset", "type": "cvar", "help": "If the clock offset is less than this amount (in milliseconds), then no clock correction is applied.", "flags": ["cheat"]},
	{"name": "cl_clock_correction_force_server_tick", "type": "cvar", "help": "Force clock correction to match the server tick + this offset (-999 disables it).", "flags": ["cheat"]},
	{"name": "cl_clock_showdebuginfo", "type": "cvar", "help": "Show debugging info about the clock drift. ", "flags": ["cheat"]},
	{"name": "cl_clockdrift_max_ms", "type": "cvar", "help": "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.", "flags": ["cheat"]},
	{"name": "cl_clockdrift_max_ms_threadmode", "type": "cvar", "help": "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.", "flags": ["cheat"]},
	{"name": "cl_cmdrate", "type": "cvar", "help": "Max number of command packets sent to server per second", "flags": ["a","user"]},
	{"name": "cl_color", "type": "cvar", "help": "Preferred teammate color", "flags": ["a","user"]},
	{"name": "cl_colorfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_crosshair_color", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_dot", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_drawoutline", "type": "cvar", "help": "Draws a black outline around the crosshair for better visibility", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_gap", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_outlinethickness", "type": "cvar", "help": "Set how thick you want your crosshair outline to draw (0-3)", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_size", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_style", "type": "cvar", "help": "Specifies how the crosshair should be drawn. 0 - Use cvars, 1 = Custom VTF", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_t", "type": "cvar", "help": "T style crosshair", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_thickness", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_crosshair_usealpha", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "cl_csm_auto_entity", "type": "cvar", "help": "Automatically creates an env_cascade_light entity if it doesn't already exist.\n", "flags": ["sv"]},
	{"name": "cl_csm_auto_entity_maxshadowdistance", "type": "cvar", "help": "Sets the max shadow distance for the automatically created env_cascade_light.\n", "flags": ["sv"]},
	{"name": "cl_csm_capture_state", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_clear_captured_state", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_cull_small_prop_threshold_volume", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_2d", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_3d", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_culling", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_culling_cascade", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_render_ztest", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_vis_hi_range", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_debug_vis_lo_range", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c0", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c1", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c2", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_depthbias_c3", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_disable_culling", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_enabled", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_entity_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_force_enable_displacements", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_force_no_csm_in_reflections", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_hack_proj_matrices_for_cull_debugging", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_ignore_disable_shadow_depth_rendering", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_max_shadow_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_max_visible_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_optimize_static_props", "type": "cvar", "help": "Enable/Disable optimal static prop rendering into CSM's (cull static props that make no visual contribution to shadows)", "flags": ["cl"]},
	{"name": "cl_csm_print_culling_planes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rope_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_override", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_x", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_y", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_rot_z", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_server_status", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "cl_csm_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c0", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c1", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c2", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_slopescaledepthbias_c3", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_sprite_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_static_prop_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_status", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_translucent_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_translucent_shadows_using_opaque_path", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_use_env_light_direction", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_use_forced_view_matrices", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_depthbias", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_farz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_max_shadow_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_max_visible_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viewmodel_slopescaledepthbias", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viz_numplanes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_viz_polyhedron_quad_size", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_world_shadows", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_world_shadows_in_viewmodelcascade", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_csm_xlat_continuity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_customsounds", "type": "cvar", "help": "Enable customized player sound playback", "flags": ["cl"]},
	{"name": "cl_debug_ugc_downloads", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_debugoverlaysthroughportals", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_decryptdata_key", "type": "cvar", "help": "Key to decrypt encrypted GOTV messages", "flags": []},
	{"name": "cl_decryptdata_key_pub", "type": "cvar", "help": "Key to decrypt public encrypted GOTV messages", "flags": []},
	{"name": "cl_demoviewoverride", "type": "cvar", "help": "Override view during demo playback", "flags": ["cl"]},
	{"name": "cl_detail_avoid_force", "type": "cvar", "help": "force with which to avoid players ( in units, percentage of the width of the detail sprite )", "flags": ["a","cl"]},
	{"name": "cl_detail_avoid_radius", "type": "cvar", "help": "radius around detail sprite to avoid players", "flags": ["a","cl"]},
	{"name": "cl_detail_avoid_recover_speed", "type": "cvar", "help": "how fast to recover position after avoiding players", "flags": ["a","cl"]},
	{"name": "cl_detail_max_sway", "type": "cvar", "help": "Amplitude of the detail prop sway", "flags": ["a","cl"]},
	{"name": "cl_detail_multiplier", "type": "cvar", "help": "extra details to create", "flags": ["cheat","cl"]},
	{"name": "cl_disable_ragdolls", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_disable_splitscreen_cpu_level_cfgs_in_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_disable_water_render_targets", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_download_demoplayer", "type": "cvar", "help": "Determines whether downloads of external resources are allowed during demo playback (0:no,1:workshop,2:all)", "flags": []},
	{"name": "cl_downloadfilter", "type": "cvar", "help": "Determines which files can be downloaded from the server (all, none, nosounds, mapsonly)", "flags": ["a"]},
	{"name": "cl_draw_only_deathnotices", "type": "cvar", "help": "For drawing only the crosshair and death notices (used for moviemaking)", "flags": ["cl"]},
	{"name": "cl_draw_player_model", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_drawhud", "type": "cvar", "help": "Enable the rendering of the hud", "flags": ["cl"]},
	{"name": "cl_drawhud_force_deathnotices", "type": "cvar", "help": "0: default; 1: draw deathnotices even if hud disabled; -1: force no deathnotices", "flags": ["cl"]},
	{"name": "cl_drawhud_specvote", "type": "cvar", "help": "1: default; 0: disables vote UI for spectators", "flags": ["cl"]},
	{"name": "cl_drawleaf", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_drawmaterial", "type": "cvar", "help": "Draw a particular material over the frame", "flags": ["cheat","cl"]},
	{"name": "cl_drawmonitors", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_drawshadowtexture", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_dump_entity_factories", "type": "command", "help": "Lists all client entity factory names.", "flags": ["cl"]},
	{"name": "cl_dump_entity_namespaces", "type": "command", "help": "Lists all client entity namespaces.", "flags": ["cl"]},
	{"name": "cl_dump_entity_sizes", "type": "command", "help": "Print sizeof(entclass)", "flags": ["cl"]},
	{"name": "cl_dump_particle_stats", "type": "command", "help": "dump particle profiling info to particle_profile.csv", "flags": ["cl"]},
	{"name": "cl_dumpsplithacks", "type": "command", "help": "Dump split screen workarounds.", "flags": ["cl"]},
	{"name": "cl_ejectbrass", "type": "cvar", "help": "Whether or not to eject brass from weapons", "flags": ["a","cl"]},
	{"name": "cl_enable_remote_splitscreen", "type": "cvar", "help": "Allows viewing of nonlocal players in a split screen fashion", "flags": ["cl"]},
	{"name": "cl_ent_absbox", "type": "command", "help": "Displays the client's absbox for the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_ent_bbox", "type": "command", "help": "Displays the client's bounding box for the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_ent_rbox", "type": "command", "help": "Displays the client's render box for the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_entityreport", "type": "cvar", "help": "For debugging, draw entity states to console", "flags": ["cheat"]},
	{"name": "cl_extrapolate", "type": "cvar", "help": "Enable/disable extrapolation if interpolation history runs out.", "flags": ["cheat","cl"]},
	{"name": "cl_extrapolate_amount", "type": "cvar", "help": "Set how many seconds the client will extrapolate entities for.", "flags": ["cheat","cl"]},
	{"name": "cl_fastdetailsprites", "type": "cvar", "help": "whether to use new detail sprite system", "flags": ["cheat","cl"]},
	{"name": "cl_fasttempentcollision", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_find_ent", "type": "command", "help": "Find and list all client entities with classnames that contain the specified substring.\nFormat: cl_find_ent <substring>\n", "flags": ["cheat","cl"]},
	{"name": "cl_find_ent_index", "type": "command", "help": "Display data for clientside entity matching specified index.\nFormat: cl_find_ent_index <index>\n", "flags": ["cheat","cl"]},
	{"name": "cl_flushentitypacket", "type": "cvar", "help": "For debugging. Force the engine to flush an entity packet.", "flags": ["cheat"]},
	{"name": "cl_forcepreload", "type": "cvar", "help": "Whether we should force preloading.", "flags": ["a"]},
	{"name": "cl_forwardspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_foundry_ShowEntityHighlights", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_fullstrafe", "type": "cvar", "help": "Always scale mouse-based +strafe inputs to full magnitude.", "flags": ["a","cheat","cl"]},
	{"name": "cl_fullupdate", "type": "command", "help": "Forces the server to send a full update packet", "flags": ["cheat"]},
	{"name": "cl_headbob_amp", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_headbob_freq", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_headbob_land_dip_amt", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_hide_avatar_images", "type": "cvar", "help": "Hide avatar images for other players. \n\t0 - Off.\n\t1 - Block All\n\t2 - Block all but friends", "flags": ["a","cl"]},
	{"name": "cl_hideserverip", "type": "cvar", "help": "If set to 1, server IPs will be hidden in the console (except when you type 'status')", "flags": []},
	{"name": "cl_hud_background_alpha", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_hud_color", "type": "cvar", "help": "0 = default, 1 = light blue, 2 = orange, 3 = green, 4 = purple, 5 = white.", "flags": ["a","cl"]},
	{"name": "cl_hud_healthammo_style", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_ignorepackets", "type": "cvar", "help": "Force client to ignore packets (for debugging).", "flags": ["cheat"]},
	{"name": "cl_interp", "type": "cvar", "help": "Sets the interpolation amount (bounded on low side by server interp ratio settings).", "flags": ["user","cl"]},
	{"name": "cl_interp_all", "type": "cvar", "help": "Disable interpolation list optimizations.", "flags": ["cl"]},
	{"name": "cl_interp_npcs", "type": "cvar", "help": "Interpolate NPC positions starting this many seconds in past (or cl_interp, if greater)", "flags": ["cl"]},
	{"name": "cl_interp_ratio", "type": "cvar", "help": "Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).", "flags": ["user","cl"]},
	{"name": "cl_interp_watch", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_interpolate", "type": "cvar", "help": "Enables or disables interpolation on listen servers or during demo playback", "flags": []},
	{"name": "cl_jiggle_bone_debug", "type": "cvar", "help": "Display physics-based 'jiggle bone' debugging information", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_debug_pitch_constraints", "type": "cvar", "help": "Display physics-based 'jiggle bone' debugging information", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_debug_yaw_constraints", "type": "cvar", "help": "Display physics-based 'jiggle bone' debugging information", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_invert", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_jiggle_bone_sanity", "type": "cvar", "help": "Prevent jiggle bones from pointing directly away from their target in case of numerical instability.", "flags": ["cl"]},
	{"name": "cl_join_advertise", "type": "cvar", "help": "Advertise joinable game in progress to Steam friends, otherwise need a Steam invite (2: all servers, 1: official servers, 0: none)", "flags": ["a","cl"]},
	{"name": "cl_lagcomp_errorcheck", "type": "cvar", "help": "Player index of other player to check for position errors.", "flags": ["cl"]},
	{"name": "cl_leafsystemvis", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_leveloverview", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_leveloverviewmarker", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_lock_camera", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_maxrenderable_dist", "type": "cvar", "help": "Max distance from the camera at which things will be rendered", "flags": ["cheat","cl"]},
	{"name": "cl_minimal_rtt_shadows", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_mirror_world", "type": "cvar", "help": "Enable mirroring the appearance of the game world", "flags": ["cl"]},
	{"name": "cl_modelfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_modemanager_reload", "type": "command", "help": "Reloads the panel metaclasses for vgui screens.", "flags": ["cl"]},
	{"name": "cl_mouseenable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_mouseenable_buttons", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_mouselook", "type": "cvar", "help": "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server.", "flags": ["a","cl","ss"]},
	{"name": "cl_mute_all_but_friends_and_party", "type": "cvar", "help": "Only allow communication from friends and matchmaking party members. Doesn't apply to competitive matchmaking games.", "flags": ["a","cl"]},
	{"name": "cl_mute_enemy_team", "type": "cvar", "help": "Block all communication from players on the enemy team.", "flags": ["a","cl"]},
	{"name": "cl_observercrosshair", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "cl_overdraw_test", "type": "cvar", "help": "", "flags": ["cheat","numeric","cl"]},
	{"name": "cl_panelanimation", "type": "command", "help": "Shows panel animation variables: <panelname | blank for all panels>.", "flags": ["cl"]},
	{"name": "cl_particle_batch_mode", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_particle_fallback_base", "type": "cvar", "help": "Base for falling back to cheaper effects under load.", "flags": ["cl"]},
	{"name": "cl_particle_fallback_multiplier", "type": "cvar", "help": "Multiplier for falling back to cheaper effects under load.", "flags": ["cl"]},
	{"name": "cl_particle_max_count", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_particle_retire_cost", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_particle_sim_fallback_base_multiplier", "type": "cvar", "help": "How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is.  Higher numbers are more aggressive.", "flags": ["cl"]},
	{"name": "cl_particle_sim_fallback_threshold_ms", "type": "cvar", "help": "Amount of simulation time that can elapse before new systems start falling back to cheaper versions", "flags": ["cl"]},
	{"name": "cl_particles_dump_effects", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cl_particles_dumplist", "type": "command", "help": "Dump all new particles, optional name substring.", "flags": ["cheat","cl"]},
	{"name": "cl_particles_show_bbox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_particles_show_controlpoints", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_phys_block_dist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_phys_block_fraction", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_phys_maxticks", "type": "cvar", "help": "Sets the max number of physics ticks allowed for client-side physics (ragdolls)", "flags": ["cl"]},
	{"name": "cl_phys_show_active", "type": "cvar", "help": "Shows all active vphysics objects on client.\n", "flags": ["cheat","cl"]},
	{"name": "cl_phys_show_collision", "type": "cvar", "help": "Shows all vphysics object collision as wireframes on client.\n", "flags": ["cheat","cl"]},
	{"name": "cl_phys_show_shadows", "type": "cvar", "help": "Shows all vphysics object shadows on client.\n", "flags": ["cheat","cl"]},
	{"name": "cl_phys_timescale", "type": "cvar", "help": "Sets the scale of time for client-side physics (ragdolls)", "flags": ["cheat","cl"]},
	{"name": "cl_physicsshadowupdate_render", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_pitchspeed", "type": "cvar", "help": "Client pitch speed.", "flags": ["cl"]},
	{"name": "cl_playback_screenshots", "type": "cvar", "help": "Allows the client to playback screenshot and jpeg commands in demos.", "flags": []},
	{"name": "cl_player_fullupdate_predicted_origin_fix", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_playeranimstate_transitions", "type": "cvar", "help": "Enable transitions on animstate sequence changes", "flags": ["cl"]},
	{"name": "cl_portal_alternate_colors", "type": "cvar", "help": "Enables custom portal colors in single player", "flags": ["a","cl"]},
	{"name": "cl_portal_ghost_use_render_bound", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_portal_projectile_delay_mp", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_portal_projectile_delay_sp", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_portal_sp_primary_color", "type": "cvar", "help": "Sets the primary (left) portal color of the SP player (Default is blue)\n", "flags": ["a","cl"]},
	{"name": "cl_portal_sp_secondary_color", "type": "cvar", "help": "Sets the secondary (right) portal color of the SP player (Default is orange)\n", "flags": ["a","cl"]},
	{"name": "cl_portal_teleportation_interpolation_fixup_method", "type": "cvar", "help": "0 = transform history only, 1 = insert discontinuity transform", "flags": ["cl"]},
	{"name": "cl_precacheinfo", "type": "command", "help": "Show precache info (client).", "flags": []},
	{"name": "cl_predict", "type": "cvar", "help": "Perform client side prediction.", "flags": ["user","cl"]},
	{"name": "cl_predict_basetoggles", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predict_catapults", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predict_motioncontrol", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predict_projected_entities", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predicted_movement_uses_uninterpolated_physics", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_prediction_error_timestamps", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_predictphysics", "type": "cvar", "help": "Use a prediction-friendly physics interface on the client", "flags": ["cl"]},
	{"name": "cl_ragdoll_collide", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_ragdoll_gravity", "type": "cvar", "help": "Sets the gravity client-side ragdolls", "flags": ["cheat","cl"]},
	{"name": "cl_removedecals", "type": "command", "help": "Remove the decals from the entity under the crosshair.", "flags": ["cheat","cl"]},
	{"name": "cl_report_soundpatch", "type": "command", "help": "reports client-side sound patch count", "flags": ["cl"]},
	{"name": "cl_resend", "type": "cvar", "help": "Delay in seconds before the client will resend the 'connect' attempt", "flags": []},
	{"name": "cl_resetportalledplayerinterp", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_retire_low_priority_lights", "type": "cvar", "help": "Low priority dlights are replaced by high priority ones", "flags": []},
	{"name": "cl_righthand", "type": "cvar", "help": "Use right-handed view models. 1 = ON, 0 = OFF.\n", "flags": ["a","cl","ss"]},
	{"name": "cl_sanitize_player_names", "type": "cvar", "help": "Replace names of other players with something non-offensive.", "flags": ["a","cl"]},
	{"name": "cl_screenshotname", "type": "cvar", "help": "Custom Screenshot name", "flags": []},
	{"name": "cl_SetupAllBones", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_shadowtextureoverlaysize", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_shadowupdatespacing", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_show_bounds_errors", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_show_observer_crosshair", "type": "cvar", "help": "Show the crosshair of the player being observed. 0: off 1: friends and party 2: everyone ", "flags": ["a","cl"]},
	{"name": "cl_show_splashes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_show_usermessage", "type": "cvar", "help": "Shows the incoming user messages for this client and dumps them out the type and size of the messages to the console. Setting this to 2 will display message contents as well", "flags": ["cl"]},
	{"name": "cl_showanimstate", "type": "cvar", "help": "Show the (client) animation state for the specified entity (-1 for none).", "flags": ["cheat","cl"]},
	{"name": "cl_showanimstate_activities", "type": "cvar", "help": "Show activities in the (client) animation state display.", "flags": ["cheat","cl"]},
	{"name": "cl_showanimstate_log", "type": "cvar", "help": "1 to output cl_showanimstate to Msg(). 2 to store in AnimStateClient.log. 3 for both.", "flags": ["cheat","cl"]},
	{"name": "cl_showbonecounts", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_ShowBoneSetupEnts", "type": "cvar", "help": "Show which entities are having their bones setup each frame.", "flags": ["cl"]},
	{"name": "cl_showcomplexfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_showdemooverlay", "type": "cvar", "help": "How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)", "flags": []},
	{"name": "cl_showents", "type": "command", "help": "Dump entity list to console.", "flags": ["cheat"]},
	{"name": "cl_showevents", "type": "cvar", "help": "Print event firing info in the console", "flags": ["cheat"]},
	{"name": "cl_showfps", "type": "cvar", "help": "Show FPS meter (1 = fps, 2 = average, 3 = server)", "flags": ["cl"]},
	{"name": "cl_showfps_updatefps", "type": "cvar", "help": "The speed (FPS) of the showfps label update.\n", "flags": ["a","cl"]},
	{"name": "cl_showhelp", "type": "cvar", "help": "Set to 0 to not show on-screen help", "flags": ["a","cl"]},
	{"name": "cl_showpausedimage", "type": "cvar", "help": "Show the 'Paused' image when game is paused.", "flags": ["cl"]},
	{"name": "cl_showpos", "type": "cvar", "help": "Shows current position of player. (1 = Main view (render position), 2 = Abs position", "flags": ["cl"]},
	{"name": "cl_ShowSunVectors", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_showtextmsg", "type": "cvar", "help": "Enable/disable text messages printing on the screen.", "flags": ["cl"]},
	{"name": "cl_sidespeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_simdbones", "type": "cvar", "help": "Use SIMD bone setup.", "flags": ["rep","cl"]},
	{"name": "cl_skipfastpath", "type": "cvar", "help": "Set to 1 to stop all models that go through the model fast path from rendering", "flags": ["cheat","cl"]},
	{"name": "cl_skipslowpath", "type": "cvar", "help": "Set to 1 to skip any models that don't go through the model fast path", "flags": ["cheat"]},
	{"name": "cl_smooth", "type": "cvar", "help": "Smooth view/eye origin after prediction errors", "flags": ["cl"]},
	{"name": "cl_smoothtime", "type": "cvar", "help": "Smooth client's view after prediction error over this many seconds", "flags": ["cl"]},
	{"name": "cl_soundemitter_flush", "type": "command", "help": "Flushes the sounds.txt system (client only)", "flags": ["cheat","cl"]},
	{"name": "cl_soundemitter_reload", "type": "command", "help": "Flushes the sounds.txt system", "flags": ["cheat","cl"]},
	{"name": "cl_soundscape_flush", "type": "command", "help": "Flushes the client side soundscapes", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "cl_soundscape_printdebuginfo", "type": "command", "help": "print soundscapes", "flags": []},
	{"name": "cl_sporeclipdistance", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_ss_origin", "type": "command", "help": "print origin in script format", "flags": []},
	{"name": "cl_sun_decay_rate", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_sun_in_reflection_h_scale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_sun_in_reflection_v_scale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_sunlight_depthbias", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_sunlight_ortho_size", "type": "cvar", "help": "Set to values greater than 0 for ortho view render projections.", "flags": ["cheat","cl"]},
	{"name": "cl_teamid", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_teammate_color_1", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_2", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_3", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_4", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_teammate_color_5", "type": "cvar", "help": "", "flags": []},
	{"name": "cl_threaded_bone_setup", "type": "cvar", "help": "Enable parallel processing of bones", "flags": ["cl"]},
	{"name": "cl_timeout", "type": "cvar", "help": "After this many seconds without receiving a packet from the server, the client will disconnect itself", "flags": ["a"]},
	{"name": "cl_tlucfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_tracer_whiz_distance", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_tree_sway_dir", "type": "command", "help": "sets tree sway wind direction and strength", "flags": ["cl"]},
	{"name": "cl_turn_switch_cooldown_time", "type": "cvar", "help": "Minimum cooldown for switching between +left and +right", "flags": ["cheat","cl"]},
	{"name": "cl_updaterate", "type": "cvar", "help": "Number of packets per second of updates you are requesting from the server", "flags": ["a","user"]},
	{"name": "cl_updatevisibility", "type": "command", "help": "Updates visibility bits.", "flags": ["cl"]},
	{"name": "cl_upspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_use_new_headbob", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_use_simd_bones", "type": "cvar", "help": "1 use SIMD bones 0 use scalar bones.", "flags": ["rep","cl"]},
	{"name": "cl_useoldswapportalvisibilitycode", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_view", "type": "command", "help": "Set the view entity index.", "flags": ["cheat"]},
	{"name": "cl_viewmodelsclonedasworld", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_voice_buffer_time", "type": "cvar", "help": "Amount of time between receiving voice data and playing the audio", "flags": []},
	{"name": "cl_voice_filter", "type": "cvar", "help": "Filter voice by name substring", "flags": []},
	{"name": "cl_winddir", "type": "cvar", "help": "Weather effects wind direction angle", "flags": ["cheat","cl"]},
	{"name": "cl_windspeed", "type": "cvar", "help": "Weather effects wind speed scalar", "flags": ["cheat","cl"]},
	{"name": "cl_wpn_sway_interp", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cl_wpn_sway_scale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cl_yawspeed", "type": "cvar", "help": "Client yaw speed.", "flags": ["a","cl"]},
	{"name": "clear", "type": "command", "help": "Clear all console output.", "flags": ["norecord"]},
	{"name": "clear_anim_cache", "type": "command", "help": "Clears the animation cache, freeing the memory (until the next time a streaming animblock is requested).", "flags": []},
	{"name": "clear_debug_overlays", "type": "command", "help": "clears debug overlays", "flags": ["sv"]},
	{"name": "clientport", "type": "cvar", "help": "Host game client port", "flags": []},
	{"name": "closecaption", "type": "cvar", "help": "Enable close captioning.", "flags": ["a"]},
	{"name": "cloth_wind", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cloth_wind_pitch", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "cloth_windage_multiplier", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "cmd", "type": "command", "help": "Forward command to server.", "flags": []},
	{"name": "cmd1", "type": "command", "help": "sets userinfo string for split screen player in slot 1", "flags": []},
	{"name": "cmd2", "type": "command", "help": "sets userinfo string for split screen player in slot 2", "flags": []},
	{"name": "cmd3", "type": "command", "help": "sets userinfo string for split screen player in slot 3", "flags": []},
	{"name": "cmd4", "type": "command", "help": "sets userinfo string for split screen player in slot 4", "flags": []},
	{"name": "collision_shake_amp", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "collision_shake_freq", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "collision_shake_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "collision_test", "type": "command", "help": "Tests collision system", "flags": ["sv","cheat"]},
	{"name": "colorcorrectionui", "type": "command", "help": "Show/hide the color correction tools UI.", "flags": ["cheat"]},
	{"name": "commentary", "type": "cvar", "help": "Desired commentary mode state.", "flags": ["sv"]},
	{"name": "commentary_available", "type": "cvar", "help": "Automatically set by the game when a commentary file is available for the current map.", "flags": ["sv"]},
	{"name": "commentary_cvarsnotchanging", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "commentary_finishnode", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "con_allownotify", "type": "cvar", "help": "Allows the notification area to be visible.", "flags": ["a"]},
	{"name": "con_backtick_always_closes", "type": "cvar", "help": "Pressing backtick (`) will always close the console if it is open.", "flags": ["a"]},
	{"name": "con_drawnotify", "type": "cvar", "help": "Disables drawing of notification area (for taking screenshots).", "flags": []},
	{"name": "con_enable", "type": "cvar", "help": "Allows the console to be activated.", "flags": ["a"]},
	{"name": "con_filter_enable", "type": "cvar", "help": "Filters console output based on the setting of con_filter_text. 1 filters completely, 2 displays filtered text brighter than other text.", "flags": []},
	{"name": "con_filter_text", "type": "cvar", "help": "Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.", "flags": []},
	{"name": "con_filter_text_out", "type": "cvar", "help": "Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate.", "flags": []},
	{"name": "con_log_channel_mode", "type": "cvar", "help": "0 = No prefix, 1 = channel name, 2 = module name", "flags": ["a"]},
	{"name": "con_log_color_default", "type": "cvar", "help": "Sets the color for informational console messages.", "flags": ["a"]},
	{"name": "con_log_color_warning", "type": "cvar", "help": "Sets the color for warning console messages.", "flags": ["a"]},
	{"name": "con_log_severity_mode", "type": "cvar", "help": "Enables [<severity>] prefixes on console messages", "flags": ["a"]},
	{"name": "con_logfile", "type": "cvar", "help": "Console output gets written to this file", "flags": []},
	{"name": "con_max_displayed_entries_notify", "type": "cvar", "help": "Sets how many lines of console output are preserved in the hud notify area.\nSetting the value too high may impact performance.\nThis will not clear existing messages if reduced.\n", "flags": ["a","cl"]},
	{"name": "con_max_displayed_entries_panel", "type": "cvar", "help": "Sets how many lines of console output are preserved in the panel.\nSetting the value too high may impact performance.\nThis will not clear existing messages if reduced.\n", "flags": ["a","cl"]},
	{"name": "con_max_history", "type": "cvar", "help": "How many past submitted entries the console should save.", "flags": ["a","cl"]},
	{"name": "con_min_accumulate_length", "type": "cvar", "help": "Sets the minimum length an output line needs to have to be accumulated if repeated\nSpecify 0 to always merge and set -1 to never merge.\n", "flags": ["a","cl"]},
	{"name": "con_min_severity", "type": "command", "help": "Minimum severity level for messages sent to any logging channel: LS_MESSAGE=0, LS_WARNING=1, LS_ASSERT=2, LS_ERROR=3, LS_PANIC=4.", "flags": ["norecord","clientcmd_can_execute"]},
	{"name": "con_notifytime", "type": "cvar", "help": "How long to display recent console text to the upper part of the game window", "flags": []},
	{"name": "con_nprint_bgalpha", "type": "cvar", "help": "Con_NPrint background alpha.", "flags": []},
	{"name": "con_nprint_bgborder", "type": "cvar", "help": "Con_NPrint border size.", "flags": []},
	{"name": "con_timestamp", "type": "cvar", "help": "Prefix console.log entries with timestamps", "flags": []},
	{"name": "connect", "type": "command", "help": "Connect to specified server.", "flags": ["norecord"]},
	{"name": "connect_lobby", "type": "command", "help": "Connect to a given SteamID's lobby\n", "flags": ["sv"]},
	{"name": "console_history_size", "type": "cvar", "help": "", "flags": []},
	{"name": "contimes", "type": "cvar", "help": "Number of console lines to overlay for debugging.", "flags": []},
	{"name": "coop", "type": "cvar", "help": "Cooperative play.", "flags": ["nf"]},
	{"name": "cpu_level", "type": "cvar", "help": "CPU Level - Default: High", "flags": []},
	{"name": "cpu_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "cpu_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "crash", "type": "command", "help": "Cause the engine to crash (Debug!!)", "flags": ["cheat","norecord"]},
	{"name": "create_flashlight", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "create_volumetric", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "creditsdone", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "crosshair", "type": "cvar", "help": "Toggles drawing the crosshair, 0 = OFF, 1 = ON.", "flags": ["a","cl"]},
	{"name": "csm_quality_level", "type": "cvar", "help": "Cascaded shadow map quality level, [0,3], 0=VERY_LOW, 3=HIGHEST", "flags": []},
	{"name": "csm_quality_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "csm_quality_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "-csm_rot_x_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_x_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_x_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-csm_rot_x_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_y_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-csm_rot_y_neg", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "-csm_rot_y_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+csm_rot_y_plus", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "cvar_dump", "type": "command", "help": "Dump ConVar list", "flags": []},
	{"name": "cvarlist", "type": "command", "help": "Show the list of convars/concommands.", "flags": []},
	{"name": "das_max_z_trace_length", "type": "cvar", "help": "Maximum height of player and still test for adsp", "flags": []},
	{"name": "das_process_overhang_spaces", "type": "cvar", "help": "", "flags": []},
	{"name": "datacachesize", "type": "cvar", "help": "Size in MB.", "flags": []},
	{"name": "dbg_demofile", "type": "cvar", "help": "", "flags": []},
	{"name": "dbg_spike", "type": "command", "help": "generates a fake spike", "flags": ["cheat","norecord"]},
	{"name": "deathmatch", "type": "cvar", "help": "Running a deathmatch server.", "flags": ["nf"]},
	{"name": "debug_dispatch_server_dump", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_drawbox", "type": "command", "help": "Create debug box", "flags": ["cheat"]},
	{"name": "debug_drawdisp_boundbox", "type": "command", "help": "Create debug boxes for invalid displacements", "flags": ["cheat"]},
	{"name": "debug_fixmyposition", "type": "command", "help": "Runs FindsClosestPassableSpace() on player.", "flags": ["sv","cheat"]},
	{"name": "debug_map_crc", "type": "cvar", "help": "Prints CRC for each map lump loaded", "flags": []},
	{"name": "debug_materialmodifycontrol", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_materialmodifycontrol_client", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "debug_overlay_fullposition", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_physimpact", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "debug_touchlinks", "type": "cvar", "help": "Spew touch link activity", "flags": ["sv"]},
	{"name": "debug_visibility_monitor", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "debugportalcollideables", "type": "command", "help": "Dump all CPhysCollides for all portals to the debug overlay", "flags": ["sv"]},
	{"name": "decalfrequency", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "default_fov", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "demo_autorecord", "type": "cvar", "help": "Enable recording demos after disconnect", "flags": ["a"]},
	{"name": "demo_avellimit", "type": "cvar", "help": "Angular velocity limit before eyes considered snapped for demo playback.", "flags": []},
	{"name": "demo_debug", "type": "cvar", "help": "Demo debug info.", "flags": []},
	{"name": "demo_enabledemos", "type": "cvar", "help": "Enable recording demos (must be set true before loading a map)", "flags": []},
	{"name": "demo_fastforwardfinalspeed", "type": "cvar", "help": "Go this fast when starting to hold FF button.", "flags": []},
	{"name": "demo_fastforwardramptime", "type": "cvar", "help": "How many seconds it takes to get to full FF speed.", "flags": []},
	{"name": "demo_fastforwardstartspeed", "type": "cvar", "help": "Go this fast when starting to hold FF button.", "flags": []},
	{"name": "demo_goto", "type": "command", "help": "Skips to location in demo.", "flags": ["norecord"]},
	{"name": "demo_gototick", "type": "command", "help": "Skips to a tick in demo.", "flags": ["norecord"]},
	{"name": "demo_highlight_fastforwardspeed", "type": "cvar", "help": "Speed to use when fast forwarding to highlights.", "flags": []},
	{"name": "demo_highlight_skipthreshold", "type": "cvar", "help": "Number of seconds between previous highlight event and round start that will fast forward instead of skipping.", "flags": []},
	{"name": "demo_highlight_timeafter", "type": "cvar", "help": "How many seconds after highlight event to start fast forwarding.", "flags": []},
	{"name": "demo_highlight_timebefore", "type": "cvar", "help": "How many seconds before highlight event to stop fast forwarding.", "flags": []},
	{"name": "demo_index", "type": "cvar", "help": "If to use demo index. Needs to be set before loading demo.", "flags": ["a"]},
	{"name": "demo_index_max_other", "type": "cvar", "help": "Limits the the count of index files of other (non-current) demos. Needs to be set before loading demo.", "flags": ["a"]},
	{"name": "demo_info", "type": "command", "help": "Print information about currently playing demo.", "flags": ["norecord"]},
	{"name": "demo_interplimit", "type": "cvar", "help": "How much origin velocity before it's considered to have 'teleported' causing interpolation to reset.", "flags": []},
	{"name": "demo_interpolateview", "type": "cvar", "help": "Do view interpolation during dem playback.", "flags": []},
	{"name": "demo_legacy_rollback", "type": "cvar", "help": "Use legacy view interpolation rollback amount in demo playback.", "flags": []},
	{"name": "demo_listhighlights", "type": "command", "help": "List all highlights data for the demo.", "flags": ["norecord"]},
	{"name": "demo_listimportantticks", "type": "command", "help": "List all important ticks in the demo.", "flags": ["norecord"]},
	{"name": "demo_pause", "type": "command", "help": "Pauses demo playback.", "flags": ["norecord"]},
	{"name": "demo_pauseatservertick", "type": "cvar", "help": "Pauses demo playback at server tick", "flags": []},
	{"name": "demo_quitafterplayback", "type": "cvar", "help": "Quits game after demo playback.", "flags": []},
	{"name": "demo_recordcommands", "type": "cvar", "help": "Record commands typed at console into .dem files.", "flags": ["cheat"]},
	{"name": "demo_resume", "type": "command", "help": "Resumes demo playback.", "flags": ["norecord"]},
	{"name": "demo_strict_validation", "type": "cvar", "help": "", "flags": []},
	{"name": "demo_timescale", "type": "command", "help": "Sets demo replay speed.", "flags": ["norecord"]},
	{"name": "demo_togglepause", "type": "command", "help": "Toggles demo playback.", "flags": ["norecord"]},
	{"name": "demolist", "type": "command", "help": "Print demo sequence list.", "flags": ["norecord"]},
	{"name": "demos", "type": "command", "help": "Demo demo file sequence.", "flags": ["norecord"]},
	{"name": "demoui", "type": "command", "help": "Show/hide the demo player UI.", "flags": ["norecord"]},
	{"name": "developer", "type": "cvar", "help": "Set developer message level", "flags": []},
	{"name": "devshots_nextmap", "type": "command", "help": "Used by the devshots system to go to the next map in the devshots maplist.", "flags": []},
	{"name": "devshots_screenshot", "type": "command", "help": "Used by the -makedevshots system to take a screenshot. For taking your own screenshots, use the 'screenshot' command instead.", "flags": ["norecord"]},
	{"name": "devui_disable", "type": "command", "help": "Disables the specified devui window", "flags": ["cl"]},
	{"name": "devui_display_scale", "type": "cvar", "help": "Global imgui scale, usually used for Hi-DPI displays", "flags": ["a"]},
	{"name": "devui_enable", "type": "command", "help": "Enables the specified devui window", "flags": ["cl"]},
	{"name": "devui_font_scale", "type": "cvar", "help": "Global scale applied to Imgui fonts", "flags": ["a"]},
	{"name": "+devui_input", "type": "command", "help": "Toggles the mouse cursor for devui windows, same as devui_toggle_input", "flags": ["cl"]},
	{"name": "-devui_input", "type": "command", "help": "Toggles the mouse cursor for devui windows, same as devui_toggle_input", "flags": ["cl"]},
	{"name": "+devui_menu", "type": "command", "help": "Toggles the menu bar and input", "flags": ["cl"]},
	{"name": "-devui_menu", "type": "command", "help": "Toggles the menu bar and input", "flags": ["cl"]},
	{"name": "devui_show", "type": "command", "help": "Toggles the specified devui window", "flags": ["cl"]},
	{"name": "devui_theme", "type": "cvar", "help": "Current devui theme", "flags": ["a"]},
	{"name": "devui_toggle_input", "type": "command", "help": "Toggles the mouse cursor for devui windows", "flags": ["cl"]},
	{"name": "devui_toggle_menu", "type": "command", "help": "Toggles the devui menu bar", "flags": ["cl"]},
	{"name": "differences", "type": "command", "help": "Show all convars which are not at their default values.", "flags": []},
	{"name": "disconnect", "type": "command", "help": "Disconnect game from server.", "flags": ["norecord","server_can_execute"]},
	{"name": "disp_dynamic", "type": "cvar", "help": "", "flags": []},
	{"name": "disp_list_all_collideable", "type": "command", "help": "List all collideable displacements", "flags": []},
	{"name": "display_elapsedtime", "type": "command", "help": "Displays how much time has elapsed since the game started", "flags": ["cheat"]},
	{"name": "display_game_events", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "displaysoundlist", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "dlight_debug", "type": "command", "help": "Creates a dlight in front of the player", "flags": ["cheat","cl"]},
	{"name": "drawcross", "type": "command", "help": "Draws a cross at the given location\n\tArguments: x y z", "flags": ["sv","cheat"]},
	{"name": "drawline", "type": "command", "help": "Draws line between two 3D Points.\n\tGreen if no collision\n\tRed is collides with something\n\tArguments: x1 y1 z1 x2 y2 z2", "flags": ["sv","cheat"]},
	{"name": "dsp_automatic", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_db_min", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_db_mixdrop", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_dist_max", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_dist_min", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_enhance_stereo", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "dsp_facingaway", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_mix_max", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_mix_min", "type": "cvar", "help": "", "flags": ["cheat","demo"]},
	{"name": "dsp_off", "type": "cvar", "help": "", "flags": []},
	{"name": "dsp_player", "type": "cvar", "help": "", "flags": ["demo","server_can_execute"]},
	{"name": "dsp_reload", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "dsp_room", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_slow_cpu", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "dsp_spatial", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_speaker", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_vol_2ch", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_vol_4ch", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_vol_5ch", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dsp_volume", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "dsp_water", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "dt_ShowPartialChangeEnts", "type": "cvar", "help": "(SP only) - show entities that were copied using small optimized lists (FL_EDICT_PARTIAL_CHANGE).", "flags": []},
	{"name": "dt_UsePartialChangeEnts", "type": "cvar", "help": "(SP only) - enable FL_EDICT_PARTIAL_CHANGE optimization.", "flags": []},
	{"name": "dti_flush", "type": "command", "help": "Write out the datatable instrumentation files (you must run with -dti for this to work).", "flags": []},
	{"name": "dtwarning", "type": "cvar", "help": "Print data table warnings?", "flags": []},
	{"name": "dtwatchclass", "type": "cvar", "help": "Watch all fields encoded with this table.", "flags": []},
	{"name": "dtwatchdecode", "type": "cvar", "help": "When watching show decode.", "flags": []},
	{"name": "dtwatchencode", "type": "cvar", "help": "When watching show encode.", "flags": []},
	{"name": "dtwatchent", "type": "cvar", "help": "Watch this entities data table encoding.", "flags": []},
	{"name": "dtwatchvar", "type": "cvar", "help": "Watch the named variable.", "flags": []},
	{"name": "-duck", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+duck", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-duck_notoggle", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+duck_notoggle", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "dump_globals", "type": "command", "help": "Dump all global entities/states", "flags": ["sv"]},
	{"name": "dump_paintmaps", "type": "command", "help": "dump paintmap data to \"paintmap_#.txt\"", "flags": ["cheat"]},
	{"name": "dump_panorama_css_properties", "type": "command", "help": "Prints out all valid panorama CSS properties and their documentation. Adding a 'markdown' argument to this command causes it to dump documentation in markdown syntax.", "flags": []},
	{"name": "dump_panorama_css_properties_memstats", "type": "command", "help": "Prints out mem stats of all valid panorama CSS properties", "flags": []},
	{"name": "dump_panorama_events", "type": "command", "help": "print panorama event types and their documentation. Adding 'markdown' as an argument to this command dumps documentation in markdown format", "flags": []},
	{"name": "dump_panorama_js_scopes", "type": "command", "help": "print panorama js scopes, such as classes, and their associated methods. Adding a 'markdown' argument to this command dumps documentation in markdown format.", "flags": []},
	{"name": "dump_panorama_render_command_stats", "type": "command", "help": "", "flags": []},
	{"name": "dumpeventqueue", "type": "command", "help": "Dump the contents of the Entity I/O event queue to the console.", "flags": ["sv"]},
	{"name": "dumpgamestringtable", "type": "command", "help": "Dump the contents of the game string table to the console.", "flags": ["sv","cheat"]},
	{"name": "dumpstringtables", "type": "command", "help": "Print string tables to console.", "flags": []},
	{"name": "echo", "type": "command", "help": "Echo text to console.", "flags": ["server_can_execute"]},
	{"name": "editor_toggle", "type": "command", "help": "Disables the simulation and returns focus to the editor", "flags": ["cheat"]},
	{"name": "enable_debug_overlays", "type": "cvar", "help": "Enable rendering of debug overlays", "flags": ["sv","cheat"]},
	{"name": "enable_fast_math", "type": "cvar", "help": "Turns Denormals-Are-Zeroes and Flush-to-Zero on or off", "flags": []},
	{"name": "enable_skeleton_draw", "type": "cvar", "help": "Render skeletons in wireframe", "flags": ["cheat","cl"]},
	{"name": "endmovie", "type": "command", "help": "Stop recording movie frames.", "flags": ["norecord"]},
	{"name": "engine_no_focus_sleep", "type": "cvar", "help": "", "flags": []},
	{"name": "ent_absbox", "type": "command", "help": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_attachments", "type": "command", "help": "Displays the attachment points on an entity.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_autoaim", "type": "command", "help": "Displays the entity's autoaim radius.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "ent_bbox", "type": "command", "help": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_cancelpendingentfires", "type": "command", "help": "Cancels all ent_fire created outputs that are currently waiting for their delay to expire.", "flags": ["sv","cheat"]},
	{"name": "ent_create", "type": "command", "help": "Creates an entity of the given type where the player is looking.  Additional parameters can be passed in in the form: ent_create <entity name> <param 1 name> <param 1> <param 2 name> <param 2>...<param N name> <param N>", "flags": ["sv","cheat"]},
	{"name": "ent_create_aimed", "type": "command", "help": "Creates an entity of the given type where the player is looking.  Additional parameters can be passed in in the form: ent_create_aimed <entity name> <param 1 name> <param 1> <param 2 name> <param 2>...<param N name> <param N>", "flags": ["sv","cheat"]},
	{"name": "ent_debugkeys", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "ent_dump", "type": "command", "help": "Usage:\n   ent_dump <entity name>\n", "flags": ["sv","cheat"]},
	{"name": "ent_fire", "type": "command", "help": "Usage:\n   ent_fire <target> [action] [value] [delay]\n", "flags": ["sv","cheat"]},
	{"name": "ent_info", "type": "command", "help": "Usage:\n   ent_info <class name>\n", "flags": ["sv","cheat"]},
	{"name": "ent_info_datatable", "type": "command", "help": "Usage:\n   ent_info_datatable <class name>\n", "flags": ["sv","cheat"]},
	{"name": "ent_keyvalue", "type": "command", "help": "Applies the comma delimited key=value pairs to the entity with the given Hammer ID.\n\tFormat: ent_keyvalue <entity id> <key1>=<value1>,<key2>=<value2>,...,<keyN>=<valueN>\n", "flags": ["sv","cheat"]},
	{"name": "ent_messages", "type": "command", "help": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at", "flags": ["sv","cheat"]},
	{"name": "ent_messages_draw", "type": "cvar", "help": "Visualizes all entity input/output activity.", "flags": ["sv","cheat"]},
	{"name": "ent_name", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "ent_orient", "type": "command", "help": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.\n\tFormat: ent_orient <entity name> <optional: allangles>", "flags": ["sv","cheat"]},
	{"name": "ent_pause", "type": "command", "help": "Toggles pausing of input/output message processing for entities.  When turned on processing of all message will stop.  Any messages displayed with 'ent_messages' will stop fading and be displayed indefinitely. To step through the messages one by one use 'ent_step'.", "flags": ["sv","cheat"]},
	{"name": "ent_pivot", "type": "command", "help": "Displays the pivot for the given entity(ies).\n\t(y=up=green, z=forward=blue, x=left=red). \n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_rbox", "type": "command", "help": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_remove", "type": "command", "help": "Removes the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_remove_all", "type": "command", "help": "Removes all entities of the specified type\n\tArguments:   \t{entity_name} / {class_name} ", "flags": ["sv","cheat"]},
	{"name": "ent_rotate", "type": "command", "help": "Rotates an entity by a specified # of degrees", "flags": ["sv","cheat"]},
	{"name": "ent_setang", "type": "command", "help": "Set entity angles", "flags": ["sv","cheat"]},
	{"name": "ent_setname", "type": "command", "help": "Sets the targetname of the given entity(s)\n\tArguments:   \t{new entity name} {entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_setpos", "type": "command", "help": "Move entity to position", "flags": ["sv","cheat"]},
	{"name": "ent_show_contexts", "type": "cvar", "help": "Show entity contexts in ent_text display", "flags": ["sv"]},
	{"name": "ent_show_response_criteria", "type": "command", "help": "Print, to the console, an entity's current criteria set used to select responses.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_step", "type": "command", "help": "When 'ent_pause' is set this will step through one waiting input / output message at a time.", "flags": ["sv","cheat"]},
	{"name": "ent_teleport", "type": "command", "help": "Teleport the specified entity to where the player is looking.\n\tFormat: ent_teleport <entity name>", "flags": ["sv","cheat"]},
	{"name": "ent_text", "type": "command", "help": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "ent_viewoffset", "type": "command", "help": "Displays the eye position for the given entity(ies) in red.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "er_colwidth", "type": "cvar", "help": "", "flags": []},
	{"name": "er_graphwidthfrac", "type": "cvar", "help": "", "flags": []},
	{"name": "er_maxname", "type": "cvar", "help": "", "flags": []},
	{"name": "escape", "type": "command", "help": "Escape key pressed.", "flags": ["clientcmd_can_execute"]},
	{"name": "exec", "type": "command", "help": "Execute script file.", "flags": []},
	{"name": "execifexists", "type": "command", "help": "Execute script file if file exists.", "flags": []},
	{"name": "execwithwhitelist", "type": "command", "help": "Execute script file, only execing convars on a whitelist.", "flags": []},
	{"name": "exit", "type": "command", "help": "Exit the engine.", "flags": []},
	{"name": "explode", "type": "command", "help": "Kills the player with explosive damage", "flags": ["sv","print"]},
	{"name": "explodevector", "type": "command", "help": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>", "flags": ["sv","print"]},
	{"name": "fadein", "type": "command", "help": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.", "flags": ["sv","cheat"]},
	{"name": "fadeout", "type": "command", "help": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.", "flags": ["sv","cheat"]},
	{"name": "fast_fogvolume", "type": "cvar", "help": "", "flags": []},
	{"name": "fast_poly_convert", "type": "cvar", "help": "", "flags": []},
	{"name": "fast_teleport_enable", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "filesystem_buffer_size", "type": "cvar", "help": "Size of per file buffers. 0 for none", "flags": []},
	{"name": "filesystem_max_stdio_read", "type": "cvar", "help": "", "flags": []},
	{"name": "filesystem_native", "type": "cvar", "help": "Use native FS or STDIO", "flags": []},
	{"name": "filesystem_report_buffered_io", "type": "cvar", "help": "", "flags": []},
	{"name": "filesystem_unbuffered_io", "type": "cvar", "help": "", "flags": []},
	{"name": "find", "type": "command", "help": "Find concommands with the specified string in their name/help text.", "flags": []},
	{"name": "find_ent", "type": "command", "help": "Find and list all entities with classnames or targetnames that contain the specified substring.\nFormat: find_ent <substring>\n", "flags": ["sv","cheat"]},
	{"name": "find_ent_index", "type": "command", "help": "Display data for entity matching specified index.\nFormat: find_ent_index <index>\n", "flags": ["sv","cheat"]},
	{"name": "findflags", "type": "command", "help": "Find concommands by flags.", "flags": []},
	{"name": "fire_absorbrate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_dmgbase", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_dmginterval", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_dmgscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_extabsorb", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_extscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_growthrate", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_heatscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_incomingheatscale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fire_maxabsorb", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "firetarget", "type": "command", "help": "", "flags": ["sv","cheat"]},
	{"name": "firstperson", "type": "command", "help": "Switch to firstperson camera.", "flags": ["server_can_execute","cl"]},
	{"name": "fish_debug", "type": "cvar", "help": "Show debug info for fish", "flags": ["cheat","cl"]},
	{"name": "fish_dormant", "type": "cvar", "help": "Turns off interactive fish behavior. Fish become immobile and unresponsive.", "flags": ["sv","cheat","rep"]},
	{"name": "flex_expression", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flex_rules", "type": "cvar", "help": "Allow flex animation rules to run.", "flags": ["cl"]},
	{"name": "flex_smooth", "type": "cvar", "help": "Applies smoothing/decay curve to flex animation controller changes.", "flags": ["cl"]},
	{"name": "flex_talk", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "flush", "type": "command", "help": "Flush unlocked cache memory.", "flags": ["cheat"]},
	{"name": "fog_color", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_colorskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_enable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "fog_enable_water_fog", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "fog_enableskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_end", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_endskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_hdrcolorscale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_hdrcolorscaleskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_maxdensity", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_maxdensityskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_override", "type": "cvar", "help": "Overrides the map's fog settings (-1 populates fog_ vars with map's values)", "flags": ["cheat","cl"]},
	{"name": "fog_start", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_startskybox", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "fog_volume_debug", "type": "cvar", "help": "If enabled, prints diagnostic information about the current fog volume", "flags": ["sv"]},
	{"name": "fogui", "type": "command", "help": "", "flags": []},
	{"name": "forceactivecontrollertype", "type": "cvar", "help": "", "flags": []},
	{"name": "forcebind", "type": "command", "help": "Bind a command to an available key. (forcebind command opt:suggestedKey)", "flags": []},
	{"name": "forkandcoredumpchild", "type": "command", "help": "Cause the engine to fork and produce a core dump from within child PID (Debug!!)", "flags": ["norecord"]},
	{"name": "+forward", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-forward", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "foundry_engine_get_mouse_control", "type": "command", "help": "Give the engine control of the mouse.", "flags": ["sv","cheat"]},
	{"name": "foundry_engine_release_mouse_control", "type": "command", "help": "Give the control of the mouse back to Hammer.", "flags": ["sv","cheat"]},
	{"name": "foundry_select_entity", "type": "command", "help": "Select the entity under the crosshair or select entities with the specified name.", "flags": ["sv","cheat"]},
	{"name": "foundry_sync_hammer_view", "type": "command", "help": "Move Hammer's 3D view to the same position as the engine's 3D view.", "flags": ["sv","cheat"]},
	{"name": "foundry_update_entity", "type": "command", "help": "Updates the entity's position/angles when in edit mode", "flags": ["sv","cheat"]},
	{"name": "fov_desired", "type": "cvar", "help": "Sets the base field-of-view.\n", "flags": ["a","sv","user"]},
	{"name": "fov_viewmodel", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "fps_max", "type": "cvar", "help": "Frame rate limiter", "flags": ["a"]},
	{"name": "fps_max_menu", "type": "cvar", "help": "Frame rate limiter, main menu", "flags": ["a"]},
	{"name": "fps_screenshot_frequency", "type": "cvar", "help": "While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds when under the given fps.)", "flags": ["cheat"]},
	{"name": "fps_screenshot_threshold", "type": "cvar", "help": "Dump a screenshot when the FPS drops below the given value.", "flags": ["cheat"]},
	{"name": "fs_clear_open_duplicate_times", "type": "command", "help": "Clear the list of files that have been opened.", "flags": []},
	{"name": "fs_dump_open_duplicate_times", "type": "command", "help": "Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was spent reading from them.", "flags": []},
	{"name": "fs_enable_stats", "type": "cvar", "help": "", "flags": []},
	{"name": "fs_monitor_read_from_pack", "type": "cvar", "help": "0:Off, 1:Any, 2:Sync only", "flags": []},
	{"name": "fs_printopenfiles", "type": "command", "help": "Show all files currently opened by the engine.", "flags": []},
	{"name": "fs_report_long_reads", "type": "cvar", "help": "0:Off, 1:All (for tracking accumulated duplicate read times), >1:Microsecond threshold", "flags": []},
	{"name": "fs_report_sync_opens", "type": "cvar", "help": "0:Off, 1:Always, 2:Not during map load", "flags": []},
	{"name": "fs_report_sync_opens_callstack", "type": "cvar", "help": "0 to not display the call-stack when we hit a fs_report_sync_opens warning. Set to 1 to display the call-stack.", "flags": []},
	{"name": "fs_warning_level", "type": "command", "help": "Set the filesystem warning level.", "flags": []},
	{"name": "fs_warning_mode", "type": "cvar", "help": "0:Off, 1:Warn main thread, 2:Warn other threads", "flags": []},
	{"name": "func_break_max_pieces", "type": "cvar", "help": "", "flags": ["a","rep","cl"]},
	{"name": "func_break_reduction_factor", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "func_breakdmg_bullet", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "func_breakdmg_club", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "func_breakdmg_explosive", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "fx_glass_velocity_cap", "type": "cvar", "help": "Maximum downwards speed of shattered glass particles", "flags": ["cl"]},
	{"name": "fx_new_sparks", "type": "cvar", "help": "Use new style sparks.\n", "flags": ["sv","cheat"]},
	{"name": "g_debug_angularsensor", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "g_debug_constraint_sounds", "type": "cvar", "help": "Enable debug printing about constraint sounds.", "flags": ["sv","cheat"]},
	{"name": "g_debug_doors", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "g_debug_ragdoll_removal", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "g_debug_ragdoll_visualize", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "g_debug_transitions", "type": "cvar", "help": "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition.", "flags": ["sv"]},
	{"name": "g_Language", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "g_ragdoll_fadespeed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "g_ragdoll_important_maxcount", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "g_ragdoll_lvfadespeed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "g_ragdoll_maxcount", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "gameinstructor_dump_open_lessons", "type": "command", "help": "Gives a list of all currently open lessons.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_enable", "type": "cvar", "help": "Display in game lessons that teach new players.", "flags": ["a","cl"]},
	{"name": "gameinstructor_find_errors", "type": "cvar", "help": "Set to 1 and the game instructor will run EVERY scripted command to uncover errors.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_reload_lessons", "type": "command", "help": "Shuts down all open lessons and reloads them from the script file.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_save_restore_lessons", "type": "cvar", "help": "Set to 0 to disable save/load of open lesson opportunities in single player.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_start_sound_cooldown", "type": "cvar", "help": "Number of seconds forced between similar lesson start sounds.", "flags": ["cl"]},
	{"name": "gameinstructor_verbose", "type": "cvar", "help": "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.", "flags": ["cheat","cl"]},
	{"name": "gameinstructor_verbose_lesson", "type": "cvar", "help": "Display more verbose information for lessons have this name.", "flags": ["cheat","cl"]},
	{"name": "gamemenucommand", "type": "command", "help": "Issue game menu command.", "flags": ["cl"]},
	{"name": "gamestats_file_output_directory", "type": "cvar", "help": "When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath\n", "flags": ["sv"]},
	{"name": "gameui_activate", "type": "command", "help": "Shows the game UI", "flags": []},
	{"name": "gameui_allowescape", "type": "command", "help": "Escape key allowed to hide game UI", "flags": []},
	{"name": "gameui_allowescapetoshow", "type": "command", "help": "Escape key allowed to show game UI", "flags": []},
	{"name": "gameui_hide", "type": "command", "help": "Hides the game UI", "flags": []},
	{"name": "gameui_preventescape", "type": "command", "help": "Escape key doesn't hide game UI", "flags": []},
	{"name": "gameui_preventescapetoshow", "type": "command", "help": "Escape key doesn't show game UI", "flags": []},
	{"name": "getpos", "type": "command", "help": "dump position and angles to the console", "flags": ["cl"]},
	{"name": "getpos_exact", "type": "command", "help": "dump origin and angles to the console", "flags": ["cl"]},
	{"name": "give_weapon", "type": "command", "help": "Gives the player a weapon.", "flags": ["sv"]},
	{"name": "gl_clear", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "gl_clear_color", "type": "cvar", "help": "Clears the back buffer with the specified color", "flags": ["cheat","cl"]},
	{"name": "gl_clear_randomcolor", "type": "cvar", "help": "Clear the back buffer to random colors every frame. Helps spot open seams in geometry.", "flags": ["cheat","cl"]},
	{"name": "global_event_log_enabled", "type": "cvar", "help": "Enables the global event log system", "flags": ["sv","cheat"]},
	{"name": "global_set", "type": "command", "help": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).", "flags": ["sv","cheat"]},
	{"name": "glow_outline_effect_enable", "type": "cvar", "help": "Enable entity outline glow effects.", "flags": ["cl"]},
	{"name": "glow_outline_width", "type": "cvar", "help": "Width of glow outline effect in screen space.", "flags": ["cl"]},
	{"name": "god", "type": "command", "help": "Toggle. Player becomes invulnerable. Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "gods", "type": "command", "help": "Toggle. All players become invulnerable.", "flags": ["sv","cheat"]},
	{"name": "gpu_level", "type": "cvar", "help": "GPU Level - Default: High", "flags": []},
	{"name": "gpu_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "gpu_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "gpu_mem_level", "type": "cvar", "help": "Memory Level - Default: High", "flags": []},
	{"name": "gpu_mem_level_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "gpu_mem_level_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "grab_window", "type": "command", "help": "grab/ungrab window.", "flags": []},
	{"name": "+graph", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-graph", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+grenade1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-grenade1", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+grenade2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-grenade2", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "groundlist", "type": "command", "help": "Display ground entity list <index>", "flags": ["sv"]},
	{"name": "help", "type": "command", "help": "Find help about a convar/concommand.", "flags": []},
	{"name": "hide_main_menu", "type": "command", "help": "Hide the main menu", "flags": ["cl"]},
	{"name": "hideconsole", "type": "command", "help": "Hide the console.", "flags": ["norecord"]},
	{"name": "hidehud", "type": "cvar", "help": "", "flags": ["cheat","cl","ss"]},
	{"name": "hidepanel", "type": "command", "help": "Hides a viewport panel <name>", "flags": ["cl"]},
	{"name": "hl2_episodic", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "host_filtered_time_report", "type": "command", "help": "Dumps time spent idle in previous frames in ms(dedicated only).", "flags": []},
	{"name": "host_flush_threshold", "type": "cvar", "help": "Memory threshold below which the host should flush caches between server instances", "flags": []},
	{"name": "host_framerate", "type": "cvar", "help": "Set to lock per-frame time elapse.", "flags": ["cheat","rep"]},
	{"name": "host_info_show", "type": "cvar", "help": "How server info gets disclosed in server queries: 0 - query disabled, 1 - show only general info, 2 - show full info", "flags": []},
	{"name": "host_map", "type": "cvar", "help": "Current map name.", "flags": []},
	{"name": "host_map_mount_order_detection", "type": "cvar", "help": "Try to detect from which paths map uses the most assets and reorder paths accordingly", "flags": ["a"]},
	{"name": "host_map_mount_order_detection_verbose", "type": "cvar", "help": "Spew detected paths of files", "flags": []},
	{"name": "host_maplist_recurse_subdirs", "type": "cvar", "help": "", "flags": []},
	{"name": "host_name_store", "type": "cvar", "help": "Whether hostname is recorded in game events and GOTV.", "flags": []},
	{"name": "host_players_show", "type": "cvar", "help": "How players are disclosed in server queries: 0 - query disabled, 1 - show only max players count, 2 - show all players", "flags": []},
	{"name": "host_print_frame_times", "type": "cvar", "help": "", "flags": []},
	{"name": "host_rules_show", "type": "cvar", "help": "How server rules get disclosed in server queries: 0 - query disabled, 1 - query enabled", "flags": []},
	{"name": "host_runframe_input_parcelremainder", "type": "cvar", "help": "", "flags": []},
	{"name": "host_ShowIPCCallCount", "type": "cvar", "help": "Print # of IPC calls this number of times per second. If set to -1, the # of IPC calls is shown every frame.", "flags": []},
	{"name": "host_speeds", "type": "cvar", "help": "Show general system running times.", "flags": []},
	{"name": "host_timer_report", "type": "command", "help": "Spew CPU timer jitter for the last 128 frames in microseconds (dedicated only)", "flags": []},
	{"name": "host_timescale", "type": "cvar", "help": "Prescale the clock by this amount.", "flags": ["cheat","rep"]},
	{"name": "host_writeconfig", "type": "command", "help": "Store current settings to config.cfg (or specified .cfg file).", "flags": []},
	{"name": "host_writeconfig_ss", "type": "command", "help": "Store current settings to config.cfg (or specified .cfg file) with first param as splitscreen index.", "flags": []},
	{"name": "hostfile", "type": "cvar", "help": "The HOST file to load.", "flags": ["sv"]},
	{"name": "hostip", "type": "cvar", "help": "Host game server ip", "flags": []},
	{"name": "hostname", "type": "cvar", "help": "Hostname for server.", "flags": []},
	{"name": "hostport", "type": "cvar", "help": "Host game server port", "flags": []},
	{"name": "http_cache_size", "type": "cvar", "help": "", "flags": []},
	{"name": "hud_autoreloadscript", "type": "cvar", "help": "Automatically reloads the animation script each time one is ran", "flags": ["cl"]},
	{"name": "hud_menu_hide", "type": "command", "help": "Hides the currently open hud menu if there is one.", "flags": []},
	{"name": "hud_menu_reload", "type": "command", "help": "Reload hud menu list for autocomplete.", "flags": ["cl"]},
	{"name": "hud_menu_show", "type": "command", "help": "Show hud menu by file name.", "flags": []},
	{"name": "hud_reloadscheme", "type": "command", "help": "Reloads hud layout and animation scripts.", "flags": ["cl"]},
	{"name": "hud_saytext_time", "type": "cvar", "help": "How long a chat message should be displayed during gameplay in seconds.", "flags": ["a","cl"]},
	{"name": "hud_scaling", "type": "cvar", "help": "Scales hud elements", "flags": ["a","cl"]},
	{"name": "hud_takesshots", "type": "cvar", "help": "Auto-save a scoreboard screenshot at the end of a map.", "flags": ["a","cl"]},
	{"name": "hurtme", "type": "command", "help": "Hurts the player.\n\tArguments: <health to lose>", "flags": ["sv","cheat"]},
	{"name": "impulse", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "in_forceuser", "type": "cvar", "help": "Force user input to this split screen player.", "flags": ["cheat"]},
	{"name": "in_usekeyboardsampletime", "type": "cvar", "help": "Use keyboard sample time smoothing.", "flags": ["cl"]},
	{"name": "incrementvar", "type": "command", "help": "Increment specified convar value.", "flags": ["norecord"]},
	{"name": "invnext", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "invprev", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "ip", "type": "cvar", "help": "Overrides IP for multihomed hosts", "flags": []},
	{"name": "ip_relay", "type": "cvar", "help": "Overrides IP used to redirect TV relay connections for NAT hosts", "flags": []},
	{"name": "ip_steam", "type": "cvar", "help": "Overrides IP used to bind Steam port for multihomed hosts", "flags": []},
	{"name": "ip_tv", "type": "cvar", "help": "Overrides IP used to bind TV port for multihomed hosts", "flags": []},
	{"name": "ip_tv1", "type": "cvar", "help": "Overrides IP used to bind TV1 port for multihomed hosts", "flags": []},
	{"name": "-jlook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+jlook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "jpeg", "type": "command", "help": "Take a jpeg screenshot:  jpeg <filename> <quality 1-100>.", "flags": []},
	{"name": "jpeg360", "type": "command", "help": "", "flags": []},
	{"name": "jpeg_quality", "type": "cvar", "help": "jpeg screenshot quality.", "flags": []},
	{"name": "-jump", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+jump", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "kdtree_test", "type": "command", "help": "Tests spatial partition for entities queries.", "flags": ["sv","cheat"]},
	{"name": "key_findbinding", "type": "command", "help": "Find key bound to specified command string.", "flags": []},
	{"name": "key_listboundkeys", "type": "command", "help": "List bound keys with bindings.", "flags": []},
	{"name": "key_updatelayout", "type": "command", "help": "Updates game keyboard layout to current windows keyboard setting.", "flags": []},
	{"name": "kick", "type": "command", "help": "Kick a player by name.", "flags": []},
	{"name": "kickid", "type": "command", "help": "Kick a player by userid or uniqueid, with a message.", "flags": []},
	{"name": "kickid_ex", "type": "command", "help": "Kick a player by userid or uniqueid, provide a force-the-kick flag and also assign a message.", "flags": []},
	{"name": "kill", "type": "command", "help": "Kills the player with generic damage", "flags": ["sv","print"]},
	{"name": "killserver", "type": "command", "help": "Shutdown the server.", "flags": ["norecord"]},
	{"name": "killvector", "type": "command", "help": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>", "flags": ["sv","print"]},
	{"name": "-klook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+klook", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "lastinv", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "+left", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-left", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "legacy_command_syntax", "type": "cvar", "help": "", "flags": []},
	{"name": "light_crosshair", "type": "command", "help": "Show texture color at crosshair", "flags": ["cheat"]},
	{"name": "lightcache_maxmiss", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "linefile", "type": "command", "help": "Parses map leak data from .lin file", "flags": ["cheat"]},
	{"name": "listdemo", "type": "command", "help": "List demo file contents.", "flags": ["norecord"]},
	{"name": "listid", "type": "command", "help": "Lists banned users.", "flags": []},
	{"name": "listip", "type": "command", "help": "List IP addresses on the ban list.", "flags": []},
	{"name": "listmodels", "type": "command", "help": "List loaded models.", "flags": []},
	{"name": "listRecentNPCSpeech", "type": "command", "help": "Displays a list of the last 5 lines of speech from NPCs.", "flags": ["sv","norecord"]},
	{"name": "load", "type": "command", "help": "Load a saved game.", "flags": ["norecord"]},
	{"name": "loader_defer_non_critical_jobs", "type": "cvar", "help": "", "flags": []},
	{"name": "loader_dump_table", "type": "command", "help": "", "flags": []},
	{"name": "loader_spew_info", "type": "cvar", "help": "0:Off, 1:Timing, 2:Completions, 3:Late Completions, 4:Creations/Purges, -1:All", "flags": []},
	{"name": "loader_throttle_io", "type": "cvar", "help": "", "flags": []},
	{"name": "locator_background_border_color", "type": "cvar", "help": "The default color for the border.", "flags": ["cl"]},
	{"name": "locator_background_border_thickness", "type": "cvar", "help": "How many pixels the background borders the left and right.", "flags": ["cl"]},
	{"name": "locator_background_color", "type": "cvar", "help": "The default color for the background.", "flags": ["cl"]},
	{"name": "locator_background_shift_x", "type": "cvar", "help": "How many pixels the background is shifted right.", "flags": ["cl"]},
	{"name": "locator_background_shift_y", "type": "cvar", "help": "How many pixels the background is shifted down.", "flags": ["cl"]},
	{"name": "locator_background_style", "type": "cvar", "help": "Setting this to 1 will show rectangle backgrounds behind the items word-bubble pointers.", "flags": ["cl"]},
	{"name": "locator_background_thickness_x", "type": "cvar", "help": "How many pixels the background borders the left and right.", "flags": ["cl"]},
	{"name": "locator_background_thickness_y", "type": "cvar", "help": "How many pixels the background borders the top and bottom.", "flags": ["cl"]},
	{"name": "locator_fade_time", "type": "cvar", "help": "Number of seconds it takes for a lesson to fully fade in/out.", "flags": ["cl"]},
	{"name": "locator_icon_max_size_non_ss", "type": "cvar", "help": "Minimum scale of the icon on the screen", "flags": ["cl"]},
	{"name": "locator_icon_min_size_non_ss", "type": "cvar", "help": "Minimum scale of the icon on the screen", "flags": ["cl"]},
	{"name": "locator_lerp_rest", "type": "cvar", "help": "Number of seconds before moving from the center.", "flags": ["cl"]},
	{"name": "locator_lerp_speed", "type": "cvar", "help": "Speed that static lessons move along the Y axis.", "flags": ["cl"]},
	{"name": "locator_lerp_time", "type": "cvar", "help": "Number of seconds to lerp before reaching final destination", "flags": ["cl"]},
	{"name": "locator_pulse_time", "type": "cvar", "help": "Number of seconds to pulse after changing icon or position", "flags": ["cl"]},
	{"name": "locator_screen_pos_y", "type": "cvar", "help": "Percentage of the lower half of the screen that the locator will draw at when at its reseting position on the hud.", "flags": ["cl"]},
	{"name": "locator_split_len", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "locator_split_maxwide_percent", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "locator_start_at_crosshair", "type": "cvar", "help": "Start position at the crosshair instead of the top middle of the screen.", "flags": ["cl"]},
	{"name": "locator_target_offset_x", "type": "cvar", "help": "How many pixels to offset the locator from the target position.", "flags": ["cl"]},
	{"name": "locator_target_offset_y", "type": "cvar", "help": "How many pixels to offset the locator from the target position.", "flags": ["cl"]},
	{"name": "locator_topdown_style", "type": "cvar", "help": "Topdown games set this to handle distance and offscreen location differently.", "flags": ["cl"]},
	{"name": "log", "type": "command", "help": "Enables logging to file, console, and udp < on | off >.", "flags": []},
	{"name": "log_color", "type": "command", "help": "Set the color of a logging channel.", "flags": ["norecord"]},
	{"name": "log_dumpchannels", "type": "command", "help": "Dumps information about all logging channels.", "flags": ["norecord"]},
	{"name": "log_flags", "type": "command", "help": "Set the flags on a logging channel.", "flags": ["norecord"]},
	{"name": "log_level", "type": "command", "help": "Set the spew level of a logging channel.", "flags": ["norecord"]},
	{"name": "logaddress_add", "type": "command", "help": "Set address and port for remote host <ip:port>.", "flags": []},
	{"name": "logaddress_add_ex", "type": "command", "help": "Set address and port for remote host <ip:port> and supplies a unique token in the UDP packets.", "flags": []},
	{"name": "logaddress_add_http", "type": "command", "help": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes.", "flags": ["sv","log"]},
	{"name": "logaddress_add_ts", "type": "command", "help": "Set address and port for remote host <ip:port> and uses a unique checksum from logaddress_token_secret in the UDP packets.", "flags": []},
	{"name": "logaddress_del", "type": "command", "help": "Remove address and port for remote host <ip:port>.", "flags": []},
	{"name": "logaddress_delall", "type": "command", "help": "Remove all udp addresses being logged to", "flags": []},
	{"name": "logaddress_delall_http", "type": "command", "help": "Remove all http listeners from the dispatch list.", "flags": ["sv","log"]},
	{"name": "logaddress_list", "type": "command", "help": "List all addresses currently being used by logaddress.", "flags": []},
	{"name": "logaddress_list_http", "type": "command", "help": "List all URIs currently receiving server logs", "flags": ["sv","log"]},
	{"name": "logaddress_token_secret", "type": "cvar", "help": "Set a secret string that will be hashed when using logaddress with explicit token hash.", "flags": []},
	{"name": "-lookdown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+lookdown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-lookspin", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+lookspin", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "lookspring", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "lookstrafe", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "+lookup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-lookup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "loopsingleplayermaps", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "lservercfgfile", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "lzma_persistent_buffer", "type": "cvar", "help": "If set, attempt to keep a persistent buffer for the LZMA decoder dictionary. This avoids re-allocating a ~16-64meg buffer for each operation, at the expensive of keeping extra memory around when it is not in-use.", "flags": []},
	{"name": "m_customaccel", "type": "cvar", "help": "Custom mouse acceleration:\n0: custom accelaration disabled\n1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta, m_customaccel_exponent) * m_customaccel_scale + sensitivity)\n2: Same as 1, with but x and y sensitivity are scaled by m_pitch and m_yaw respectively.\n3: mouse_acceleration = pow(raw_mouse_delta, m_customaccel_exponent - 1) * sensitivity", "flags": ["a","cl"]},
	{"name": "m_customaccel_exponent", "type": "cvar", "help": "Mouse move is raised to this power before being scaled by scale factor.", "flags": ["a","cl"]},
	{"name": "m_customaccel_max", "type": "cvar", "help": "Max mouse move scale factor, 0 for no limit", "flags": ["a","cl"]},
	{"name": "m_customaccel_scale", "type": "cvar", "help": "Custom mouse acceleration value.", "flags": ["a","cl"]},
	{"name": "m_filter", "type": "cvar", "help": "Mouse filtering (set this to 1 to average the mouse over 2 frames).", "flags": ["a","cl"]},
	{"name": "m_forward", "type": "cvar", "help": "Mouse forward factor.", "flags": ["a","cl"]},
	{"name": "m_limitedcapture_workaround", "type": "cvar", "help": "Workaround limitations on mouse capture in some environments", "flags": ["cl"]},
	{"name": "m_mouseaccel1", "type": "cvar", "help": "Windows mouse acceleration initial threshold (2x movement).", "flags": ["a","cl"]},
	{"name": "m_mouseaccel2", "type": "cvar", "help": "Windows mouse acceleration secondary threshold (4x movement).", "flags": ["a","cl"]},
	{"name": "m_mousespeed", "type": "cvar", "help": "Windows mouse acceleration (0 to disable, 1 to enable [Windows 2000: enable initial threshold], 2 to enable secondary threshold [Windows 2000 only]).", "flags": ["a","cl"]},
	{"name": "m_pitch", "type": "cvar", "help": "Mouse pitch factor.", "flags": ["a","cl"]},
	{"name": "m_pitch_inverse", "type": "cvar", "help": "Inverses (negates) mouse pitch. 0 = OFF, 1 = ON.", "flags": ["a","cl"]},
	{"name": "m_rawinput", "type": "cvar", "help": "Use Raw Input for mouse input. 0 = Disabled, 1 = Frame-aligned samples, 2 = Interpolated samples", "flags": ["a","cl"]},
	{"name": "m_side", "type": "cvar", "help": "Mouse side factor.", "flags": ["a","cl"]},
	{"name": "m_yaw", "type": "cvar", "help": "Mouse yaw factor.", "flags": ["a","cl"]},
	{"name": "map", "type": "command", "help": "Start playing on specified map.", "flags": ["norecord"]},
	{"name": "map_background", "type": "command", "help": "Runs a map as the background to the main menu.", "flags": ["norecord"]},
	{"name": "map_commentary", "type": "command", "help": "Start playing, with commentary, on a specified map.", "flags": ["norecord"]},
	{"name": "map_edit", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "map_noareas", "type": "cvar", "help": "Disable area to area connection testing.", "flags": []},
	{"name": "map_wants_save_disable", "type": "cvar", "help": "", "flags": []},
	{"name": "mapcyclefile", "type": "cvar", "help": "Name of the .txt file used to cycle the maps on multiplayer servers ", "flags": ["sv"]},
	{"name": "mapgroup", "type": "command", "help": "Specify a map group", "flags": ["norecord"]},
	{"name": "maps", "type": "command", "help": "Displays list of maps.", "flags": []},
	{"name": "mat_aaquality", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_aaquality_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "mat_aaquality_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "mat_accelerate_adjust_exposure_down", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_ambient_light_b", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_ambient_light_g", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_ambient_light_r", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_aniso_disable", "type": "cvar", "help": "NOTE: You must change mat_forceaniso after changing this convar for this to take effect", "flags": ["cheat"]},
	{"name": "mat_antialias", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_antialias_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "mat_antialias_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "mat_autoexposure_max", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_autoexposure_max_multiplier", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_autoexposure_min", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_bloom_scalefactor_scalar", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_bloomamount_rate", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_bloomscale", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_blur_b", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_blur_g", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_blur_r", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_brightness", "type": "cvar", "help": "Sets the brightness level. Values >1 increase brightness, values <1 decrease brightness.", "flags": ["a"]},
	{"name": "mat_bufferprimitives", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_bumpbasis", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_bumpmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_camerarendertargetoverlaysize", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_clipz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_colcorrection_disableentities", "type": "cvar", "help": "Disable map color-correction entities", "flags": []},
	{"name": "mat_colcorrection_editor", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_colcorrection_forceentitiesclientside", "type": "cvar", "help": "Forces color correction entities to be updated on the client", "flags": ["cheat","cl"]},
	{"name": "mat_color_projection", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "mat_colorcorrection", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mat_compressedtextures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_configcurrent", "type": "command", "help": "show the current video control panel config for the material system", "flags": []},
	{"name": "mat_crosshair", "type": "command", "help": "Display the name of the material under the crosshair", "flags": ["cheat"]},
	{"name": "mat_crosshair_edit", "type": "command", "help": "open the material under the crosshair in the editor defined by mat_crosshair_edit_editor", "flags": ["cheat"]},
	{"name": "mat_crosshair_explorer", "type": "command", "help": "open the material under the crosshair in explorer and highlight the vmt file", "flags": ["cheat"]},
	{"name": "mat_crosshair_printmaterial", "type": "command", "help": "print the material under the crosshair", "flags": ["cheat"]},
	{"name": "mat_crosshair_reloadmaterial", "type": "command", "help": "reload the material under the crosshair", "flags": ["cheat"]},
	{"name": "mat_debug_bloom", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_debug_postprocessing_effects", "type": "cvar", "help": "0 = off, 1 = show post-processing passes in quadrants of the screen, 2 = only apply post-processing to the centre of the screen", "flags": ["cheat","cl"]},
	{"name": "mat_debugalttab", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_debugdepth", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_debugdepthmode", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_debugdepthval", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_debugdepthvalmax", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_defaultlightmap", "type": "cvar", "help": "Default brightness for lightmaps where none have been created in the level.", "flags": []},
	{"name": "mat_depthbias_shadowmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_detail_tex", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_diffuse", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_disable_bloom", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mat_disable_fancy_blending", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_displacementmap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_dof_enabled", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_far_blur_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_far_blur_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_far_focus_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_max_blur_radius", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_dof_near_blur_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_near_blur_radius", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_near_focus_depth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_override", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dof_quality", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_draw_resolution", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_draw_resolution_threshold", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_drawflat", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_drawgray", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_drawTexture", "type": "cvar", "help": "Enable debug view texture", "flags": ["cl"]},
	{"name": "mat_drawTextureScale", "type": "cvar", "help": "Debug view texture scale", "flags": ["cl"]},
	{"name": "mat_drawTextureX", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_drawTextureY", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_drawTitleSafe", "type": "cvar", "help": "Enable title safe overlay", "flags": []},
	{"name": "mat_drawwater", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_dynamic_tonemapping", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "mat_dynamiclightmaps", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_dynamicPaintmaps", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_edit", "type": "command", "help": "Bring up the material under the crosshair in the editor", "flags": ["cheat"]},
	{"name": "mat_envmapsize", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_envmaptgasize", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_error_texture_advanced", "type": "cvar", "help": "Whether to try and replace error textures with more meaningful ones for gameplay.\n0 = off, default error texture\n1 = base color based on VRAD reflectivity data applied to texture specified in mat_error_texture_advanced_basetexture\n2 = same as 1 but also replace water, grates and glass with meaningful textures", "flags": ["a"]},
	{"name": "mat_error_texture_advanced_basetexture", "type": "cvar", "help": "Which texture should be used as a base for reflectivity-based error textures (see mat_error_texture_advanced).\nKeep in mind that a color value gets multiplied on top, so this should be mostly white or light gray for the best effect.\nRequires reloading the map.", "flags": ["a"]},
	{"name": "mat_error_texture_replace", "type": "cvar", "help": "Replace every non-translucent texture with error texture. Requires reloading the map.\n", "flags": []},
	{"name": "mat_error_texture_type", "type": "cvar", "help": "Error texture to use on world geometry: 0=unlit purple-black, 1=lit grey. Requires reloading the map.\n", "flags": ["a"]},
	{"name": "mat_error_texture_type_cubemap", "type": "cvar", "help": "Error texture to use on cubemaps: 0=unlit purple-black, 1=black, 2=engine/defaultcubemap.\n", "flags": ["a"]},
	{"name": "mat_exclude_async_update", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_exposure_center_region_x", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_exposure_center_region_y", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_fastclip", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_fastnobump", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_fastspecular", "type": "cvar", "help": "Enable/Disable specularity for visual testing.  Will not reload materials and will not affect perf.", "flags": []},
	{"name": "mat_fillrate", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_filterlightmaps", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_filtertextures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_flashlight_clip", "type": "cvar", "help": "Whether to clip flashlights between near/far plane\n", "flags": []},
	{"name": "mat_force_bloom", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_min_avglum", "type": "cvar", "help": "Override. Old default was 3.0", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_percent_bright_pixels", "type": "cvar", "help": "Override. Old value was 2.0", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_percent_target", "type": "cvar", "help": "Override. Old default was 60.", "flags": ["cheat","cl"]},
	{"name": "mat_force_tonemap_scale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_forceaniso", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_forceaniso_optionsui", "type": "cvar", "help": "Used to set video property from options UI.", "flags": ["cl"]},
	{"name": "mat_forceaniso_restart", "type": "cvar", "help": "Used to set video property at device reset.", "flags": ["cl"]},
	{"name": "mat_forcedynamic", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_forcehardwaresync", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_framebuffercopyoverlaysize", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_fullbright", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_fxaa_edge_sharpness_C", "type": "cvar", "help": "Does not affect PS3 which uses FXAA_CONSOLE_PS3_EDGE_SHARPNESS define due to being ALU bound (and only safe values are 2, 4, 8). On X360, (2.0 - really soft, good for vector graphics inputs), (4.0 - is softer), (8.0 - is sharper, default)", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_C", "type": "cvar", "help": "Does not affect PS3 which uses FXAA_CONSOLE_PS3_EDGE_THRESHOLD define due to being ALU bound (and only safe values are 1/4, 1/8). On X360, (0.125 - default, leaves less aliasing, but is softer, 0.25 - leaves more aliasing and is sharper)", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_min_C", "type": "cvar", "help": "Trims the algorithm from processing darks. Does not affect PS3 due to being ALU bound. (0.04 - slower and less aliasing in darks, 0.05 - default, 0.06 - faster but more aliasing in darks). Special note: when using FXAA_GREEN_AS_LUMA likely want to set this to zero", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_min_Q", "type": "cvar", "help": "Trims the algorithm from processing darks: (0.0312 - visible limit, slower), (0.0625 - high quality, faster), (0.0833 - upper limit, the start of fisible unfiltered edges). Special note: when using FXAA_GREEN_AS_LUMA, likely want to set this to zero", "flags": ["cl"]},
	{"name": "mat_fxaa_edge_threshold_Q", "type": "cvar", "help": "The minimum amount of local contrast required to apply algorithm: (0.063 - overkill, slower), (0.125 - high quality), (0.166 - default), (0.250 - low quality), (0.333 - too little, faster)", "flags": ["cl"]},
	{"name": "mat_fxaa_subpixel_C", "type": "cvar", "help": "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Console): (0.33 - sharper), (0.5 - default)", "flags": ["cl"]},
	{"name": "mat_fxaa_subpixel_Q", "type": "cvar", "help": "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Quality): (0.0 - off), (1.0 - upper limit, softer), default = 0.75", "flags": ["cl"]},
	{"name": "mat_grain_enable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_hdr_enabled", "type": "command", "help": "Report if HDR is enabled for debugging", "flags": []},
	{"name": "mat_hdr_level", "type": "cvar", "help": "Set to 0 for no HDR, 1 for LDR+bloom on HDR maps, and 2 for full HDR on HDR maps.", "flags": []},
	{"name": "mat_hdr_uncapexposure", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_hsv", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_hwmorph_min_flex_count", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_info", "type": "command", "help": "Shows material system info", "flags": []},
	{"name": "mat_leafvis", "type": "cvar", "help": "Draw wireframe of: [0] nothing, [1] current leaf, [2] entire vis cluster, or [3] entire PVS (see mat_leafvis_draw_mask for what does/doesn't get drawn)", "flags": ["cheat"]},
	{"name": "mat_leafvis_draw_mask", "type": "cvar", "help": "A bitfield which affects leaf visibility debug rendering.  -1: show all, bit 0: render PVS-visible leafs, bit 1: render PVS- and frustum-visible leafs, bit 2: render frustum bounds, bit 3: render leaves out of PVS.", "flags": []},
	{"name": "mat_leafvis_freeze", "type": "cvar", "help": "If set to 1, uses the last known leaf visibility data for visualization.  If set to 0, updates based on camera movement.", "flags": []},
	{"name": "mat_leafvis_update_every_frame", "type": "cvar", "help": "Updates leafvis debug render every frame (expensive)", "flags": []},
	{"name": "mat_levelflush", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_lightmap_pfms", "type": "cvar", "help": "Outputs .pfm files containing lightmap data for each lightmap page when a level exits.", "flags": []},
	{"name": "mat_loadtextures", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_edge_scale_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_midtone_mask_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_scale_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_vignette_end_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_local_contrast_vignette_start_override", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_lpreview_mode", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_luxels", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_max_worldmesh_vertices", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_maxframelatency", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_measurefillrate", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_mipmaptextures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_morphstats", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_motion_blur_enabled", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_motion_blur_falling_intensity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_falling_max", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_falling_min", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_forward_enabled", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_percent_of_screen_max", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_motion_blur_roll_intensity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_rotation_intensity", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_motion_blur_strength", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_norendering", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_normalmaps", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_normals", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_object_motion_blur_enable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_object_motion_blur_model_scale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_paint_enabled", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_parallaxmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_pbr_parallax_dither_amount", "type": "cvar", "help": "The level to which pbr parallax dithering can increase steps. Higher numbers are more performance-heavy.", "flags": []},
	{"name": "mat_pbr_parallaxmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_pbr_parallaxmap_quality", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_phong", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_picmip", "type": "cvar", "help": "Texture detail setting, the lower the number the higher the quality", "flags": []},
	{"name": "mat_postprocess_enable", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_postprocess_x", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_postprocess_y", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_powersavingsmode", "type": "cvar", "help": "Power Savings Mode", "flags": ["a"]},
	{"name": "mat_preview", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_print_top_model_vert_counts", "type": "cvar", "help": "Constantly print to screen the top N models as measured by total faces rendered this frame", "flags": []},
	{"name": "mat_processtoolvars", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_proxy", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_queue_mode", "type": "cvar", "help": "The queue/thread mode the material system should use: -1=default, 0=synchronous single thread, 1=queued single thread, 2=queued multithreaded", "flags": []},
	{"name": "mat_queue_priority", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_queue_report", "type": "cvar", "help": "Report thread stalls.  Positive number will filter by stalls >= time in ms.  -1 reports all locks.", "flags": ["a"]},
	{"name": "mat_reducefillrate", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_reduceparticles", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_reloadallmaterials", "type": "command", "help": "Reloads all materials", "flags": ["cheat"]},
	{"name": "mat_reloadmaterial", "type": "command", "help": "Reloads a single material", "flags": ["cheat"]},
	{"name": "mat_reloadtextures", "type": "command", "help": "Reloads all textures", "flags": ["cheat"]},
	{"name": "mat_rendered_faces_count", "type": "cvar", "help": "Set to N to count how many faces each model draws each frame and spew the top N offenders from the last 150 frames (use 'mat_rendered_faces_spew' to spew all models rendered in the current frame)", "flags": ["cheat"]},
	{"name": "mat_rendered_faces_spew", "type": "command", "help": "'mat_rendered_faces_spew <n>' Spew the number of faces rendered for the top N models used this frame (mat_rendered_faces_count must be set to use this)", "flags": []},
	{"name": "mat_report_queue_status", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_reporthwmorphmemory", "type": "command", "help": "Reports the amount of size in bytes taken up by hardware morph textures.", "flags": ["cheat"]},
	{"name": "mat_resolveFullFrameDepth", "type": "cvar", "help": "Enable depth resolve to a texture. 0=disable, 1=enable via resolve tricks if supported in hw, otherwise disable, 2=force extra depth only pass", "flags": ["cheat"]},
	{"name": "mat_reversedepth", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_savechanges", "type": "command", "help": "saves current video configuration to the registry", "flags": []},
	{"name": "mat_setvideomode", "type": "command", "help": "sets the width, height, windowed state of the material system", "flags": []},
	{"name": "mat_shadowstate", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_show_histogram", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_show_texture_memory_usage", "type": "cvar", "help": "Display the texture memory usage on the HUD.", "flags": ["cheat","numeric"]},
	{"name": "mat_showcamerarendertarget", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_showenvmapmask", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_showframebuffertexture", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_showlightmappage", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_showlowresimage", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_showmaterials", "type": "command", "help": "Show materials.", "flags": []},
	{"name": "mat_showmaterialsverbose", "type": "command", "help": "Show materials (verbose version).", "flags": []},
	{"name": "mat_showmiplevels", "type": "cvar", "help": "color-code miplevels 2: normalmaps, 1: everything else", "flags": ["cheat"]},
	{"name": "mat_showtextures", "type": "command", "help": "Show used textures.", "flags": []},
	{"name": "mat_showwatertextures", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_slopescaledepthbias_shadowmap", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_software_aa_blur_one_pixel_lines", "type": "cvar", "help": "How much software AA should blur one-pixel thick lines: (0.0 - none), (1.0 - lots)", "flags": ["cl"]},
	{"name": "mat_software_aa_debug", "type": "cvar", "help": "Software AA debug mode: (0 - off), (1 - show number of 'unlike' samples: 0->black, 1->red, 2->green, 3->blue), (2 - show anti-alias blend strength), (3 - show averaged 'unlike' colour)", "flags": ["cl"]},
	{"name": "mat_software_aa_edge_threshold", "type": "cvar", "help": "Software AA - adjusts the sensitivity of the software AA shader's edge detection (default 1.0 - a lower value will soften more edges, a higher value will soften fewer)", "flags": ["cl"]},
	{"name": "mat_software_aa_quality", "type": "cvar", "help": "Software AA quality mode: (0 - 5-tap filter), (1 - 9-tap filter)", "flags": ["cl"]},
	{"name": "mat_software_aa_strength", "type": "cvar", "help": "Software AA - perform a software anti-aliasing post-process (an alternative/supplement to MSAA). This value sets the strength of the effect: (0.0 - off), (1.0 - full)", "flags": []},
	{"name": "mat_software_aa_tap_offset", "type": "cvar", "help": "Software AA - adjusts the displacement of the taps used by the software AA shader (default 1.0 - a lower value will make the image sharper, higher will make it blurrier)", "flags": ["cl"]},
	{"name": "mat_softwarelighting", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_softwareskin", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_solidenergy_refract", "type": "cvar", "help": "Enables/disables the refraction effect in fizzlers", "flags": []},
	{"name": "mat_specular", "type": "cvar", "help": "Enable/Disable specularity for perf testing.  Will cause a material reload upon change.", "flags": []},
	{"name": "mat_spew_long_frames", "type": "cvar", "help": "warn about frames that go over 66ms for CERT purposes.", "flags": []},
	{"name": "mat_spew_on_texture_size", "type": "cvar", "help": "Print warnings about vtf content that isn't of the expected size", "flags": []},
	{"name": "mat_spewalloc", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "mat_spewvertexandpixelshaders", "type": "command", "help": "Print all vertex and pixel shaders currently loaded to the console", "flags": []},
	{"name": "mat_stub", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "mat_surfaceid", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_surfacemat", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "-mat_texture_list", "type": "command", "help": "", "flags": []},
	{"name": "+mat_texture_list", "type": "command", "help": "", "flags": []},
	{"name": "mat_texture_list", "type": "cvar", "help": "For debugging, show a list of used textures per frame", "flags": ["cheat"]},
	{"name": "mat_texture_list_all", "type": "cvar", "help": "If this is nonzero, then the texture list panel will show all currently-loaded textures.", "flags": ["numeric"]},
	{"name": "mat_texture_list_all_frames", "type": "cvar", "help": "How many frames to sample texture memory for all textures.", "flags": []},
	{"name": "mat_texture_list_exclude_editing", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_texture_list_txlod", "type": "command", "help": "Adjust LOD of the last viewed texture +1 to inc resolution, -1 to dec resolution", "flags": ["norecord"]},
	{"name": "mat_texture_list_view", "type": "cvar", "help": "If this is nonzero, then the texture list panel will render thumbnails of currently-loaded textures.", "flags": ["numeric"]},
	{"name": "mat_texture_tracking", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_texturestreaming", "type": "cvar", "help": "Defer asynchronous loading of high-resolution textures.", "flags": []},
	{"name": "mat_tonemap_algorithm", "type": "cvar", "help": "0 = Original Algorithm 1 = New Algorithm", "flags": ["cheat","cl"]},
	{"name": "mat_triplebuffered", "type": "cvar", "help": "This means we want triple buffering if we are fullscreen and vsync'd", "flags": []},
	{"name": "mat_updateconvars", "type": "command", "help": "updates the video config convars", "flags": []},
	{"name": "mat_use_compressed_hdr_textures", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_verbose_texture_gen", "type": "cvar", "help": "", "flags": []},
	{"name": "mat_viewportscale", "type": "cvar", "help": "Scale down the main viewport (to reduce GPU impact on CPU profiling)", "flags": ["cl"]},
	{"name": "mat_viewportupscale", "type": "cvar", "help": "Scale the viewport back up", "flags": ["cl"]},
	{"name": "mat_vignette_enable", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "mat_vsync", "type": "cvar", "help": "Force sync to vertical retrace", "flags": []},
	{"name": "mat_wateroverlaysize", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "mat_wireframe", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "mat_yuv", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "maxplayers", "type": "command", "help": "Change the maximum number of players allowed on this server.", "flags": []},
	{"name": "mdlcache_dump_dictionary_state", "type": "command", "help": "Dump the state of the MDLCache Dictionary.", "flags": []},
	{"name": "mem_compact", "type": "command", "help": "", "flags": []},
	{"name": "mem_dump", "type": "command", "help": "Dump memory stats to text file.", "flags": []},
	{"name": "mem_dumpstats", "type": "cvar", "help": "Dump current and max heap usage info to console at end of frame ( set to 2 for continuous output )\n", "flags": []},
	{"name": "mem_dumpvballocs", "type": "command", "help": "Dump VB memory allocation stats.", "flags": ["cheat"]},
	{"name": "mem_eat", "type": "command", "help": "", "flags": []},
	{"name": "mem_force_flush", "type": "cvar", "help": "Force cache flush of unlocked resources on every alloc", "flags": []},
	{"name": "mem_force_flush_section", "type": "cvar", "help": "Cache section to restrict mem_force_flush", "flags": []},
	{"name": "mem_incremental_compact", "type": "command", "help": "", "flags": []},
	{"name": "mem_incremental_compact_rate", "type": "cvar", "help": "Rate at which to attempt internal heap compation", "flags": ["cheat"]},
	{"name": "mem_level", "type": "cvar", "help": "Memory Level - Default: High", "flags": []},
	{"name": "mem_periodicdumps", "type": "cvar", "help": "Write periodic memstats dumps every n seconds.", "flags": []},
	{"name": "mem_test", "type": "command", "help": "", "flags": []},
	{"name": "mem_test_each_frame", "type": "cvar", "help": "Run heap check at end of every frame\n", "flags": []},
	{"name": "mem_test_quiet", "type": "cvar", "help": "Don't print stats when memtesting", "flags": []},
	{"name": "mem_vcollide", "type": "command", "help": "Dumps the memory used by vcollides", "flags": []},
	{"name": "mem_verify", "type": "command", "help": "Verify the validity of the heap", "flags": []},
	{"name": "memory", "type": "command", "help": "Print memory stats.", "flags": []},
	{"name": "miniprofiler_dump", "type": "cvar", "help": "", "flags": []},
	{"name": "minisave", "type": "command", "help": "Saves game (for current level only!)", "flags": ["norecord"]},
	{"name": "mod_check_vcollide", "type": "cvar", "help": "Check all vcollides on load", "flags": []},
	{"name": "mod_combiner_info", "type": "command", "help": "debug spew for Combiner Info", "flags": []},
	{"name": "mod_dont_load_vertices", "type": "cvar", "help": "For the dedicated server, supress loading model vertex data", "flags": []},
	{"name": "mod_forcedata", "type": "cvar", "help": "Forces all model file data into cache on model load.", "flags": []},
	{"name": "mod_forcetouchdata", "type": "cvar", "help": "Forces all model file data into cache on model load.", "flags": []},
	{"name": "mod_load_anims_async", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_load_fakestall", "type": "cvar", "help": "Forces all ANI file loading to stall for specified ms\n", "flags": []},
	{"name": "mod_load_mesh_async", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_load_preload", "type": "cvar", "help": "Indicates how far ahead in seconds to preload animations.", "flags": []},
	{"name": "mod_load_showstall", "type": "cvar", "help": "1 - show hitches , 2 - show stalls", "flags": []},
	{"name": "mod_load_vcollide_async", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_lock_mdls_on_load", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_lock_meshes_on_load", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_test_mesh_not_available", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_test_not_available", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_test_verts_not_available", "type": "cvar", "help": "", "flags": []},
	{"name": "mod_touchalldata", "type": "cvar", "help": "Touch model data during level startup", "flags": []},
	{"name": "mod_trace_load", "type": "cvar", "help": "", "flags": []},
	{"name": "mom_ahop_sound_sprint_enable", "type": "cvar", "help": "Toggles the sound made when enabling sprint. 0 = OFF, 1 = ON.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_anim_idle_foot_plant_foot_lift_delta", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "mom_anim_idle_foot_plant_max_yaw", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "mom_anim_max_body_yaw_degrees", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "mom_anim_max_body_yaw_degrees_correction_amount", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "mom_api_log_requests", "type": "cvar", "help": "If 1, API requests will be logged to console.\n", "flags": ["a","rep"]},
	{"name": "mom_api_log_requests_sensitive", "type": "cvar", "help": "If 1, API requests that are sensitive will also be logged to console.\n!!!!!!! DANGER! Only set this if you know what you are doing! This could potentially expose an API key! !!!!!!!", "flags": ["a","rep"]},
	{"name": "mom_api_url_auth", "type": "cvar", "help": "The base URL for the Auth requests.\n", "flags": ["a","rep"]},
	{"name": "mom_api_url_base", "type": "cvar", "help": "The base URL for the API requests.\n", "flags": ["a","rep"]},
	{"name": "mom_auth_reauthenticate", "type": "command", "help": "Reauthenticate with the Momentum Mod backend.\nNOTE: If using encrypted app tickets, there's a 60 second cooldown with this command!\n", "flags": []},
	{"name": "mom_auth_use_encrypted_app_tickets", "type": "cvar", "help": "Whether to use the encrypted app tickets (recommended) or the old Auth Session tickets (old API).", "flags": ["a","rep"]},
	{"name": "mom_chat_dump_to_console", "type": "cvar", "help": "Print all chat messages to console", "flags": ["a","cl"]},
	{"name": "mom_chat_spam_protection", "type": "cvar", "help": "Mute players in your lobby if they spam", "flags": ["a","cl"]},
	{"name": "mom_chat_typing_receive", "type": "cvar", "help": "Show typing status of other players in your lobby", "flags": ["a","cl"]},
	{"name": "mom_chat_typing_send", "type": "cvar", "help": "Send your typing status to players in your lobby", "flags": ["a","cl"]},
	{"name": "mom_climb_cps_next", "type": "command", "help": "Teleport to the next checkpoint, only in the Climb mode.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_climb_cps_previous", "type": "command", "help": "Teleport to the previous checkpoint, only in the Climb mode.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_climb_cps_set", "type": "command", "help": "Set a checkpoint, only in the Climb mode.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_climb_cps_teleport", "type": "command", "help": "Teleport to the current checkpoint, only in the Climb mode.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_conc_bloat_bounds", "type": "cvar", "help": "Concussion grenade bounding box size, in units.\n", "flags": ["sv","cheat","rep"]},
	{"name": "mom_conc_debug_show_radius", "type": "cvar", "help": "Show conc explosion radius (for debugging).\n", "flags": ["rep","cl"]},
	{"name": "mom_conc_particle_explosion_enable", "type": "cvar", "help": "Toggles the particles for conc explosions. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_conc_particle_trail_enable", "type": "cvar", "help": "Toggle whether the conc grenade has a trail particle or not. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_setting_elasticity", "type": "cvar", "help": "Change the conc elasticity.\n", "flags": ["sv","cheat","rep"]},
	{"name": "mom_conc_setting_friction", "type": "cvar", "help": "Change the conc friction.\n", "flags": ["sv","cheat","rep"]},
	{"name": "mom_conc_setting_gravity", "type": "cvar", "help": "Change the conc gravity.\n", "flags": ["sv","cheat","rep"]},
	{"name": "mom_conc_sound_bounce_delay", "type": "cvar", "help": "Control the minimum time in seconds between a conc grenade's bounce sounds.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_sound_bounce_enable", "type": "cvar", "help": "Toggle whether the conc makes a sound when it bounces. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_sound_bounce_min_dist", "type": "cvar", "help": "Control the minimum distance in units that a conc must be from its previous bounce location to trigger a bounce sound.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_sound_bounce_min_speed", "type": "cvar", "help": "Control the minimum speed a conc must be traveling to trigger a bounce sound.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_sound_explosion_enable", "type": "cvar", "help": "Toggles the conc explosion sound. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_conc_sound_fizzle_enable", "type": "cvar", "help": "Toggle whether the conc makes a sound when it fizzles. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_sound_timer_enable", "type": "cvar", "help": "Toggles the conc timer sound. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_conc_timer_hh_length", "type": "cvar", "help": "Control how long the conc grenade handheld timer is in seconds.\n", "flags": ["cheat","rep","cl"]},
	{"name": "mom_conc_timer_prime_length", "type": "cvar", "help": "Sets how long the conc has to prime (in seconds) before it is thrown.", "flags": ["cheat","rep","cl"]},
	{"name": "mom_conc_timer_thrown_length", "type": "cvar", "help": "Control how long the thrown conc grenade timer is in seconds.\n", "flags": ["cheat","rep","cl"]},
	{"name": "mom_damage_boost_factor", "type": "cvar", "help": "Amount to increase knockback when the player has damage boost", "flags": ["sv","cheat","rep"]},
	{"name": "mom_df_autoswitch", "type": "cvar", "help": "Enable autoswitch in Defrag. 0 = off, 1 = always switch, 2 = only switch on new weapons.", "flags": ["a","sv"]},
	{"name": "mom_df_cpm_rocket_method", "type": "cvar", "help": "Method used to calculate CPM horizontal rocket knockback. 0 = dot product, 1 = threshold.", "flags": ["sv","cheat","rep"]},
	{"name": "mom_df_cpm_rocket_thresh", "type": "cvar", "help": "Threshold to use for CPM horizontal rocket knockback.", "flags": ["sv","cheat","rep"]},
	{"name": "mom_df_decals_enable", "type": "cvar", "help": "Toggles creating decals on defrag projectile explosion. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_df_decals_fade", "type": "cvar", "help": "Toggles whether decals from defrag projectile explosions will fade. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_df_hud_accel_dz_color", "type": "cvar", "help": "No-accel zone color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_enable", "type": "cvar", "help": "Display accel zones on strafe hud. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_fast_color", "type": "cvar", "help": "Full-accel zone color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_height", "type": "cvar", "help": "Height of accel zones in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_min_speed", "type": "cvar", "help": "Minimum speed required to draw accel zones.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_mirror_border", "type": "cvar", "help": "Mirrored-input accel zone border thickness in pixels.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_mirror_enable", "type": "cvar", "help": "Display accel zones for mirrored inputs. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_offset", "type": "cvar", "help": "Vertical offset from center screen in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_scale_enable", "type": "cvar", "help": "Scale accel zones by current movement input scale. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_slow_color", "type": "cvar", "help": "Partial-accel zone color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_accel_turn_color", "type": "cvar", "help": "Turn zone color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_arrow_size", "type": "cvar", "help": "Compass arrow half-height in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_color", "type": "cvar", "help": "Pitch and yaw helper color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_hl_color", "type": "cvar", "help": "Pitch and yaw helper highlight color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_mode", "type": "cvar", "help": "Display compass information. 0 = OFF, 1 = Show arrow, 2 = Show ticks, 3 = Show both\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_offset", "type": "cvar", "help": "Compass vertical offset from center screen in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_stat_mode", "type": "cvar", "help": "Display compass angle information. 0 = OFF, 1 = Show pitch, 2 = Show yaw, 3 = Show both\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_compass_tick_size", "type": "cvar", "help": "Compass tick size in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_fov_override", "type": "cvar", "help": "FOV override for Defrag HUD\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_fov_override_enable", "type": "cvar", "help": "Toggles overriding the viewport FOV for the Defrag HUD. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_gb_crash_hl_enable", "type": "cvar", "help": "Differentiate crash landing with meter color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_gb_enable", "type": "cvar", "help": "Display groundboost indicator.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_gb_overshoot_enable", "type": "cvar", "help": "Display groundboost overshoot time.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_gb_text_color_mode", "type": "cvar", "help": "Colorize groundboost label. 0 = no color, 1 = remaining time, 2 = speed change.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_gb_text_mode", "type": "cvar", "help": "Display groundboost label. 0 = hide text, 1 = remaining time, 2 = speed change.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_jump_enable", "type": "cvar", "help": "Toggles displaying the visual jump bar for Defrag.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_df_hud_jump_max_delay", "type": "cvar", "help": "Maximum time in ms for comparing jump press overshoot/undershoot", "flags": ["a","cl"]},
	{"name": "mom_df_hud_jump_text_enable", "type": "cvar", "help": "Toggles displaying delay values in ms.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_df_hud_pitch_enable", "type": "cvar", "help": "Display pitch target line.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_pitch_offset", "type": "cvar", "help": "Pitch line horizontal offset from center screen in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_pitch_target", "type": "cvar", "help": "Pitch line target angle(s). 71.8 default for df plasma climbing.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_pitch_width", "type": "cvar", "help": "Pitch line width in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_alt_color", "type": "cvar", "help": "Prime sight inactive alt color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_arrow_color", "type": "cvar", "help": "Prime sight arrow color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_arrow_enable", "type": "cvar", "help": "Toggles showing the prime sight arrow. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_arrow_size", "type": "cvar", "help": "Prime sight arrow half-height in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_colorgain_enable", "type": "cvar", "help": "Color prime zones by gain potential. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_enable", "type": "cvar", "help": "Toggles showing prime sight HUD. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_gain_color", "type": "cvar", "help": "Prime sight active gain color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_height", "type": "cvar", "help": "Height of accel zones in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_heightgain_enable", "type": "cvar", "help": "Scale prime zones by gain potential. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_hl_border", "type": "cvar", "help": "Prime sight highlight zone border thickness in pixels.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_hl_color", "type": "cvar", "help": "Prime sight highlight border color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_hl_enable", "type": "cvar", "help": "Toggles highlighting the active prime sight zone. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_inactive_enable", "type": "cvar", "help": "Show inactive diagonal strafe prime zones. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_loss_color", "type": "cvar", "help": "Prime sight active loss color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_min_speed", "type": "cvar", "help": "Minimum speed required to draw accel zones.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_offset", "type": "cvar", "help": "Vertical offset from center screen in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_one_line_enable", "type": "cvar", "help": "Lock loss zones to same line as gain zones. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_prime_trueness_mode", "type": "cvar", "help": "Modify gain calculation by ground/air state, CPM turning, and jump/crouch state.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_projection", "type": "cvar", "help": "Projection mode for strafe hud. 0 = Perspective, 1 = Arc length, 2 = Panoramic.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_alt_color", "type": "cvar", "help": "Uncolored snap zone color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_color", "type": "cvar", "help": "Colored snap zone color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_color_mode", "type": "cvar", "help": "Color snap zones by vector length. 0 = off, 1 = colored by vector length, 2 = fade color by favorability.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_enable", "type": "cvar", "help": "Display snap zones where velocity rounding impacts speed gain. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_fast_color", "type": "cvar", "help": "Snap zone color used as maximum for color-by-gain mode.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_height", "type": "cvar", "help": "Height of snap zones in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_heightgain_enable", "type": "cvar", "help": "Size snap zones by vector length. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_hl_alt_color", "type": "cvar", "help": "Uncolored snap zone highlight color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_hl_color", "type": "cvar", "help": "Colored snap zone highlight color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_hl_mode", "type": "cvar", "help": "0 = OFF, 1 = Highlight active snap zone, 2 = Highlight target snap zones.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_min_speed", "type": "cvar", "help": "Minimum speed required to draw accel zones.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_offset", "type": "cvar", "help": "Vertical offset from center screen in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_snap_slow_color", "type": "cvar", "help": "Snap zone color used as minimum for color-by-gain mode.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_windicator_border", "type": "cvar", "help": "WIndicator zone border thickness in pixels.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_windicator_color", "type": "cvar", "help": "Windicator arrow color.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_windicator_enable", "type": "cvar", "help": "Display w-turn indicator (windicator) arrow. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_windicator_height", "type": "cvar", "help": "WIndicator zone height in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_windicator_offset", "type": "cvar", "help": "Windicator arrow vertical offset from center screen in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_hud_windicator_size", "type": "cvar", "help": "Windicator arrow half-height in pixels (scaled).\n", "flags": ["a","cl"]},
	{"name": "mom_df_knockback_method", "type": "cvar", "help": "Method used to calculate projectile knockback. 0 = fatten by 1 unit, 1 = round and fatten (Quake 3 behavior), 2 = do not fatten.", "flags": ["sv","cheat","rep"]},
	{"name": "mom_df_lg_damage", "type": "cvar", "help": "Defrag lightning gun splash damage\n", "flags": ["sv","cheat","rep"]},
	{"name": "mom_df_lg_radius", "type": "cvar", "help": "Defrag lightning gun splash radius\n", "flags": ["sv","cheat","rep"]},
	{"name": "mom_df_particle_explosion_enable", "type": "cvar", "help": "Toggles the particles for defrag explosions. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_df_particle_trail_enable", "type": "cvar", "help": "Toggles defrag projectile trail particles. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_df_projectile_drawdelay", "type": "cvar", "help": "Determines how long it takes for defrag projectiles to start being drawn after spawning.\n", "flags": ["a","cl"]},
	{"name": "mom_df_smooth_duck", "type": "cvar", "help": "Toggle whether ducking is smooth or instant in defrag. 0 = Instant, 1 = Smooth\n", "flags": ["a","rep","cl"]},
	{"name": "mom_df_sound_explosion_enable", "type": "cvar", "help": "Toggles the explosion sound for defrag weapons. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_df_sound_fizzle_enable", "type": "cvar", "help": "Toggles the defrag projectile fizzle sounds. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_df_sound_shoot_enable", "type": "cvar", "help": "Toggles the defrag weapon shooting sound on or off. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_df_sound_trail_enable", "type": "cvar", "help": "Toggles the defrag projectile sound. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_discord_enable", "type": "cvar", "help": "Toggles the Discord RPC functionality. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_enable_overlapping_keys", "type": "cvar", "help": "If enabled the game will allow you to press 2 keys at once which will null out the movement gain.\n", "flags": ["a","cl"]},
	{"name": "mom_eyetele", "type": "command", "help": "Teleports the player to the solid that they are looking at.\n", "flags": ["sv"]},
	{"name": "mom_gamemode_fallback", "type": "cvar", "help": "Sets the gamemode used as a fallback when an appropriate gamemode cannot be determined automatically. mom_gamemode_override takes precedence over this.", "flags": ["a","rep"]},
	{"name": "mom_gamemode_override", "type": "command", "help": "Forces the gamemode to the given gamemode number, ignoring the map's specified gamemode.\n\nNOTE: CHANGING THIS CVAR YOURSELF WILL NOT WORK WITH THE MAP SELECTOR!!\nFor the Map Selector, you must right click on the map in the selector, and then pick your mode from the \"Start Map In Specific Gamemode\" dropdown instead.\n", "flags": []},
	{"name": "mom_ghost_bodygroup", "type": "cvar", "help": "Appearance bodygroup (shape)\n", "flags": ["a","sv","clientcmd_can_execute"]},
	{"name": "mom_ghost_color", "type": "cvar", "help": "Set the ghost's color. Accepts RGBA color value.\n", "flags": ["a","sv","clientcmd_can_execute"]},
	{"name": "mom_ghost_online_alpha_override", "type": "cvar", "help": "Overrides ghosts alpha to be this value.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_alpha_override_enable", "type": "cvar", "help": "Toggle overriding other player's ghost alpha values to the one defined in \"mom_ghost_online_color_alpha_override\".\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_conc_alpha", "type": "cvar", "help": "Sets the ghost conc grenade alpha value. 10 = more transparent, 255 = opaque.", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_flashlights_enable", "type": "cvar", "help": "Toggles drawing other ghosts' flashlights. 0 = OFF, 1 = ON\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_interp_ticks", "type": "cvar", "help": "Interpolation ticks to add to rendering online ghosts.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_lerp", "type": "cvar", "help": "The amount of time to render in the past (in seconds).\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_rotations", "type": "cvar", "help": "Allows wonky rotations of ghosts to be set.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_sounds", "type": "cvar", "help": "Toggle other player's flashlight sounds. 0 = OFF, 1 = ON.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_sticky_alpha", "type": "cvar", "help": "Sets the ghost stickybomb alpha value. 10 = more transparent, 255 = opaque.", "flags": ["a","sv","rep"]},
	{"name": "mom_ghost_online_trail_enable", "type": "cvar", "help": "Toggles drawing other ghost's trails. 0 = OFF, 1 = ON\n", "flags": ["a","sv","rep"]},
	{"name": "mom_hud_comparisons_enable", "type": "cvar", "help": "Shows the run comparison panel. 0 = OFF, 1 = ON", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_entpanels_enable", "type": "cvar", "help": "Toggles whether concs have their fuse timer displayed above them as an ent panel.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_entpanels_fade_dist", "type": "cvar", "help": "The amount of units to linearly fade the conc ent panel over.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_entpanels_fade_enable", "type": "cvar", "help": "Toggles whether the conc ent panels fade after a certain distance.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_entpanels_fade_start", "type": "cvar", "help": "The distance (in units) at which conc ent panels start to fade.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_entpanels_label_enable", "type": "cvar", "help": "Toggles whether conc ent panels display a label with the remaining fuse timer in seconds.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_entpanels_panel_enable", "type": "cvar", "help": "Toggles whether conc ent panels display the panel with the remaining fuse timer.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_timer_countdown", "type": "cvar", "help": "Toggles whether the countdown for the conc timer is shown.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_conc_timer_enable", "type": "cvar", "help": "Toggles the conc timer on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_color", "type": "cvar", "help": "RGB color of the damage indicator.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_hud_damageindicator_enable", "type": "cvar", "help": "Enable or disable damage indicator.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_maxheight", "type": "cvar", "help": "Height of the damage indicator at maximum damage.", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_maxlifetime", "type": "cvar", "help": "How long the indicator stays on screen at maximum damage in seconds.", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_maxwidth", "type": "cvar", "help": "Width of the damage indicator at maximum damage.", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_minheight", "type": "cvar", "help": "Height of the damage indicator at minimum damage.", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_minlifetime", "type": "cvar", "help": "How long the indicator stays on screen at minimum damage in seconds.", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_minwidth", "type": "cvar", "help": "Width of the damage indicator at minimum damage.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_damageindicator_radius", "type": "cvar", "help": "How far away the damage indicators are from the crosshair.", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_avatars_enable", "type": "cvar", "help": "Enables drawing the entity Steam avatars on entity panels. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_enable", "type": "cvar", "help": "Shows all entity panels. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_fade_dist", "type": "cvar", "help": "The amount of units to linearly fade the entity panel over.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_fade_enable", "type": "cvar", "help": "Fades entity panels after a certain distance, over a certain distance. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_fade_start", "type": "cvar", "help": "The distance (in units) at which entity panels start to fade.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_names_enable", "type": "cvar", "help": "Enables drawing the entity's name on entity panels. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_ghost_entpanels_opacity", "type": "cvar", "help": "Changes the baseline opacity of the entpanel.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_distance_enable", "type": "cvar", "help": "Toggles distance stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_efficiency_enable", "type": "cvar", "help": "Toggles efficiency stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_enable", "type": "cvar", "help": "Toggles the entire jump stats panel on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_enviro_accel_enable", "type": "cvar", "help": "Toggles environmental acceleration stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_first", "type": "cvar", "help": "First jump to print jump stats.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_height_delta_enable", "type": "cvar", "help": "Toggles height delta stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_interval", "type": "cvar", "help": "Interval to update jump stats after first update.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_log", "type": "cvar", "help": "Number of stats messages to show in the jump stats panel.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_speed_delta_enable", "type": "cvar", "help": "Toggles speed delta stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_speed_gain_enable", "type": "cvar", "help": "Toggles speed gain stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_strafe_count_enable", "type": "cvar", "help": "Toggles strafe count stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_strafe_sync_enable", "type": "cvar", "help": "Toggles sync stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_takeoff_speed_enable", "type": "cvar", "help": "Toggles takeoff speed stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_takeoff_time_enable", "type": "cvar", "help": "Toggles takeoff time stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_time_delta_enable", "type": "cvar", "help": "Toggles time delta stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_jstats_yaw_ratio_enable", "type": "cvar", "help": "Toggles yaw ratio stat on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_keypress_enable", "type": "cvar", "help": "Toggles showing keypresses and strafe/jump counter\n", "flags": ["a","rep","cl"]},
	{"name": "mom_hud_layout_reload", "type": "command", "help": "Reloads the HUD layout from file. This will discard any progress made in the ingame editor!\n", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "mom_hud_mapinfo_author_enable", "type": "cvar", "help": "Toggles showing author(s) in map info on the HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_mapinfo_enable", "type": "cvar", "help": "Toggles showing map info on the HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_mapinfo_mapname_enable", "type": "cvar", "help": "Toggles showing map name in map info on the HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_mapinfo_numzones_enable", "type": "cvar", "help": "Toggles showing number of zones in map info on the HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_mapinfo_tier_enable", "type": "cvar", "help": "Toggles showing tier in map info on the HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_mapinfo_zonetype_enable", "type": "cvar", "help": "Toggles showing zone type (staged or linear) in map info on the HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_sj_chargemeter_enable", "type": "cvar", "help": "Toggles the charge meter on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_sj_chargemeter_units", "type": "cvar", "help": "If above 0, shows the speed at which a sticky will be launched when charged.\n 0 = OFF\n 1 = Speed in Hammer units (900-2400u/s)\n 2 = Speed in percent (0% = 900u/s, 100% = 2400u/s)\n", "flags": ["a","cl"]},
	{"name": "mom_hud_sj_stickycount_enable", "type": "cvar", "help": "Toggles the stickybomb counter.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_specinfo_enable", "type": "cvar", "help": "Toggles showing the spectator info HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_specinfo_names_count", "type": "cvar", "help": "Controls the max number of names to print on the spectator info HUD.\n0 = unlimited (as many as the panel can handle)\n", "flags": ["a","cl"]},
	{"name": "mom_hud_specinfo_names_enable", "type": "cvar", "help": "Toggles showing names of spectators on the spectator info HUD.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_speedometer_enable", "type": "cvar", "help": "Toggles the entire speedometer panel on or off.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_speedometer_fps", "type": "cvar", "help": "Controls the rate the axis speedometers (absolute, horizontal, vertical) update. Set to 0 for no limiting.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_speedometer_loadcfg", "type": "command", "help": "Loads the speedometer setup for the current gamemode from file.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_hud_status_enable", "type": "cvar", "help": "Toggles showing hud status. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_strafesync_colorize", "type": "cvar", "help": "Switch colorization scheme of strafesync\n0: Always keep default color\n1: Color by sync increase/decrease\n2: Color by sync percentage range", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_hud_strafesync_draw", "type": "cvar", "help": "Toggles displaying the strafesync data.\n0: Hide everything\n1: Show only when timer is running\n2: Show always (except practice mode)", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_hud_strafesync_drawbar", "type": "cvar", "help": "Toggles displaying the visual strafe sync bar.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_hud_strafesync_type", "type": "cvar", "help": "Switch type of sync being displayed.\n1: Sync1 (perfect strafe ticks / total strafe ticks)\n2: Sync2 (accel ticks / total strafe ticks)", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_hud_synchro_buffer_size", "type": "cvar", "help": "Set length of averaging window\n1 tick\n5 ticks\n10 ticks (Default)\n20 ticks", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_color_enable", "type": "cvar", "help": "Toggles fill color based on speed gain.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_dynamic_enable", "type": "cvar", "help": "Toggles dynamic direction for synchronizer feedback.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_flip_enable", "type": "cvar", "help": "Toggles direction for displaying synchronizer feedback.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_min_speed", "type": "cvar", "help": "Set minimum speed for calculating synchronizer values", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_mode", "type": "cvar", "help": "Switch visualization mode.\n0: Disabled.\n1: Half-width throttle (Default)\n2: Full-width throttle\n3: Strafe indicator\n4: Synchronizer", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_stat_color_enable", "type": "cvar", "help": "Toggles stats text color based on speed gain.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_synchro_stat_mode", "type": "cvar", "help": "Display sync stats.\n0: Disabled.\n1: Show Stats (SSJ etc.)\n2: Hide synchronizer bar", "flags": ["a","cl"]},
	{"name": "mom_hud_timer_enable", "type": "cvar", "help": "Toggles showing the hud timer. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_timer_sound_fail_enable", "type": "cvar", "help": "Toggle sound on timer fail. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_timer_sound_finish_enable", "type": "cvar", "help": "Toggle sound on timer finish. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_timer_sound_start_enable", "type": "cvar", "help": "Toggle sound on timer start. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_timer_sound_stop_enable", "type": "cvar", "help": "Toggle sound on timer stop. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_versioninfo_enable", "type": "cvar", "help": "Toggles showing the current momentum version string. 0 = OFF, 1 = ON.\n", "flags": ["a","cl"]},
	{"name": "mom_hud_weaponselection_enable", "type": "cvar", "help": "Toggles showing weapon selection HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_weaponselection_keybind_enable", "type": "cvar", "help": "Toggles showing keybinds for weapons on weapon selection HUD. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_hud_weaponselection_sound_enable", "type": "cvar", "help": "Toggles playing the weapon switch sound.\n", "flags": ["a","cl"]},
	{"name": "mom_impact_view_punch_enable", "type": "cvar", "help": "Enable view punch when impacting the ground.", "flags": ["a","sv","rep"]},
	{"name": "mom_lobby_create", "type": "command", "help": "Starts hosting a lobby\n", "flags": ["sv"]},
	{"name": "mom_lobby_debug", "type": "cvar", "help": "Toggles printing debug info about the lobby. 0 = OFF, 1 = Print information on lobby events, 2 = Print all sent/received messages, 3 = Print contents of all sent/received messages\n", "flags": ["a","sv","rep"]},
	{"name": "mom_lobby_invite", "type": "command", "help": "Invite friends to your lobby\n", "flags": ["sv"]},
	{"name": "mom_lobby_leave", "type": "command", "help": "Leave your current lobby\n", "flags": ["sv"]},
	{"name": "mom_lobby_max_players", "type": "cvar", "help": "Sets the maximum number of players allowed in lobbies you create.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_lobby_teleport", "type": "command", "help": "Teleport to a given lobby member's SteamID (exact) or name (partial) on your map.\n", "flags": ["sv"]},
	{"name": "mom_lobby_type", "type": "cvar", "help": "Sets the type of the lobby. 0 = Invite only, 1 = Friends Only, 2 = Public\n", "flags": ["a","sv","rep"]},
	{"name": "mom_map_delete_queue", "type": "cvar", "help": "If 1, maps will be queued to be deleted upon game close.\nIf 0, maps are deleted the moment they are confirmed to have been removed from library.\n", "flags": ["a","rep"]},
	{"name": "mom_map_download_cancel_confirm", "type": "cvar", "help": "If 1, a messagebox will be created to ask to confirm cancelling downloads.\n", "flags": ["a","rep"]},
	{"name": "mom_map_download_queue_parallel", "type": "cvar", "help": "The number of parallel map downloads if mom_map_download_queue is 1.\n", "flags": ["a","rep"]},
	{"name": "mom_mapcfg_add", "type": "command", "help": "Adds a command or convar to be executed on start of the map currently being played.\n", "flags": ["sv"]},
	{"name": "mom_mapcfg_clear", "type": "command", "help": "Clears the commands currently saved for the current map.\n", "flags": ["sv"]},
	{"name": "mom_mapcfg_print", "type": "command", "help": "Prints out the values currently stored for the current map.\n", "flags": ["sv"]},
	{"name": "mom_mv_ahop_s_tap_grace_ticks", "type": "cvar", "help": "Number of ticks to remember pressing +back (S-tap) when executing an ahop.", "flags": ["cheat"]},
	{"name": "mom_mv_ahop_strafe_decel_ticks_postjump", "type": "cvar", "help": "Number of ticks of full deceleration to apply when holding +strafe after jumping in ahop.", "flags": ["sv","rep"]},
	{"name": "mom_mv_ahop_strafe_decel_ticks_prejump", "type": "cvar", "help": "Number of ticks of full deceleration to apply when holding +strafe before jumping in ahop.", "flags": ["sv","rep"]},
	{"name": "mom_mv_airdecelerate", "type": "cvar", "help": "Used in place of sv_airaccelerate when wish direction differs from velocity by greater than the angle specified by mom_mv_airdecelerate_angle. Disabled if set to less than zero.", "flags": ["cheat"]},
	{"name": "mom_mv_airdecelerate_angle", "type": "cvar", "help": "Wish direction must differ from velocity by more than this many degrees to use mom_mv_airdecelerate.", "flags": ["cheat"]},
	{"name": "mom_mv_allow_autohop", "type": "cvar", "help": "Jump if the jump input is already held when landing.", "flags": ["cheat"]},
	{"name": "mom_mv_allow_mouse_strafing", "type": "cvar", "help": "Allow the mouse to move the player with +strafe.", "flags": ["cheat"]},
	{"name": "mom_mv_allow_zero_gravity", "type": "cvar", "help": "Actually allow zero gravity scale instead of falling back on normal gravity.", "flags": ["cheat"]},
	{"name": "mom_mv_bumpcount", "type": "cvar", "help": "Maximum number of sequential movement traces within one movement cycle.", "flags": ["cheat"]},
	{"name": "mom_mv_considered_on_ground", "type": "cvar", "help": "Amount of units you have to be above the ground to be considered on the ground.", "flags": ["cheat"]},
	{"name": "mom_mv_df_additive_jumps", "type": "cvar", "help": "Enables additive jumps in vintage defrag.", "flags": ["cheat"]},
	{"name": "mom_mv_df_aircontrol", "type": "cvar", "help": "Defrag CPM aircontrol multiplier.", "flags": ["cheat"]},
	{"name": "mom_mv_df_airstrafeaccelerate", "type": "cvar", "help": "Defrag CPM airstrafe acceleration for A/D movement.", "flags": ["cheat"]},
	{"name": "mom_mv_df_clip_steep_ground", "type": "cvar", "help": "Clip player velocity against steep ground in Defrag (causes sticky surf ramps).", "flags": ["cheat"]},
	{"name": "mom_mv_df_fast_rampslides", "type": "cvar", "help": "Enables fast Quake 2 style rampslides in vintage defrag.", "flags": ["cheat"]},
	{"name": "mom_mv_df_fix_overbounces", "type": "cvar", "help": "Fix overbounces in Defrag.", "flags": ["cheat"]},
	{"name": "mom_mv_df_low_jumps", "type": "cvar", "help": "Enables jumping with less than jump velocity in vintage defrag.", "flags": ["cheat"]},
	{"name": "mom_mv_df_physics", "type": "cvar", "help": "Defrag physics mode. 0 = VQ3, 1 = CPM, 2 = Vintage", "flags": ["cheat"]},
	{"name": "mom_mv_disable_surface_friction", "type": "cvar", "help": "Ignore per-material friction values.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_downhill_slopes", "type": "cvar", "help": "Remove bad RNG from hitting slopes in a downhill direction (always collide and gain horizontal speed).", "flags": ["cheat"]},
	{"name": "mom_mv_fix_duck_collision", "type": "cvar", "help": "Fixes the player bounding box being out of sync right after ducking (headbugs).", "flags": ["cheat"]},
	{"name": "mom_mv_fix_duck_key_desync", "type": "cvar", "help": "Handle desync between duck key and duck state better.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_duck_transitions", "type": "cvar", "help": "Handle duck mid-transition reversals better.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_edges", "type": "cvar", "help": "Prevents undesired edgebugs, and removes RNG from intentional edgebugs. Set to 2 to allow edgebugs in teleport triggers.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_nojump_slope_boosts", "type": "cvar", "help": "Fix generating free vertical speed when hitting slopes without pressing jump.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_slide_bugs", "type": "cvar", "help": "Recover from some movement trace errors that incorrectly stop the player.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_telehops", "type": "cvar", "help": "Restores player velocity when a collision and a teleport trigger activation occur in the same tick.", "flags": ["cheat"]},
	{"name": "mom_mv_fix_trigger_jumping", "type": "cvar", "help": "Fixes being able to jump off the ground if grounded with a trigger under the player (bounces).", "flags": ["cheat"]},
	{"name": "mom_mv_fix_unduck_instant_land", "type": "cvar", "help": "Fixes being able to unduck in the air and land on the ground without activating triggers there (duckbug or jumpbug).", "flags": ["cheat"]},
	{"name": "mom_mv_fix_uphill_slopes", "type": "cvar", "help": "Remove bad RNG from hitting slopes in an uphill direction (land instead of colliding if beneficial). Set to 2 to prefer colliding to cause a slide even if bhopping is allowed.", "flags": ["cheat"]},
	{"name": "mom_mv_jump_z_offset", "type": "cvar", "help": "Instantaneous height increase when the player jumps, when mom_mv_normalize_jump_height is enabled.", "flags": ["cheat"]},
	{"name": "mom_mv_key_movement_ignores_roll", "type": "cvar", "help": "Ignore view roll angle when calculating key influence angles. Portals that roll player may cause counter-strafing without this.", "flags": ["cheat"]},
	{"name": "mom_mv_ladder_edge_grabbing", "type": "cvar", "help": "Automatically attach to ladders when walking off an edge above them.", "flags": ["cheat"]},
	{"name": "mom_mv_limit_ground_speed", "type": "cvar", "help": "Limit speed to walking speed when on the ground.", "flags": ["cheat"]},
	{"name": "mom_mv_limit_jump_speed", "type": "cvar", "help": "Limit speed when jumping based on walking speed and mom_mv_limit_jump_speed_factor.", "flags": ["cheat"]},
	{"name": "mom_mv_limit_jump_speed_factor", "type": "cvar", "help": "When mom_mv_limit_jump_speed is enabled, limit jump speed to walking speed muliplied by this factor. The same limit is used for trigger_momentum_limitmovement's bhop prevention option.", "flags": ["cheat"]},
	{"name": "mom_mv_normal_accel_moving_up", "type": "cvar", "help": "Keep airacceleration cap the same at all times in the air. Without this, the cap is only 25% of normal when moving upward slowly.", "flags": ["cheat"]},
	{"name": "mom_mv_normalize_jump_height", "type": "cvar", "help": "Fixes subtle variations in jump height.", "flags": ["cheat"]},
	{"name": "mom_mv_slide_bug_retrace_offset", "type": "cvar", "help": "Offset distance when retracing to recover from collision bugs, when mom_mv_fix_slide_bugs is enabled.", "flags": ["cheat"]},
	{"name": "mom_mv_slide_stepsize", "type": "cvar", "help": "How far to look below the player for the func_slide entity the player was on when trying to keep the player on it.", "flags": ["cheat"]},
	{"name": "mom_mv_snap_to_ground", "type": "cvar", "help": "Move the player to exactly ground level when considered standing on the ground.", "flags": ["cheat"]},
	{"name": "mom_mv_stamina_enabled", "type": "cvar", "help": "Enables stamina movement penalty.", "flags": ["cheat"]},
	{"name": "mom_mv_tf_flat_sharking", "type": "cvar", "help": "Remove water bobbing in TF2 based modes.", "flags": ["cheat"]},
	{"name": "mom_mv_tf_shark_vertical_speed", "type": "cvar", "help": "Extra speed to add to explosive jumps while sharking", "flags": ["cheat"]},
	{"name": "mom_paint_apply_sound", "type": "cvar", "help": "Toggles the applying paint noise. 0 = OFF, 1 = ON\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_paint_color", "type": "cvar", "help": "Color of the paint decal", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_paint_color_from_normal", "type": "cvar", "help": "Use the normal of the underlying geometry to choose the paint color", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_paint_limit_to_world", "type": "cvar", "help": "Limits applying paint decals to only world geometry. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_paint_scale", "type": "cvar", "help": "Scale the size of the paint decal\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_play_jump_sound", "type": "cvar", "help": "Play a sound every time the player jumps. 0 = OFF, 1 = ON\n", "flags": ["sv","rep"]},
	{"name": "mom_play_land_sound", "type": "cvar", "help": "Play a sound every time the player lands. 0 = OFF, 1 = ON\n", "flags": ["sv","rep"]},
	{"name": "mom_player_model_new", "type": "cvar", "help": "Use the new player model", "flags": ["a","sv"]},
	{"name": "mom_player_weapon_spawn_desirability", "type": "cvar", "help": "Sets the weapons desirability for when the player spawns. 0 = Required weapons only, 1 = Required and recommended weapons only, 2 = All allowed weapons.\nThis has no effect on weapon-focused modes like RJ, SJ, Conc, and Defrag, and cannot be changed while the timer is running.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_practice", "type": "command", "help": "Toggle. Allows player to fly around in noclip during a run, teleports the player back upon untoggling.\nOnly activates when player is not pressing any movement inputs if the timer is running and mom_practice_safeguard is 1.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_practice_warning_enable", "type": "cvar", "help": "Toggles the warning for enabling practice mode during a run. 0 = OFF, 1 = ON\n", "flags": ["a","sv","rep"]},
	{"name": "mom_print_modevars", "type": "command", "help": "Print variables for the current gamemode to the console.", "flags": []},
	{"name": "mom_prog_beat_stage", "type": "command", "help": "Tests the Beat Stage code.", "flags": ["sv"]},
	{"name": "mom_prog_reset", "type": "command", "help": "Resets progress", "flags": ["sv"]},
	{"name": "mom_prog_tele", "type": "command", "help": "Teleports player to the last progress trigger\n", "flags": ["sv"]},
	{"name": "mom_release_forward_on_jump", "type": "cvar", "help": "When enabled the game will auto release the forward key which is determined by movement, so it can be used on all styles except \"half\" styles e.g. HSW.\n", "flags": ["a","cl"]},
	{"name": "-mom_replay_backward", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "+mom_replay_backward", "type": "command", "help": "Play the replay backwards while the key is held down.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_debug", "type": "cvar", "help": "If 1, prints out debug info when loading replays.", "flags": ["a","cl"]},
	{"name": "-mom_replay_forward", "type": "command", "help": "", "flags": ["sv"]},
	{"name": "+mom_replay_forward", "type": "command", "help": "Play the replay forwards while the key is held down.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_goto", "type": "command", "help": "Go to a specific tick in the replay.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_goto_end", "type": "command", "help": "Go to the end of the replay.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_pause", "type": "command", "help": "Toggle pausing and playing the playback replay.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_play", "type": "command", "help": "Begins a playback of a replay in first-person mode.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_play_ghost", "type": "command", "help": "Begins playback of a replay as a ghost.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_play_loaded", "type": "command", "help": "Begins playing back a loaded replay (in first person), if there is one.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_record_start", "type": "command", "help": "Starts recording a replay. Once stopped, replay is saved to given filename in the replays/manual/ folder.", "flags": ["sv","cheat","clientcmd_can_execute"]},
	{"name": "mom_replay_record_stop", "type": "command", "help": "Stops recording a replay", "flags": ["sv","cheat","clientcmd_can_execute"]},
	{"name": "mom_replay_restart", "type": "command", "help": "Restarts the current spectated replay, if there is one.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_selection", "type": "cvar", "help": "Going forward or backward in the replayui \n", "flags": ["sv"]},
	{"name": "mom_replay_step", "type": "command", "help": "Change the current replay tick by specified amount (positive or negative)", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_stop", "type": "command", "help": "Stops playing the current replay.", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_replay_timescale", "type": "cvar", "help": "The timescale of a replay. > 1 is faster, < 1 is slower. \n", "flags": ["sv"]},
	{"name": "mom_replay_trail_enable", "type": "cvar", "help": "Paint a faint beam trail on the replay. 0 = OFF, 1 = ON\n", "flags": ["a","sv","clientcmd_can_execute"]},
	{"name": "mom_restart", "type": "command", "help": "Restarts the player to the start trigger. Optionally takes a track number to restart to (default is main track).\n", "flags": ["sv","server_can_execute","clientcmd_can_execute"]},
	{"name": "mom_restart_stage", "type": "command", "help": "Teleports the player back to the start of the current stage.\nOptionally takes a stage or stage/track arguments which teleport the player to the desired stage on the default (current) or desired track, but stops the timer.\nUsage: mom_restart_stage [stage] [track]\n", "flags": ["sv","server_can_execute","clientcmd_can_execute"]},
	{"name": "mom_rj_decals_enable", "type": "cvar", "help": "Toggles creating decals on rocket explosion. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_rj_decals_fade", "type": "cvar", "help": "Toggles whether decals from rocket explosions will fade. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_rj_fire_angle", "type": "cvar", "help": "Changes the fire angle of the rocket launcher. 0 = Center (TF2 Original), 1 = Side (TF2 Stock), 2 = Hybrid (TF2 Cow Mangler)\n", "flags": ["a","sv"]},
	{"name": "mom_rj_particle_explosion_enable", "type": "cvar", "help": "Toggles the particles for rocket explosions. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_rj_particle_trail_enable", "type": "cvar", "help": "Toggles the rocket trail particle. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_rj_rocket_drawdelay", "type": "cvar", "help": "Determines how long it takes for rockets to start being drawn after spawning.\n", "flags": ["a","cl"]},
	{"name": "mom_rj_sound_explosion_enable", "type": "cvar", "help": "Toggles the rocket explosion sound. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_rj_sound_fizzle_enable", "type": "cvar", "help": "Toggles the rocket fizzle sound. 0 = OFF, 1 = ON\n", "flags": ["a","sv","rep"]},
	{"name": "mom_rj_sound_shoot_enable", "type": "cvar", "help": "Toggles the rocket shooting sound on or off. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_rj_sound_trail_enable", "type": "cvar", "help": "Toggles the rocket trail sound. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_ruler_duration", "type": "cvar", "help": "Sets the duration of the measurement (in seconds).\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ruler_maxlength", "type": "cvar", "help": "Sets the maximum length of the measuring tool.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_ruler_width", "type": "cvar", "help": "Sets the width of the beam that connects the two endpoints.\n", "flags": ["a","sv","rep"]},
	{"name": "mom_run_safeguard_change_map", "type": "cvar", "help": "Changes the safeguard setting for preventing changing map while in a run. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_chat_open", "type": "cvar", "help": "Changes the safeguard for opening chat during a run.\n0 = OFF,\n1 = Enable when not pressing any movement keys,\n2 - Enable on double press.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_doublepress_maxtime", "type": "cvar", "help": "Controls the max amount of time (in seconds) that a double press is registered for run safeguards with the doublepress safeguard mode active.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_practicemode", "type": "cvar", "help": "Changes the safeguard for enabling practice mode during a run.\n0 = OFF,\n1 = Enable when not pressing any movement keys,\n2 - Enable on double press.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_quit_game", "type": "cvar", "help": "Changes the safeguard setting for preventing quitting the game while in a run. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_quit_map", "type": "cvar", "help": "Changes the safeguard setting for preventing quitting/disconnecting while in a run. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_restart", "type": "cvar", "help": "Changes the safeguard for restarting the map during a run.\n0 = OFF,\n1 = Enable when not pressing any movement keys,\n2 - Enable on double press.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_restart_stage", "type": "cvar", "help": "Changes the safeguard for teleporting to a stage/restarting the current stage during a run.\n0 = OFF,\n1 = Enable when not pressing any movement keys,\n2 - Enable on double press.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_saveloc_tele", "type": "cvar", "help": "Changes the safeguard for teleporting to a saved location during a run.\n0 = OFF,\n1 = Enable when not pressing any movement keys,\n2 - Enable on double press.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_run_safeguard_warning_delay", "type": "cvar", "help": "Controls the amount of time (in seconds) between warning the player that the desired command is safeguarded.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_saveloc_close", "type": "command", "help": "Closes the saveloc menu.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_create", "type": "command", "help": "Creates a saveloc that saves a player's state.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "-mom_saveloc_current", "type": "command", "help": "Teleports the player to their current saved location, and unfreezes them.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_current", "type": "command", "help": "Teleports the player to their current saved location.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "+mom_saveloc_current", "type": "command", "help": "Teleports the player to their current saved location, and freezes them.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_import", "type": "command", "help": "Imports savelocs from a previous map's block.\nUsage:\n\"mom_saveloc_import map_1\" - imports map_1's savelocs into the current map's block.\nThis command can only be used when in a map!\n", "flags": ["sv","server_can_execute","clientcmd_can_execute"]},
	{"name": "mom_saveloc_nav_first", "type": "command", "help": "Goes to the first saveloc in the list, teleporting the player to it.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_nav_goto", "type": "command", "help": "Goes to the given saveloc number in the list, teleporting the player to it.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_nav_last", "type": "command", "help": "Goes to the last saveloc in the list, teleporting the player to it.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_nav_next", "type": "command", "help": "Goes forwards through the saveloc list, while teleporting the player to each.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_nav_prev", "type": "command", "help": "Goes backwards through the saveloc list, while teleporting the player to each.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_remove_all", "type": "command", "help": "Removes all of the created savelocs for this map.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_remove_current", "type": "command", "help": "Removes the current saveloc.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_saveloc_save_between_sessions", "type": "cvar", "help": "Defines if savelocs should be saved between sessions of the same map.\n", "flags": ["a","sv"]},
	{"name": "mom_sj_decals_enable", "type": "cvar", "help": "Toggles creating decals on sticky explosion. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_sj_decals_fade", "type": "cvar", "help": "Toggles whether decals from sticky explosions will fade. 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_sj_particle_explosion_enable", "type": "cvar", "help": "Toggles the particles for sticky explosions. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_sj_particle_trail_enable", "type": "cvar", "help": "Toggles the sticky trail particle. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_sj_sound_charge_enable", "type": "cvar", "help": "Toggle the sticky launcher charging sound. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_sj_sound_detonate_fail_enable", "type": "cvar", "help": "Toggle the sticky launcher detonate fail sound. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_sj_sound_detonate_success_enable", "type": "cvar", "help": "Toggle the sticky launcher detonate success sound. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_sj_sound_explosion_enable", "type": "cvar", "help": "Toggles the sticky explosion sound. 0 = OFF, 1 = ON\n", "flags": ["a","cl"]},
	{"name": "mom_sj_sound_fizzle_enable", "type": "cvar", "help": "Toggles the stickybomb fizzle sound. 0 = OFF, 1 = ON\n", "flags": ["a","sv","rep"]},
	{"name": "mom_sj_sound_shot_charged_threshold", "type": "cvar", "help": "Sets the amount of time a sticky needs to be charged before playing a more powerful version of the sticky shot.\n", "flags": ["a","rep","cl"]},
	{"name": "mom_sj_sound_shot_enable", "type": "cvar", "help": "Toggle the sticky launcher firing sound. 0 = OFF, 1 = ON\n", "flags": ["a","rep","cl"]},
	{"name": "mom_sj_stickybomb_drawdelay", "type": "cvar", "help": "Determines how long it takes for stickies to start being drawn upon spawning.\n", "flags": ["a","cl"]},
	{"name": "mom_snd_volume_ghosts", "type": "cvar", "help": "Ghost-originated sounds volume\n", "flags": ["a","cl"]},
	{"name": "mom_spectate", "type": "command", "help": "Start spectating if there are ghosts currently being played. Valid inputs are:\n1. None (any target or roaming spec if none found)\n2. Player name (partial match)\n3. Player steam ID (exact match)\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_spectate_stop", "type": "command", "help": "Stops spectating.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_stage_mark_clear", "type": "command", "help": "Clears the current stage start location. Also accepts a stage number as parameter.\n", "flags": ["sv"]},
	{"name": "mom_start_mark_clear", "type": "command", "help": "Clears the saved start location for your current track, if there is one.\nYou may also specify the track number to clear as the parameter; \"mom_start_mark_clear 2\" clears track 2's start mark.", "flags": ["sv"]},
	{"name": "mom_start_mark_create", "type": "command", "help": "Marks a starting point inside the start or stage trigger for a more customized starting location.\nStage start marks are wiped every run, while start marks are saved.\n", "flags": ["sv"]},
	{"name": "mom_steam_rich_presence", "type": "cvar", "help": "Toggles steam rich presence, 0 = OFF, 1 = ON\n", "flags": ["a","sv"]},
	{"name": "mom_strafesync_reset", "type": "command", "help": "Reset the strafe sync. (works only when timer is disabled)\n", "flags": ["sv"]},
	{"name": "mom_teledests_color", "type": "cvar", "help": "Color of the teleport destination markings in RGBA.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_teledests_dimensions", "type": "cvar", "help": "Changes the dimensions of drawn teleport destination markings\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_teledests_draw", "type": "cvar", "help": "Toggles drawing teleport destination markings\n", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "mom_timer_stop", "type": "command", "help": "Stops the timer if it is currently running.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_trail_color", "type": "cvar", "help": "Set the player's trail color. Accepts RGBA color value.\n", "flags": ["a","sv","clientcmd_can_execute"]},
	{"name": "mom_trail_enable", "type": "cvar", "help": "Paint a faint beam trail on the player. 0 = OFF, 1 = ON\n", "flags": ["a","sv","clientcmd_can_execute"]},
	{"name": "mom_trail_length", "type": "cvar", "help": "Length of the player's trail (in seconds)\n", "flags": ["a","sv","clientcmd_can_execute"]},
	{"name": "mom_tricks_map_tele", "type": "command", "help": "Teleports to a specific map teleport.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_tricks_map_tele_create", "type": "command", "help": "Creates a map teleport, takes a name as a parameter.\n", "flags": ["sv","cheat","clientcmd_can_execute"]},
	{"name": "mom_tricks_record", "type": "command", "help": "Start recording zones to make a trick.\n", "flags": ["sv","cheat"]},
	{"name": "mom_tricks_record_stop", "type": "command", "help": "Stop recording zones and make a trick. Takes trick name as first param.\n", "flags": ["sv","cheat"]},
	{"name": "mom_tricks_tele_to_trick", "type": "command", "help": "Teleports to a given trick start zone. Takes the trick ID as the parameter.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_tricks_track_trick", "type": "command", "help": "Tracks a trick to complete, takes the trick ID as the parameter.\n", "flags": ["sv","clientcmd_can_execute"]},
	{"name": "mom_ui_time_default_precision", "type": "cvar", "help": "Default time precision for UI displaying (g:time custom dialog variable handler).", "flags": ["a","cl"]},
	{"name": "mom_ui_toasts_enable", "type": "cvar", "help": "Toggles the visibility of all Toast panels. 0 = OFF, 1 = ON.", "flags": ["a","cl"]},
	{"name": "mom_ui_toasts_log", "type": "cvar", "help": "Toggles whether to log all toast messages out to console. 0 = OFF, 1 = ON.", "flags": ["a","cl"]},
	{"name": "mom_version", "type": "command", "help": "Prints mod current installed version\n", "flags": ["cl"]},
	{"name": "mom_zone_auto_make_stage", "type": "cvar", "help": "Whether the 'auto' setting for mom_zone_type should create a stage zone or end zone (after initial start zone)", "flags": ["sv","cheat"]},
	{"name": "mom_zone_back", "type": "command", "help": "Go back a step when zone building.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_cancel", "type": "command", "help": "Cancel the building of the current zone.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_checkpoint_draw_color", "type": "cvar", "help": "Color of the checkpoint zones in RGBA.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_checkpoint_draw_mode", "type": "cvar", "help": "Changes the drawing mode for checkpoint zones.\n0 = Off; None, 1 = Outlines (Default), 2 = Outlines as overlays (see through walls), 3 = Side faces, 4 = Side faces as overlays (see through walls).\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_create", "type": "command", "help": "Create the zone.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_crosshair", "type": "cvar", "help": "Toggles the drawing of the zoning crosshair/reticle.", "flags": ["sv","cheat"]},
	{"name": "mom_zone_debug", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "mom_zone_delete", "type": "command", "help": "Delete zone types. Accepts start/stop/stage or an entity index.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_draw_alpha_override_toggle", "type": "cvar", "help": "Toggles the alpha override for drawing zone faces.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_draw_faces_alpha_override", "type": "cvar", "help": "Alpha override for drawing zone faces.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_edit", "type": "cvar", "help": "Toggle zone editing.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_edit_existing", "type": "command", "help": "Edit an existing zone. Requires entity index.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_end_draw_color", "type": "cvar", "help": "Color of the end zones in RGBA.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_end_draw_mode", "type": "cvar", "help": "Changes the drawing mode for end zones.\n0 = Off; None, 1 = Outlines (Default), 2 = Outlines as overlays (see through walls), 3 = Side faces, 4 = Side faces as overlays (see through walls).\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_generate", "type": "command", "help": "Generates the .zon file for map zones.", "flags": ["sv","cheat"]},
	{"name": "mom_zone_grid", "type": "cvar", "help": "Set grid size. 0 to disable.", "flags": ["sv","cheat"]},
	{"name": "mom_zone_ignorewarning", "type": "cvar", "help": "Lets you create zones despite map already having start and end.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_mark", "type": "command", "help": "Starts building a zone.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_outline_subdiv_count", "type": "cvar", "help": "Controls how many sides does each 3D zone line have.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_outline_thickness", "type": "cvar", "help": "Controls thickness of zone outlines.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_showmenu", "type": "command", "help": "Shows zoning menu", "flags": ["cheat","cl"]},
	{"name": "mom_zone_stage_draw_color", "type": "cvar", "help": "Color of the stage zones in RGBA.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_stage_draw_mode", "type": "cvar", "help": "Changes the drawing mode for stage zones.\n0 = Off; None, 1 = Outlines (Default), 2 = Outlines as overlays (see through walls), 3 = Side faces, 4 = Side faces as overlays (see through walls).\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_start_draw_color", "type": "cvar", "help": "Color of the start zones in RGBA.\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_start_draw_mode", "type": "cvar", "help": "Changes the drawing mode for start zones.\n0 = Off; None, 1 = Outlines (Default), 2 = Outlines as overlays (see through walls), 3 = Side faces, 4 = Side faces as overlays (see through walls).\n", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "mom_zone_start_limitspdmethod", "type": "cvar", "help": "0 = Take into account player z-velocity, 1 = Ignore z-velocity.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_start_maxleavespeed", "type": "cvar", "help": "Max leave speed for the start trigger. 0 to disable.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_start_setlook", "type": "command", "help": "Sets start zone teleport look angles. Will take yaw in degrees or use your angles if no arguments given.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_track", "type": "cvar", "help": "What track to create the zone for. 0 = main track, >0 = bonus\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_type", "type": "cvar", "help": "The zone type that will be created when using mom_zone_mark/create. 'auto' creates a start zone unless one already exists, in which case an end zone is created.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_usenewmethod", "type": "cvar", "help": "If 1, use a new point-based zoning method (by Mehis).\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_zonenum", "type": "cvar", "help": "Sets the zone number. Use 0 to automatically determine one, otherwise start from 2!\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_zoomin", "type": "command", "help": "Decrease reticle maximum distance.\n", "flags": ["sv","cheat"]},
	{"name": "mom_zone_zoomout", "type": "command", "help": "Increase reticle maximum distance.\n", "flags": ["sv","cheat"]},
	{"name": "morph_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "morph_path", "type": "cvar", "help": "", "flags": []},
	{"name": "mortar_visualize", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "motdfile", "type": "cvar", "help": "The MOTD file to load.", "flags": ["sv"]},
	{"name": "-movedown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+movedown", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+moveleft", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-moveleft", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+moveright", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-moveright", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-moveup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+moveup", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "mp_allowNPCs", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_allowspectators", "type": "cvar", "help": "toggles whether the server allows spectator mode or not", "flags": ["rep","cl"]},
	{"name": "mp_autocrosshair", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_buy_anywhere", "type": "cvar", "help": "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.", "flags": ["nf","rep","cl"]},
	{"name": "mp_buy_during_immunity", "type": "cvar", "help": "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.", "flags": ["nf","rep","cl"]},
	{"name": "mp_defaultteam", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "mp_disable_autokick", "type": "command", "help": "Prevents a userid from being auto-kicked", "flags": ["sv"]},
	{"name": "mp_fadetoblack", "type": "cvar", "help": "fade a player's screen to black when he dies", "flags": ["nf","rep","cl"]},
	{"name": "mp_falldamage", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_flashlight", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_footsteps", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_forcecamera", "type": "cvar", "help": "Restricts spectator modes for dead players. 0 = Any team. 1 = Only own team. 2 = No one; fade to black on death (previously mp_fadetoblack).", "flags": ["rep","cl"]},
	{"name": "mp_forcerespawn", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_fraglimit", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_friendlyfire", "type": "cvar", "help": "Allows team members to injure other members of their team", "flags": ["nf","rep","cl"]},
	{"name": "mp_radar_showall", "type": "cvar", "help": "Determines who should see all. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.", "flags": ["rep","cl"]},
	{"name": "mp_suicide_time", "type": "cvar", "help": "Specifies number of seconds required to wait before another suicide.", "flags": ["sv","cheat","rep"]},
	{"name": "mp_teamlist", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_teammates_are_enemies", "type": "cvar", "help": "When set, your teammates act as enemies and all players are valid targets.", "flags": ["nf","rep","cl"]},
	{"name": "mp_teamoverride", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "mp_teamplay", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "mp_usehwmmodels", "type": "cvar", "help": "Enable the use of the hw morph models. (-1 = never, 1 = always, 0 = based upon GPU)", "flags": ["cl"]},
	{"name": "mp_usehwmvcds", "type": "cvar", "help": "Enable the use of the hw morph vcd(s). (-1 = never, 1 = always, 0 = based upon GPU)", "flags": ["cl"]},
	{"name": "mp_weaponstay", "type": "cvar", "help": "", "flags": ["sv","nf"]},
	{"name": "multvar", "type": "command", "help": "Multiply specified convar value.", "flags": ["norecord"]},
	{"name": "muzzleflash_light", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "name", "type": "cvar", "help": "Current user name", "flags": ["a","user","print","server_can_execute","ss"]},
	{"name": "net_chan_limit_msec", "type": "cvar", "help": "Netchannel processing is limited to so many milliseconds, abort connection if exceeding budget", "flags": []},
	{"name": "net_chan_stats_dump", "type": "cvar", "help": "Netchannel statistics will dump in the logs upon request", "flags": []},
	{"name": "net_chan_stats_dump_top_msgs", "type": "cvar", "help": "Netchannel statistics will dump so many top messages in each category", "flags": []},
	{"name": "net_chan_stats_lru", "type": "cvar", "help": "Netchannel statistics LRU accumulation buffer size", "flags": []},
	{"name": "net_channels", "type": "command", "help": "Shows net channel info", "flags": []},
	{"name": "net_compressvoice", "type": "cvar", "help": "Attempt to compress out of band voice payloads (360 only).", "flags": []},
	{"name": "net_connections_stats", "type": "command", "help": "Print detailed network statistics for each network connection", "flags": []},
	{"name": "net_drawslider", "type": "cvar", "help": "Draw completion slider during signon", "flags": []},
	{"name": "net_droponsendoverflow", "type": "cvar", "help": "If enabled, channel will drop client when sending too much data causes buffer overrun", "flags": []},
	{"name": "net_dumpeventstats", "type": "command", "help": "Dumps out a report of game event network usage", "flags": ["cheat"]},
	{"name": "net_earliertempents", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "net_graph", "type": "cvar", "help": "Draw the network usage data, = 2 prints in/out data, = 3 draws data on payload,", "flags": ["a","cl"]},
	{"name": "net_graphheight", "type": "cvar", "help": "Height of netgraph panel", "flags": ["a","cl"]},
	{"name": "net_graphholdsvframerate", "type": "cvar", "help": "Hold worst case in server framerate line.", "flags": ["a","cl"]},
	{"name": "net_graphipc", "type": "cvar", "help": "Show IPCs on netgraph panel", "flags": ["a","cl"]},
	{"name": "net_graphmsecs", "type": "cvar", "help": "The latency graph represents this many milliseconds.", "flags": ["a","cl"]},
	{"name": "net_graphpos", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "net_graphproportionalfont", "type": "cvar", "help": "Determines whether netgraph font is proportional or not", "flags": ["a","cl"]},
	{"name": "net_graphshowinterp", "type": "cvar", "help": "Draw the interpolation graph.", "flags": ["a","cl"]},
	{"name": "net_graphshowlatency", "type": "cvar", "help": "Draw the ping/packet loss graph.", "flags": ["a","cl"]},
	{"name": "net_graphshowsvframerate", "type": "cvar", "help": "Draw the server framerate graph.", "flags": ["a","cl"]},
	{"name": "net_graphsolid", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "net_graphtext", "type": "cvar", "help": "Draw text fields", "flags": ["a","cl"]},
	{"name": "net_maxcleartime", "type": "cvar", "help": "Max # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit).", "flags": []},
	{"name": "net_maxfilesize", "type": "cvar", "help": "Maximum allowed file size for uploading in MB", "flags": []},
	{"name": "net_maxfragments", "type": "cvar", "help": "Max fragment bytes per packet", "flags": []},
	{"name": "net_maxroutable", "type": "cvar", "help": "Requested max packet size before packets are 'split'.", "flags": ["a","user"]},
	{"name": "net_public_adr", "type": "cvar", "help": "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: (\"x.x.x.x\" )", "flags": []},
	{"name": "net_queue_trace", "type": "cvar", "help": "", "flags": []},
	{"name": "net_scale", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "net_showeventlisteners", "type": "cvar", "help": "Show listening addition/removals", "flags": []},
	{"name": "net_showevents", "type": "cvar", "help": "Dump game events to console (1=client only, 2=all).", "flags": []},
	{"name": "net_showreliablesounds", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "net_showsplits", "type": "cvar", "help": "Show info about packet splits", "flags": []},
	{"name": "net_showtcp", "type": "cvar", "help": "Dump TCP stream summary to console", "flags": []},
	{"name": "net_showudp", "type": "cvar", "help": "Dump UDP packets summary to console", "flags": []},
	{"name": "net_showudp_oob", "type": "cvar", "help": "Dump OOB UDP packets summary to console", "flags": []},
	{"name": "net_showudp_remoteonly", "type": "cvar", "help": "Dump non-loopback udp only", "flags": []},
	{"name": "net_showusercmd", "type": "cvar", "help": "Show user command encoding", "flags": ["cl"]},
	{"name": "net_splitrate", "type": "cvar", "help": "Number of fragments for a splitpacket that can be sent per frame", "flags": []},
	{"name": "net_start", "type": "command", "help": "Inits multiplayer network sockets", "flags": []},
	{"name": "net_status", "type": "command", "help": "Shows current network status", "flags": []},
	{"name": "net_steamcnx_allowrelay", "type": "cvar", "help": "Allow steam connections to attempt to use relay servers as fallback (best if specified on command line:  +net_steamcnx_allowrelay 1)", "flags": ["a"]},
	{"name": "net_steamcnx_debug", "type": "cvar", "help": "Show debug spew for steam based connections, 2 shows all network traffic for steam sockets.", "flags": []},
	{"name": "net_steamcnx_enabled", "type": "cvar", "help": "Use steam connections on listen server as a fallback, 2 forces use of steam connections instead of raw UDP.", "flags": []},
	{"name": "net_steamcnx_status", "type": "command", "help": "Print status of steam connection sockets.", "flags": []},
	{"name": "net_threaded_socket_burst_cap", "type": "cvar", "help": "Max number of packets per burst beyond which threaded socket pump algorithm will start dropping packets.", "flags": []},
	{"name": "net_threaded_socket_recovery_rate", "type": "cvar", "help": "Number of packets per second that threaded socket pump algorithm allows from client.", "flags": []},
	{"name": "net_threaded_socket_recovery_time", "type": "cvar", "help": "Number of seconds over which the threaded socket pump algorithm will fully recover client ratelimit.", "flags": []},
	{"name": "net_usesocketsforloopback", "type": "cvar", "help": "Use network sockets layer even for listen server local player's packets (multiplayer only).", "flags": []},
	{"name": "net_warningthrottle", "type": "cvar", "help": "Network warning throttling to specified Hz rate", "flags": []},
	{"name": "next", "type": "cvar", "help": "Set to 1 to advance to next frame ( when singlestep == 1 )", "flags": ["cheat"]},
	{"name": "nextdemo", "type": "command", "help": "Play next demo in sequence.", "flags": ["norecord"]},
	{"name": "noclip", "type": "command", "help": "Toggle. Player becomes non-solid and flies. Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "noclip_fixup", "type": "cvar", "help": "Toggles whether to try to push the player in bounds after leaving noclip", "flags": ["sv","cheat"]},
	{"name": "notarget", "type": "command", "help": "Toggle. Player becomes hidden to NPCs. Optional argument of 0 or 1 to force enable/disable", "flags": ["sv","cheat"]},
	{"name": "npc_height_adjust", "type": "cvar", "help": "Enable test mode for ik height adjustment", "flags": ["a","sv"]},
	{"name": "npc_vphysics", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "occlusion_old", "type": "cvar", "help": "", "flags": []},
	{"name": "occlusion_stats", "type": "command", "help": "Occlusion statistics; [-jitter] [-reset]", "flags": []},
	{"name": "occlusion_test_async", "type": "cvar", "help": "Enable asynchronous occlusion test in another thread; may save some server tick time at the cost of synchronization overhead with the async occlusion query thread", "flags": []},
	{"name": "occlusion_test_async_jitter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "occlusion_test_async_move_tolerance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "occlusion_test_camera_margins", "type": "cvar", "help": "Amount by which the camera (viewer's eye) is expanded for occlusion test. This should be large enough to accommodate eye's movement within a frame or two", "flags": ["sv"]},
	{"name": "occlusion_test_jump_margin", "type": "cvar", "help": "Amount by which the player bounding box is expanded up for occlusion test to account for jumping. This margin should be large enough to accommodate player movement within a frame or two. Affects both camera box and player box.", "flags": []},
	{"name": "occlusion_test_margins", "type": "cvar", "help": "Amount by which the player bounding box is expanded for occlusion test. This margin should be large enough to accommodate player movement within a frame or two, and the longest weapon they might hold. Shadow does not take this into account.", "flags": []},
	{"name": "occlusion_test_shadow_length", "type": "cvar", "help": "Max length of completely occluded shadow to consider a player for occlusion test. If shadow provably stops at this distance, the player may be considered for occlusion test. For longer shadows, we just don't do occlusion because we are not likely to find full occlusion when one of the boxes is expanded too much.", "flags": ["sv"]},
	{"name": "occlusion_test_shadow_max_distance", "type": "cvar", "help": "Max distance at which to consider shadows for occlusion computations", "flags": []},
	{"name": "old_radiusdamage", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "option_duck_method", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "option_speed_method", "type": "cvar", "help": "", "flags": ["a","cl","ss"]},
	{"name": "packed_files_list", "type": "command", "help": "List all files packed into the current BSP. First argument is an optional filter wildcard", "flags": []},
	{"name": "-paint", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+paint", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "paintsplat_bias", "type": "cvar", "help": "Change bias value for computing circle buffer", "flags": ["cheat","rep"]},
	{"name": "paintsplat_max_alpha_noise", "type": "cvar", "help": "Max noise value of circle alpha", "flags": ["cheat","rep"]},
	{"name": "paintsplat_noise_enabled", "type": "cvar", "help": "", "flags": ["cheat","rep"]},
	{"name": "panel_test_title_safe", "type": "cvar", "help": "Test vgui panel positioning with title safe indentation", "flags": ["cheat"]},
	{"name": "panorama_3dpanel_fxaa_edge_threshold_min_Q", "type": "cvar", "help": "Trims the algorithm from processing darks: (0.0312 - visible limit, slower), (0.0625 - high quality, faster), (0.0833 - upper limit, the start of visible unfiltered edges). Special note: when using FXAA_GREEN_AS_LUMA, likely want to set this to zero", "flags": ["cl"]},
	{"name": "panorama_3dpanel_fxaa_edge_threshold_Q", "type": "cvar", "help": "The minimum amount of local contrast required to apply algorithm: (0.063 - overkill, slower), (0.125 - high quality), (0.166 - default), (0.250 - low quality), (0.333 - too little, faster)", "flags": ["cl"]},
	{"name": "panorama_3dpanel_fxaa_subpixel_Q", "type": "cvar", "help": "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Quality): (0.0 - off), (1.0 - upper limit, softer), default = 0.75", "flags": ["cl"]},
	{"name": "panorama_cache_command_list_repaint_threshold", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_cache_command_list_size_threshold", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_clamp_fractional_pixel_positions", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_clear_frames_on_device_restore", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_console_api_detailed_msg", "type": "cvar", "help": "Enables if js console.* messages will be verbose.", "flags": []},
	{"name": "panorama_daisy_wheel", "type": "cvar", "help": "Daisy wheel input mode: RS | ABXY", "flags": []},
	{"name": "panorama_debug_movies", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_debug_overlay_opacity", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_height", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_width", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_xpos", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_saved_ypos", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "panorama_debugger_toggle", "type": "command", "help": "Toggles the panorama debugger on and off", "flags": []},
	{"name": "panorama_dragscroll_affordance", "type": "cvar", "help": "Minimum mouse movement in pixels before a move is treated as a drag scroll", "flags": []},
	{"name": "panorama_dragscroll_affordance_vr", "type": "cvar", "help": "Minimum mouse movement in pixels before a move is treated as a drag scroll in VR", "flags": []},
	{"name": "panorama_dragscroll_maxflickvelocity", "type": "cvar", "help": "Maximum velocity for a drag scroll flick", "flags": []},
	{"name": "panorama_dragscroll_maxflickvelocity_vr", "type": "cvar", "help": "Maximum velocity for a drag scroll flick in VR", "flags": []},
	{"name": "panorama_dragscroll_minflickvelocity", "type": "cvar", "help": "Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick", "flags": []},
	{"name": "panorama_dragscroll_minflickvelocity_vr", "type": "cvar", "help": "Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick in VR", "flags": []},
	{"name": "panorama_dragscroll_mintime", "type": "cvar", "help": "Minimum time that the mouse button must be down before a move is treated as a drag scroll", "flags": []},
	{"name": "panorama_dragscroll_mintime_vr", "type": "cvar", "help": "Minimum time that the mouse button must be down before a move is treated as a drag scroll in VR", "flags": []},
	{"name": "panorama_dragscroll_velocitymultiplier", "type": "cvar", "help": "Multiplier for flick velocity off of actual measured velocity", "flags": []},
	{"name": "panorama_dragscroll_velocitymultiplier_vr", "type": "cvar", "help": "Multiplier for flick velocity off of actual measured velocity", "flags": []},
	{"name": "panorama_dump_deny_input", "type": "command", "help": "Dumps panels currently denying all input to the game", "flags": []},
	{"name": "panorama_dump_events_backlog", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_dump_events_threshold_break", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_dump_events_threshold_us", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_ECO_mode", "type": "cvar", "help": "0 - disable, 1 - default, 2 - force always ON", "flags": []},
	{"name": "panorama_experimental_overdraw_prevention", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_fbo_alloc_batch", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_force_sort_child_ops", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_keep_panel_in_layer_cache", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_keep_text_in_font_cache", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_large_dispatch_event_queue", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_free_fbo", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_oof_overlay_up_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_max_overlay_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_min_comp_layer_cache_cost", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_model_rotate_drag", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "panorama_model_rotate_frametime_multiplier", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "panorama_model_rotate_grab_scale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "panorama_persistent_storage_dump", "type": "command", "help": "Print Panorama persistent storage KVs to console.", "flags": []},
	{"name": "panorama_persistent_storage_reload", "type": "command", "help": "Reload all Panorama persistent storage KVs from disk.", "flags": []},
	{"name": "panorama_persistent_storage_save", "type": "command", "help": "Save all Panorama persistent storage KVs to disk.", "flags": []},
	{"name": "panorama_persistent_storage_wipe", "type": "command", "help": "Remove all Panorama persistent storage KVs.", "flags": []},
	{"name": "panorama_play_movie_ambient_sound", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_print_cache_status", "type": "command", "help": "Print internal panorama refcounts for every file", "flags": []},
	{"name": "panorama_reload", "type": "command", "help": "Reloads panorama UI. Append 'force' to force the reload", "flags": []},
	{"name": "panorama_reload_animations", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_remote_debug", "type": "cvar", "help": "Enable ability to connect to process via panorama remote debugger.", "flags": []},
	{"name": "panorama_render_stats", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_render_stats_posx", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_render_stats_posy", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "panorama_render_target_cache_max_size", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_repaint_watch_id", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_show_fps", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_spew_layout_invalidates", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_suspend_paint", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_track_render_commands", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_transition_time_factor", "type": "cvar", "help": "A float representing a scale factor for transitions. 1.0 is normal, 2.0 would be twice as fast as normal, 0.5 half as fast", "flags": []},
	{"name": "panorama_volume_ambient", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_volume_effects", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_volume_master", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_volume_movies", "type": "cvar", "help": "", "flags": []},
	{"name": "panorama_vsync", "type": "cvar", "help": "", "flags": []},
	{"name": "particle_sim_alt_cores", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "particle_simulateoverflow", "type": "cvar", "help": "Used for stress-testing particle systems. Randomly denies creation of particles.", "flags": ["cheat","cl"]},
	{"name": "particle_test_attach_attachment", "type": "cvar", "help": "Attachment index for attachment mode", "flags": ["sv","cheat"]},
	{"name": "particle_test_attach_mode", "type": "cvar", "help": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'", "flags": ["sv","cheat"]},
	{"name": "particle_test_file", "type": "cvar", "help": "Name of the particle system to dynamically spawn", "flags": ["sv","cheat"]},
	{"name": "particle_test_start", "type": "command", "help": "Dispatches the test particle system with the parameters specified in particle_test_file,\n particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "particle_test_stop", "type": "command", "help": "Stops all particle systems on the selected entities.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at ", "flags": ["sv","cheat"]},
	{"name": "password", "type": "cvar", "help": "Current server access password", "flags": ["a","norecord"]},
	{"name": "path", "type": "command", "help": "Show the engine filesystem path.", "flags": []},
	{"name": "path_file", "type": "command", "help": "Show the absolute paths for a given filename, and optionally a pathid.", "flags": []},
	{"name": "perfui", "type": "command", "help": "Show/hide the level performance tools UI.", "flags": ["cheat"]},
	{"name": "perfvisualbenchmark", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "perfvisualbenchmark_abort", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "phonemedelay", "type": "cvar", "help": "Phoneme delay to account for sound system latency.", "flags": ["cl"]},
	{"name": "phonemefilter", "type": "cvar", "help": "Time duration of box filter to pass over phonemes.", "flags": ["cl"]},
	{"name": "phonemesnap", "type": "cvar", "help": "Lod at level at which visemes stops always considering two phonemes, regardless of duration.", "flags": ["cl"]},
	{"name": "phys_debug_check_contacts", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "phys_impactforcescale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_penetration_error_time", "type": "cvar", "help": "Controls the duration of vphysics penetration error boxes.", "flags": ["sv"]},
	{"name": "phys_pushscale", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "phys_show_active", "type": "cvar", "help": "Shows all active vphysics objects.\n", "flags": ["sv","cheat"]},
	{"name": "phys_show_collision", "type": "cvar", "help": "Shows all vphysics object collision as wireframes.\n", "flags": ["sv","cheat"]},
	{"name": "phys_show_shadows", "type": "cvar", "help": "Shows all vphysics object shadows.\n", "flags": ["sv","cheat"]},
	{"name": "phys_speeds", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "phys_stressbodyweights", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "phys_timescale", "type": "cvar", "help": "Scale time for physics", "flags": ["sv","cheat"]},
	{"name": "phys_upimpactforcescale", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "physics_budget", "type": "command", "help": "Times the cost of each active object", "flags": ["sv","cheat"]},
	{"name": "physics_constraints", "type": "command", "help": "Highlights constraint system graph for an entity", "flags": ["sv","cheat"]},
	{"name": "physics_debug_entity", "type": "command", "help": "Dumps debug info for an entity", "flags": ["sv","cheat"]},
	{"name": "physics_highlight_active", "type": "command", "help": "Turns on the absbox for all active physics objects", "flags": ["sv","cheat"]},
	{"name": "physics_report_active", "type": "command", "help": "Lists all active physics objects", "flags": ["sv","cheat"]},
	{"name": "physics_select", "type": "command", "help": "Dumps debug info for an entity", "flags": ["sv","cheat"]},
	{"name": "physicsshadowupdate_render", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "PhysPMC", "type": "cvar", "help": "", "flags": []},
	{"name": "picker", "type": "command", "help": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.\n\tArguments:\tfull - enables all debug information", "flags": ["sv","cheat"]},
	{"name": "ping", "type": "command", "help": "Display ping to server.", "flags": []},
	{"name": "pipeline_static_props", "type": "cvar", "help": "", "flags": []},
	{"name": "pixelvis_debug", "type": "command", "help": "Dump debug info", "flags": ["cl"]},
	{"name": "play", "type": "command", "help": "Play a sound.", "flags": ["server_can_execute"]},
	{"name": "play_distance", "type": "cvar", "help": "Set to 1:\"2 foot\" or 2:\"10 foot\" presets.", "flags": ["a","cl"]},
	{"name": "play_hrtf", "type": "command", "help": "Play a sound with HRTF spatialization.", "flags": ["server_can_execute"]},
	{"name": "playcast", "type": "command", "help": "Play a broadcast", "flags": []},
	{"name": "playdemo", "type": "command", "help": "Play a recorded demo file (.dem ).", "flags": ["norecord"]},
	{"name": "player_debug_print_damage", "type": "cvar", "help": "When true, print amount and type of all damage received by player to console.", "flags": ["sv","cheat"]},
	{"name": "player_old_armor", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "playflush", "type": "command", "help": "Play a sound, reloading from disk in case of changes.", "flags": []},
	{"name": "playgamesound", "type": "command", "help": "Play a sound from the game sounds txt file", "flags": ["cheat","server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "playsoundscape", "type": "command", "help": "Forces a soundscape to play", "flags": ["cheat"]},
	{"name": "playvol", "type": "command", "help": "Play a sound at a specified volume.", "flags": []},
	{"name": "png", "type": "command", "help": "Take a png screenshot: png [w] [h] <filename>", "flags": ["norecord"]},
	{"name": "portal_beamtrace_optimization", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_carve_vphysics_clips", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "portal_clone_displacements", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_debug", "type": "cvar", "help": "Turn on debugging for portal connections.", "flags": ["sv","cheat"]},
	{"name": "portal_demohack", "type": "cvar", "help": "Do the demo_legacy_rollback setting to help during demo playback of going through portals.", "flags": ["a","cl"]},
	{"name": "portal_draw_ghosting", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "portal_environment_radius", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_ghost_show_bbox", "type": "cvar", "help": "Render AABBs around the bounding box used for ghost renderable bounds checking (either hitbox or collision AABB)", "flags": ["cheat","rep","cl"]},
	{"name": "portal_ghost_use_network_origin", "type": "cvar", "help": "Use the network origin for determining bounds in which to ghost renderables, rather than the abs origin.", "flags": ["cl"]},
	{"name": "portal_ghosts_disable", "type": "cvar", "help": "Disables rendering of ghosted objects in portal environments", "flags": ["cl"]},
	{"name": "portal_place", "type": "command", "help": "Places a portal. Indicate the group #, then the portal #, then pos + angle", "flags": ["sv","cheat"]},
	{"name": "portal_report", "type": "command", "help": "Reports the location of all portals", "flags": ["sv","cheat"]},
	{"name": "portal_test_resting_surface_for_paint", "type": "cvar", "help": "Test if a portal is on a white painted surface and fizzle if it goes away.  Test it EVERY FRAME.", "flags": ["sv"]},
	{"name": "portal_trace_shrink_ray_each_query", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "portal_transmit_light", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "Portals_ResizeAll", "type": "command", "help": "Resizes all portals (for testing), Portals_ResizeAll [half width] [half height]", "flags": ["sv","cheat"]},
	{"name": "print_colorcorrection", "type": "command", "help": "Display the color correction layer information.", "flags": ["cheat"]},
	{"name": "progress_enable", "type": "command", "help": "", "flags": []},
	{"name": "prop_active_gib_limit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "prop_active_gib_max_fade_time", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "prop_break_disable_float", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "prop_crosshair", "type": "command", "help": "Shows name for prop looking at", "flags": ["cheat"]},
	{"name": "prop_debug", "type": "command", "help": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.", "flags": ["sv","cheat"]},
	{"name": "prop_dynamic_create", "type": "command", "help": "Creates a dynamic prop with a specific .mdl aimed away from where the player is looking.\n\tArguments: {.mdl name}", "flags": ["sv","cheat"]},
	{"name": "prop_physics_create", "type": "command", "help": "Creates a physics prop with a specific .mdl aimed away from where the player is looking.\n\tArguments: {.mdl name}", "flags": ["sv","cheat"]},
	{"name": "props_break_max_pieces", "type": "cvar", "help": "Maximum prop breakable piece count (-1 = model default)", "flags": ["rep","cl"]},
	{"name": "props_break_max_pieces_perframe", "type": "cvar", "help": "Maximum prop breakable piece count per frame (-1 = model default)", "flags": ["rep","cl"]},
	{"name": "pvs_min_player_distance", "type": "cvar", "help": "Min distance to player at which PVS is used. At closer distances, PVS assumes we can see a shadow or something else from the player, so it's safer to just always be \"Visible\"", "flags": ["sv"]},
	{"name": "quit", "type": "command", "help": "Exit the engine.", "flags": []},
	{"name": "quit_prompt", "type": "command", "help": "Exit the engine.", "flags": ["cl"]},
	{"name": "r_3dsky", "type": "cvar", "help": "Enable the rendering of 3d sky boxes", "flags": ["cl"]},
	{"name": "r_3dskyinreflection", "type": "cvar", "help": "Enable the rendering of 3d sky boxes in water reflection", "flags": ["cl"]},
	{"name": "r_alphafade_usefov", "type": "cvar", "help": "Account for FOV when computing an entity's distance-based alpha fade", "flags": ["cheat","cl"]},
	{"name": "r_ambientboost", "type": "cvar", "help": "Set to boost ambient term if it is totally swamped by local lights", "flags": []},
	{"name": "r_ambientfactor", "type": "cvar", "help": "Boost ambient cube by no more than this factor", "flags": []},
	{"name": "r_ambientfraction", "type": "cvar", "help": "Fraction of direct lighting used to boost lighting when model requests", "flags": ["cheat"]},
	{"name": "r_ambientlightingonly", "type": "cvar", "help": "Set this to 1 to light models with only ambient lighting (and no static lighting).", "flags": ["cheat"]},
	{"name": "r_ambientmin", "type": "cvar", "help": "Threshold above which ambient cube will not boost (i.e. it's already sufficiently bright", "flags": []},
	{"name": "r_aspectratio", "type": "cvar", "help": "", "flags": []},
	{"name": "r_avglight", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_avglightmap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_bloomtintb", "type": "cvar", "help": "", "flags": []},
	{"name": "r_bloomtintexponent", "type": "cvar", "help": "", "flags": []},
	{"name": "r_bloomtintg", "type": "cvar", "help": "", "flags": []},
	{"name": "r_bloomtintr", "type": "cvar", "help": "", "flags": []},
	{"name": "r_brush_queue_mode", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_buildingmapforworld", "type": "cvar", "help": "", "flags": []},
	{"name": "r_cheapwaterend", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "r_cheapwaterstart", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "r_cleardecals", "type": "command", "help": "Usage r_cleardecals <permanent>.", "flags": ["clientcmd_can_execute"]},
	{"name": "r_ClipAreaFrustums", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_ClipAreaPortals", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_colorstaticprops", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_csm_static_vb", "type": "cvar", "help": "Use a precomputed static VB for CSM rendering", "flags": []},
	{"name": "r_csm_viewmodelquality", "type": "cvar", "help": "", "flags": []},
	{"name": "r_debug_ik", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_debug_sequencesets", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_debugcheapwater", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_debugrandomstaticlighting", "type": "cvar", "help": "Set to 1 to randomize static lighting for debugging.  Must restart for change to take affect.", "flags": ["cheat"]},
	{"name": "r_decal_cover_count", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decal_overlap_area", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decal_overlap_count", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decals", "type": "cvar", "help": "", "flags": []},
	{"name": "r_decalstaticprops", "type": "cvar", "help": "Decal static props test", "flags": []},
	{"name": "r_deferopaquefastclipped", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_depthoverlay", "type": "cvar", "help": "Replaces opaque objects with their grayscaled depth values. r_showz_power scales the output.", "flags": ["cheat","cl"]},
	{"name": "r_disable_distance_fade_on_big_props", "type": "cvar", "help": "Completely disable distance fading on large props", "flags": ["cheat","cl"]},
	{"name": "r_disable_distance_fade_on_big_props_thresh", "type": "cvar", "help": "Distance prop fade disable threshold size", "flags": ["cheat","cl"]},
	{"name": "r_disable_static_prop_loading", "type": "cvar", "help": "If non-zero when a map loads, static props won't be loaded", "flags": ["cheat"]},
	{"name": "r_disable_update_shadow", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_DispBuildable", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_DispWalkable", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dlightsenable", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dopixelvisibility", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_drawallrenderables", "type": "cvar", "help": "Draw all renderables, even ones inside solid leaves.", "flags": ["cheat","cl"]},
	{"name": "r_drawbatchdecals", "type": "cvar", "help": "Render decals batched.", "flags": []},
	{"name": "r_DrawBeams", "type": "cvar", "help": "0=Off, 1=Normal, 2=Wireframe", "flags": ["cheat"]},
	{"name": "r_drawbrushmodels", "type": "cvar", "help": "Render brush models. 0=Off, 1=Normal, 2=Wireframe", "flags": []},
	{"name": "r_drawclipbrushes", "type": "cvar", "help": "Draw clip brushes (red=clip, pink=playerclip, blue=invisible, purple=npcclip, yellow=grenadeclip)", "flags": []},
	{"name": "r_drawdecals", "type": "cvar", "help": "Render decals.", "flags": []},
	{"name": "r_DrawDisp", "type": "cvar", "help": "Toggles rendering of displacment maps", "flags": []},
	{"name": "r_drawentities", "type": "cvar", "help": "", "flags": []},
	{"name": "r_drawflecks", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_drawfuncdetail", "type": "cvar", "help": "Render func_detail", "flags": ["cheat"]},
	{"name": "r_drawleaf", "type": "cvar", "help": "Draw the specified leaf.", "flags": ["cheat"]},
	{"name": "r_drawlightcache", "type": "cvar", "help": "0: off\n1: draw light cache entries\n2: draw rays\n", "flags": ["cheat"]},
	{"name": "r_drawlightinfo", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawlights", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodeldecals", "type": "cvar", "help": "", "flags": []},
	{"name": "r_DrawModelLightOrigin", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelnames", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "r_drawmodelstatsoverlay", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelstatsoverlaydistance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelstatsoverlayfilter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawmodelstatsoverlaymax", "type": "cvar", "help": "time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2", "flags": ["a"]},
	{"name": "r_drawmodelstatsoverlaymin", "type": "cvar", "help": "time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2", "flags": ["a"]},
	{"name": "r_drawopaquedetailprops", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquedetailprops_csm", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquedetailprops_reflect", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquedetailprops_refract", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaquerenderables", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawopaqueworld", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawothermodels", "type": "cvar", "help": "0=Off, 1=Normal, 2=Wireframe", "flags": ["cl"]},
	{"name": "r_drawpanorama", "type": "cvar", "help": "Enable the rendering of panorama UI", "flags": ["cheat"]},
	{"name": "r_drawparticles", "type": "cvar", "help": "Enable/disable particle rendering", "flags": ["cl"]},
	{"name": "r_drawpixelvisibility", "type": "cvar", "help": "Show the occlusion proxies", "flags": ["cl"]},
	{"name": "r_drawportalfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_DrawPortals", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_DrawRain", "type": "cvar", "help": "Enable/disable rain rendering.", "flags": ["cl"]},
	{"name": "r_drawrenderboxes", "type": "cvar", "help": "(0 - off) (1 - Draws the bounding box of entities) (2 - Draws the axis aligned bounding box used for culling) (3 - draws both bounding boxes)", "flags": ["cheat","cl"]},
	{"name": "r_drawropes", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawscreenoverlay", "type": "cvar", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "r_drawskybox", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_DrawSpecificStaticProp", "type": "cvar", "help": "", "flags": []},
	{"name": "r_drawsprites", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawstaticprops", "type": "cvar", "help": "0=Off, 1=Normal, 2=Wireframe", "flags": []},
	{"name": "r_drawtracers", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawtracers_firstperson", "type": "cvar", "help": "Toggle visibility of first person weapon tracers", "flags": ["a","cl"]},
	{"name": "r_drawtracers_movetonotintersect", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawtranslucentrenderables", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_drawtranslucentworld", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_drawunderwatercap", "type": "cvar", "help": "", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "r_drawunderwateroverlay", "type": "cvar", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "r_drawvgui", "type": "cvar", "help": "Enable the rendering of vgui panels", "flags": ["cheat"]},
	{"name": "r_drawviewmodel", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "r_drawworld", "type": "cvar", "help": "Render the world.", "flags": ["cheat"]},
	{"name": "r_dscale_basefov", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_fardist", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_farscale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_neardist", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dscale_nearscale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_dynamic", "type": "cvar", "help": "", "flags": []},
	{"name": "r_dynamiclighting", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_entityclips", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_eyeglintlodpixels", "type": "cvar", "help": "The number of pixels wide an eyeball has to be before rendering an eyeglint.  Is a floating point value.", "flags": []},
	{"name": "r_eyemove", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyes", "type": "cvar", "help": "", "flags": []},
	{"name": "r_eyeshift_x", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyeshift_y", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyeshift_z", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyesize", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_eyewaterepsilon", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_farz", "type": "cvar", "help": "Override the far clipping plane. -1 means to use the value in env_fog_controller.", "flags": ["cl"]},
	{"name": "r_fastreflectionfastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_fastzreject", "type": "cvar", "help": "Activate/deactivates a fast z-setting algorithm to take advantage of hardware with fast z reject. Use -1 to default to hardware settings", "flags": []},
	{"name": "r_fastzrejectdisp", "type": "cvar", "help": "Activates/deactivates fast z rejection on displacements (360 only). Only active when r_fastzreject is on.", "flags": []},
	{"name": "r_flashlight_always_cull_for_single_pass", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlight_info", "type": "cvar", "help": "Information about currently enabled flashlights", "flags": ["cl"]},
	{"name": "r_flashlight_topdown", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightambient", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightbacktraceoffset", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightbrightness", "type": "cvar", "help": "", "flags": ["cheat","server_can_execute"]},
	{"name": "r_flashlightclip", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_flashlightconstant", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightculldepth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightdepth_drawtranslucents", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdepthres", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdepthreshigh", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdepthtexture", "type": "cvar", "help": "", "flags": []},
	{"name": "r_FlashlightDetailProps", "type": "cvar", "help": "Enable a flashlight drawing pass on detail props. 0 = off, 1 = single pass, 2 = multipass (multipass is PC ONLY)", "flags": ["cl"]},
	{"name": "r_flashlightdrawclip", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_flashlightdrawdepth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightdrawdepthres", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightdrawfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdrawfrustumbbox", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightdrawsweptbbox", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightenableculling", "type": "cvar", "help": "Enable frustum culling of flashlights", "flags": ["cl"]},
	{"name": "r_flashlightfar", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightfov", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightladderdist", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightlinear", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightlockposition", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightmodels", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightmuzzleflashfov", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_flashlightnear", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightnearoffsetscale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightnodraw", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightoffsetforward", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightoffsetright", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightoffsetup", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightquadratic", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightrender", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightrendermodels", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightrenderworld", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightscissor", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightshadowatten", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlighttracedistcutoff", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightupdatedepth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flashlightvisualizetrace", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flashlightvolumetrics", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_flex", "type": "cvar", "help": "", "flags": []},
	{"name": "r_flushlod", "type": "command", "help": "Flush and reload LODs.", "flags": ["cheat"]},
	{"name": "r_forcecheapwater", "type": "cvar", "help": "Force all water to be cheap water, will show old renders if enabled after water has been seen", "flags": ["cheat","cl"]},
	{"name": "r_ForceRestore", "type": "cvar", "help": "", "flags": []},
	{"name": "r_ForceWaterLeaf", "type": "cvar", "help": "Enable for optimization to water - considers view in leaf under water for purposes of culling", "flags": ["cl"]},
	{"name": "r_frustumcullworld", "type": "cvar", "help": "", "flags": []},
	{"name": "r_glint_alwaysdraw", "type": "cvar", "help": "", "flags": []},
	{"name": "r_hidepaintedsurfaces", "type": "cvar", "help": "If enabled, hides all surfaces which have been painted.", "flags": []},
	{"name": "r_highlight_translucent_renderables", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_hwmorph", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_impacts_alt_orientation", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_itemblinkmax", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_itemblinkrate", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_jiggle_bones", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_keepstyledlightmapsonly", "type": "cvar", "help": "", "flags": []},
	{"name": "r_lightaverage", "type": "cvar", "help": "Activates/deactivate light averaging", "flags": []},
	{"name": "r_lightcache_invalidate", "type": "command", "help": "", "flags": ["cheat"]},
	{"name": "r_lightcache_numambientsamples", "type": "cvar", "help": "number of random directions to fire rays when computing ambient lighting", "flags": ["cheat"]},
	{"name": "r_lightcache_radiusfactor", "type": "cvar", "help": "Allow lights to influence lightcaches beyond the lights' radii", "flags": ["cheat"]},
	{"name": "r_lightcache_zbuffercache", "type": "cvar", "help": "", "flags": []},
	{"name": "r_lightcachecenter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightcachemodel", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightinterp", "type": "cvar", "help": "Controls the speed of light interpolation, 0 turns off interpolation", "flags": ["cheat"]},
	{"name": "r_lightmap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightstyle", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lightwarpidentity", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_lockportalfrustum", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_lockpvs", "type": "cvar", "help": "Lock the PVS so you can fly around and inspect what is being drawn.", "flags": ["cheat"]},
	{"name": "r_lod", "type": "cvar", "help": "Sets the renderer LOD", "flags": []},
	{"name": "r_maxdlights", "type": "cvar", "help": "", "flags": []},
	{"name": "r_maxmodeldecal", "type": "cvar", "help": "", "flags": []},
	{"name": "r_maxnewsamples", "type": "cvar", "help": "", "flags": []},
	{"name": "r_maxsampledist", "type": "cvar", "help": "", "flags": []},
	{"name": "r_minnewsamples", "type": "cvar", "help": "", "flags": []},
	{"name": "r_modelAmbientMin", "type": "cvar", "help": "Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns).", "flags": ["cheat"]},
	{"name": "r_modelwireframedecal", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_nohw", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_norefresh", "type": "cvar", "help": "", "flags": []},
	{"name": "r_nosw", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_novis", "type": "cvar", "help": "Turn off the PVS.", "flags": ["cheat"]},
	{"name": "r_occludeemaxarea", "type": "cvar", "help": "Prevents occlusion testing for entities that take up more than X% of the screen. 0 means use whatever the level said to use.", "flags": []},
	{"name": "r_occluderminarea", "type": "cvar", "help": "Prevents this occluder from being used if it takes up less than X% of the screen. 0 means use whatever the level said to use.", "flags": []},
	{"name": "r_occludermincount", "type": "cvar", "help": "At least this many occluders will be used, no matter how big they are.", "flags": []},
	{"name": "r_occlusion", "type": "cvar", "help": "Activate/deactivate the occlusion system.", "flags": []},
	{"name": "r_occlusionspew", "type": "cvar", "help": "Activate/deactivates spew about what the occlusion system is doing.", "flags": ["cheat"]},
	{"name": "r_oldlightselection", "type": "cvar", "help": "Set this to revert to HL2's method of selecting lights", "flags": ["cheat"]},
	{"name": "r_overlayfadeenable", "type": "cvar", "help": "", "flags": []},
	{"name": "r_overlayfademax", "type": "cvar", "help": "", "flags": []},
	{"name": "r_overlayfademin", "type": "cvar", "help": "", "flags": []},
	{"name": "r_overlaywireframe", "type": "cvar", "help": "", "flags": []},
	{"name": "r_paintblob_blr_scale", "type": "cvar", "help": "Scale all surface rendering parameters.", "flags": ["cl"]},
	{"name": "r_paintblob_debug_draw_margin", "type": "cvar", "help": "If tiler is disabled, whether to draw the margin.", "flags": ["cl"]},
	{"name": "r_paintblob_debug_draw_tile_boundaries", "type": "cvar", "help": "Whether to draw outlines of all tiles.", "flags": ["cl"]},
	{"name": "r_paintblob_debug_spu", "type": "cvar", "help": "Set this to 1 to break in the SPU code for the blob. Otherwise use 0.", "flags": ["cl"]},
	{"name": "r_paintblob_draw_isosurface", "type": "cvar", "help": "Draws the surface as an isosurface", "flags": ["cl"]},
	{"name": "r_paintblob_force_single_pass", "type": "cvar", "help": "If 0, render the blob in two passes. Set to 1 to force rendering of the blob in a single pass.", "flags": ["cl"]},
	{"name": "r_paintblob_highres_cube", "type": "cvar", "help": "Set cubewidth (coarseness of the mesh)", "flags": ["cl"]},
	{"name": "r_paintblob_mainview_highres", "type": "cvar", "help": "If 1, make the main view high resolution. Set to 0 to make the main view low resolution.", "flags": ["cl"]},
	{"name": "r_paintblob_material", "type": "cvar", "help": "Choose a material from 0 to N", "flags": ["cl"]},
	{"name": "r_paintblob_max_number_of_indices_displayed", "type": "cvar", "help": "Indicates the maximum number of indices to display per tile. The index size will be the limiting factor though (regardless of this number).", "flags": ["cl"]},
	{"name": "r_paintblob_max_number_of_threads", "type": "cvar", "help": "Indicates the maximum number of threads that will be spawn for the blob.", "flags": ["cl"]},
	{"name": "r_paintblob_max_number_of_vertices_displayed", "type": "cvar", "help": "Indicates the maximum number of vertices to display per tile. The VB size will be the limiting factor though (regardless of this number).", "flags": ["cl"]},
	{"name": "r_paintblob_max_particles_per_buckets", "type": "cvar", "help": "Indicates the maximum number of particles that will be calculated per bucket.", "flags": ["cl"]},
	{"name": "r_paintblob_only_mainview_displayed", "type": "cvar", "help": "If 0, other views are displayed (portal, shadow, reflection, ...). Note that shadows are disabled on game consoles. Set to 1 to only display the main view.", "flags": ["cl"]},
	{"name": "r_paintblob_otherviews_highres", "type": "cvar", "help": "If 0, all other views are low resolution. Set to 1 to make other views high resolution.", "flags": ["cl"]},
	{"name": "r_paintblob_rotate", "type": "cvar", "help": "Whether to rotate for transparency", "flags": ["cl"]},
	{"name": "r_paintblob_seeding_with_simd", "type": "cvar", "help": "Set this to 1 to run the seeding in SIMD. Otherwise use 0.", "flags": ["cl"]},
	{"name": "r_paintblob_shader", "type": "cvar", "help": "Choose a shader", "flags": ["cl"]},
	{"name": "r_paintblob_tile_index_to_draw", "type": "cvar", "help": "-1 to display all tiles. Otherwise the index of the tile to draw.", "flags": ["cl"]},
	{"name": "r_paintblob_timeout_for_recycling_fragments", "type": "cvar", "help": "Timeout in milliseconds used to recycle the fragments. Default is 64 in release, 1000 in debug.", "flags": ["cl"]},
	{"name": "r_paintblob_use_optimized_fragment_copy", "type": "cvar", "help": "Indicates if optimized VB/IB copy is enabled (Write-combine memory optimization).", "flags": ["cl"]},
	{"name": "r_paintblob_wireframe", "type": "cvar", "help": "Draw wireframe", "flags": ["cl"]},
	{"name": "r_particle_demo", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_particle_sim_spike_threshold_ms", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_particle_timescale", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_partition_level", "type": "cvar", "help": "Displays a particular level of the spatial partition system. Use -1 to disable it.", "flags": ["cheat"]},
	{"name": "r_PhysPropStaticLighting", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_pixelvisibility_partial", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_pixelvisibility_spew", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_earlyz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_fastpath", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_fastpath_max_ghost_recursion", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_stencil_depth", "type": "cvar", "help": "When using stencil views, this changes how many views within views we see", "flags": ["a","cl"]},
	{"name": "r_portal_use_complex_frustums", "type": "cvar", "help": "View optimization, turn this off if you get odd visual bugs.", "flags": ["cl"]},
	{"name": "r_portal_use_dlights", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portal_use_pvs_optimization", "type": "cvar", "help": "Enables an optimization that allows portals to be culled when outside of the PVS.", "flags": []},
	{"name": "r_portalscissor", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_portalscloseall", "type": "cvar", "help": "", "flags": []},
	{"name": "r_portalsopenall", "type": "cvar", "help": "Open all portals", "flags": ["cheat"]},
	{"name": "r_portalstencildisable", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_PortalTestEnts", "type": "cvar", "help": "Clip entities against portal frustums.", "flags": ["cheat","cl"]},
	{"name": "r_printdecalinfo", "type": "command", "help": "", "flags": []},
	{"name": "r_proplightingfromdisk", "type": "cvar", "help": "0=Off, 1=On, 2=Show Errors", "flags": []},
	{"name": "r_proplightingpooling", "type": "cvar", "help": "0 - off, 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset)", "flags": ["cheat"]},
	{"name": "r_propsmaxdist", "type": "cvar", "help": "Maximum visible distance", "flags": ["cl"]},
	{"name": "r_pspm_farz_multiplier", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_pspm_nearz_multiplier", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_queued_post_processing", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_queued_ropes", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_radiosity", "type": "cvar", "help": "0: no radiosity\n1: radiosity with ambient cube (6 samples)\n2: radiosity with 162 samples\n3: 162 samples for static props, 6 samples for everything else", "flags": ["cheat"]},
	{"name": "r_RainAllowInSplitScreen", "type": "cvar", "help": "Allows rain in splitscreen", "flags": ["cl"]},
	{"name": "r_rainalpha", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_rainalphapow", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainCheck", "type": "cvar", "help": "Enable/disable IsInAir() check for rain drops?", "flags": ["cheat","cl"]},
	{"name": "r_RainDebugDuration", "type": "cvar", "help": "Shows rain tracelines for this many seconds (0 disables)", "flags": ["cheat","cl"]},
	{"name": "r_raindensity", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainHack", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_rainlength", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainParticleDensity", "type": "cvar", "help": "Density of Particle Rain 0-1", "flags": ["cl"]},
	{"name": "r_RainProfile", "type": "cvar", "help": "Enable/disable rain profiling.", "flags": ["cheat","cl"]},
	{"name": "r_RainRadius", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainSideVel", "type": "cvar", "help": "How much sideways velocity rain gets.", "flags": ["cheat","cl"]},
	{"name": "r_RainSimulate", "type": "cvar", "help": "Enable/disable rain simulation.", "flags": ["cheat","cl"]},
	{"name": "r_rainspeed", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_RainSplashPercentage", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_rainwidth", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_randomflex", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_renderoverlayfragment", "type": "cvar", "help": "", "flags": []},
	{"name": "r_rimlight", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_rootlod", "type": "cvar", "help": "Root LOD", "flags": []},
	{"name": "r_ropetranslucent", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_screenoverlay", "type": "command", "help": "Draw specified material as an overlay", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "r_sequence_debug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_sequence_old_order", "type": "cvar", "help": "Use the old layer accumulation code, which initialises the overlays differently", "flags": ["cl"]},
	{"name": "r_shader_srgb", "type": "cvar", "help": "-1 = use hardware caps. 0 = use hardware srgb. 1 = use shader srgb(software lookup)", "flags": []},
	{"name": "r_shader_srgbread", "type": "cvar", "help": "1 = use shader srgb texture reads, 0 = use HW", "flags": []},
	{"name": "r_shadow_debug_spew", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_shadow_deferred", "type": "cvar", "help": "Toggle deferred shadow rendering", "flags": ["cheat"]},
	{"name": "r_shadow_deferred_downsample", "type": "cvar", "help": "Toggle low-res deferred shadow rendering", "flags": ["cl"]},
	{"name": "r_shadow_deferred_simd", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadow_half_update_rate", "type": "cvar", "help": "Updates shadows at half the framerate", "flags": ["cl"]},
	{"name": "r_shadow_lightpos_lerptime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadow_shortenfactor", "type": "cvar", "help": "Makes shadows cast from local lights shorter", "flags": ["cl"]},
	{"name": "r_shadowangles", "type": "command", "help": "Set shadow angles", "flags": ["cheat","cl"]},
	{"name": "r_shadowblobbycutoff", "type": "command", "help": "some shadow stuff", "flags": ["cheat","cl"]},
	{"name": "r_shadowcolor", "type": "command", "help": "Set shadow color", "flags": ["cheat","cl"]},
	{"name": "r_shadowdir", "type": "command", "help": "Set shadow direction", "flags": ["cheat","cl"]},
	{"name": "r_shadowdist", "type": "command", "help": "Set shadow distance", "flags": ["cheat","cl"]},
	{"name": "r_shadowfromanyworldlight", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_shadowfromworldlights", "type": "cvar", "help": "Enable shadowing from world lights", "flags": ["cl"]},
	{"name": "r_shadowfromworldlights_debug", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_shadowids", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_shadowlod", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadowmaxrendered", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_shadowrendertotexture", "type": "cvar", "help": "", "flags": []},
	{"name": "r_shadows", "type": "cvar", "help": "", "flags": []},
	{"name": "r_shadows_gamecontrol", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_shadows_on_renderables_enable", "type": "cvar", "help": "Support casting RTT shadows onto other renderables", "flags": ["cl"]},
	{"name": "r_shadowwireframe", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_showenvcubemap", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_ShowViewerArea", "type": "cvar", "help": "", "flags": []},
	{"name": "r_showz_power", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_simpleworldmodel_drawbeyonddistance_fullscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawbeyonddistance_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawbeyonddistance_splitscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawforrecursionlevel_fullscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawforrecursionlevel_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_drawforrecursionlevel_splitscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_waterreflections_fullscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_waterreflections_pip", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_simpleworldmodel_waterreflections_splitscreen", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_skin", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_skybox", "type": "cvar", "help": "Enable the rendering of sky boxes", "flags": ["cheat","cl"]},
	{"name": "r_skybox_draw_last", "type": "cvar", "help": "Draws skybox after world brush geometry, rather than before.", "flags": []},
	{"name": "r_skybox_occlude", "type": "cvar", "help": "Allows rendering of %compileSkyOcclusion sky materials", "flags": []},
	{"name": "r_slowpathwireframe", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_snapportal", "type": "cvar", "help": "", "flags": []},
	{"name": "r_SnowDebugBox", "type": "cvar", "help": "Snow Debug Boxes.", "flags": ["cheat","cl"]},
	{"name": "r_SnowEnable", "type": "cvar", "help": "Snow Enable", "flags": ["cheat","cl"]},
	{"name": "r_SnowEndAlpha", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowEndSize", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowFallSpeed", "type": "cvar", "help": "Snow fall speed scale.", "flags": ["cheat","cl"]},
	{"name": "r_SnowInsideRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowOutsideRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowParticles", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowPosScale", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowRayEnable", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowRayLength", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowRayRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowSpeedScale", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowStartAlpha", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowStartSize", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowWindScale", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowZoomOffset", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_SnowZoomRadius", "type": "cvar", "help": "Snow.", "flags": ["cheat","cl"]},
	{"name": "r_sse_s", "type": "cvar", "help": "sse ins for particle sphere create", "flags": ["cl"]},
	{"name": "r_staticpropinfo", "type": "cvar", "help": "", "flags": []},
	{"name": "r_surface_blr_cubewidth", "type": "cvar", "help": "Set cubewidth (coarseness of the mesh)", "flags": ["cl"]},
	{"name": "r_surface_blr_cutoff_radius", "type": "cvar", "help": "Set cutoff radius (how far field extends from each particle)", "flags": ["cl"]},
	{"name": "r_surface_blr_render_radius", "type": "cvar", "help": "Set render radius (how far from particle center surface will be)", "flags": ["cl"]},
	{"name": "r_surface_blr_scale", "type": "cvar", "help": "Scale all surface rendering parameters.", "flags": ["cl"]},
	{"name": "r_surface_calc_color", "type": "cvar", "help": "Just interpolate colors", "flags": ["a","cl"]},
	{"name": "r_surface_calc_hifreq_color", "type": "cvar", "help": "Experimental hi-freq colors", "flags": ["a","cl"]},
	{"name": "r_surface_calc_tan_only", "type": "cvar", "help": "Calculate Only Tangents", "flags": ["a","cl"]},
	{"name": "r_surface_calc_tile_color", "type": "cvar", "help": "Shows color of the tile", "flags": ["a","cl"]},
	{"name": "r_surface_calc_uv_and_tan", "type": "cvar", "help": "Calculate UVs and Tangents", "flags": ["a","cl"]},
	{"name": "r_surface_debug_draw_margin", "type": "cvar", "help": "If tiler is disabled, whether to draw the margin.", "flags": ["cl"]},
	{"name": "r_surface_debug_draw_tile_boundaries", "type": "cvar", "help": "Whether to draw outlines of all tiles.", "flags": ["cl"]},
	{"name": "r_surface_debug_max_slices", "type": "cvar", "help": "The maximum number of slices to draw", "flags": ["cl"]},
	{"name": "r_surface_debug_max_tiles", "type": "cvar", "help": "The maximum number of tiles to draw", "flags": ["cl"]},
	{"name": "r_surface_debug_tile", "type": "cvar", "help": "If tiler is enabled, whether we draw all tiles or just the central one.", "flags": ["cl"]},
	{"name": "r_surface_debug_use_tiler", "type": "cvar", "help": "Use the tiler", "flags": ["cl"]},
	{"name": "r_surface_draw_isosurface", "type": "cvar", "help": "Draws the surface as an isosurface", "flags": ["cl"]},
	{"name": "r_surface_material", "type": "cvar", "help": "Choose a material from 0 to N", "flags": ["cl"]},
	{"name": "r_surface_rotate", "type": "cvar", "help": "Whether to rotate for transparency", "flags": ["cl"]},
	{"name": "r_surface_rotate_by90", "type": "cvar", "help": "Whether to only rotate in 90 degree increments", "flags": ["cl"]},
	{"name": "r_surface_shader", "type": "cvar", "help": "Choose a shader", "flags": ["cl"]},
	{"name": "r_surface_wireframe", "type": "cvar", "help": "Draw wireframe", "flags": ["cl"]},
	{"name": "r_swingflashlight", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_teeth", "type": "cvar", "help": "", "flags": []},
	{"name": "r_threaded_blobulator", "type": "cvar", "help": "If enabled, blobulator will use material thread.", "flags": ["cl"]},
	{"name": "r_threaded_particles", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_threaded_shadow_clip", "type": "cvar", "help": "", "flags": []},
	{"name": "r_threadeddetailprops", "type": "cvar", "help": "enable threading of detail prop drawing", "flags": ["cl"]},
	{"name": "r_underwateroverlay_drain_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_unlimitedrefract", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_unloadlightmaps", "type": "cvar", "help": "", "flags": []},
	{"name": "r_updaterefracttexture", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "r_viewmodel_opacity", "type": "cvar", "help": "Set the opacity of view models. MIN = 0.01, MAX = 1.", "flags": ["a","cl"]},
	{"name": "r_visambient", "type": "cvar", "help": "Draw leaf ambient lighting samples.  Needs mat_leafvis 1 to work", "flags": []},
	{"name": "r_visocclusion", "type": "cvar", "help": "Activate/deactivate wireframe rendering of what the occlusion system is doing.", "flags": ["cheat"]},
	{"name": "r_visualizelighttraces", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_visualizelighttracesshowfulltrace", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_visualizeproplightcaching", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_visualizetraces", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "r_WaterDraw2DSky", "type": "cvar", "help": "Draw 2d sky in water reflection views", "flags": ["cl"]},
	{"name": "r_WaterDraw3DSky", "type": "cvar", "help": "Draw 3d sky in water reflection views", "flags": ["cl"]},
	{"name": "r_WaterDrawReflection", "type": "cvar", "help": "Enable water reflection", "flags": ["cl"]},
	{"name": "r_WaterDrawRefraction", "type": "cvar", "help": "Enable water refraction", "flags": ["cl"]},
	{"name": "r_waterforceexpensive", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "r_waterforcereflectentities", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "r_worldlightmin", "type": "cvar", "help": "", "flags": []},
	{"name": "r_worldlights", "type": "cvar", "help": "number of world lights to use per vertex", "flags": []},
	{"name": "r_worldlistcache", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "ragdoll_sleepaftertime", "type": "cvar", "help": "After this many seconds of being basically stationary, the ragdoll will go to sleep.", "flags": ["cl"]},
	{"name": "rate", "type": "cvar", "help": "Max bytes/sec the host can receive data", "flags": ["a","user"]},
	{"name": "recompute_speed", "type": "command", "help": "Recomputes clock speed (for debugging purposes).", "flags": ["cheat"]},
	{"name": "record", "type": "command", "help": "Record a demo.", "flags": ["norecord"]},
	{"name": "reload", "type": "command", "help": "Reload the most recent saved game (add setpos to jump to current view position on reload).", "flags": ["norecord"]},
	{"name": "+reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "reload_materials", "type": "cvar", "help": "", "flags": []},
	{"name": "reload_soft", "type": "command", "help": "Performs a soft reload (respawn entities, teleport player back to last save point. Experimental.)", "flags": ["sv"]},
	{"name": "removeallids", "type": "command", "help": "Remove all user IDs from the ban list.", "flags": []},
	{"name": "removeid", "type": "command", "help": "Remove a user ID from the ban list.", "flags": []},
	{"name": "removeip", "type": "command", "help": "Remove an IP address from the ban list.", "flags": []},
	{"name": "render_blanks", "type": "command", "help": "render N blank frames", "flags": []},
	{"name": "replay_debug", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "report_cliententitysim", "type": "cvar", "help": "List all clientside simulations and time - will report and turn itself off.", "flags": ["cheat","cl"]},
	{"name": "report_clientthinklist", "type": "cvar", "help": "List all clientside entities thinking and time - will report and turn itself off.", "flags": ["cheat","cl"]},
	{"name": "report_entities", "type": "command", "help": "Lists all entities", "flags": ["sv"]},
	{"name": "report_simthinklist", "type": "command", "help": "Lists all simulating/thinking entities", "flags": ["sv"]},
	{"name": "report_soundpatch", "type": "command", "help": "reports sound patch count", "flags": ["sv"]},
	{"name": "report_touchlinks", "type": "command", "help": "Lists all touchlinks", "flags": ["sv"]},
	{"name": "res_restrict_access", "type": "cvar", "help": "", "flags": []},
	{"name": "respawn_entities", "type": "command", "help": "Respawn all the entities in the map.", "flags": ["sp","sv","cheat"]},
	{"name": "restart", "type": "command", "help": "Restart the game on the same level (add setpos to jump to current view position on restart).", "flags": ["norecord"]},
	{"name": "retry", "type": "command", "help": "Retry connection to last server.", "flags": ["norecord","server_can_execute","clientcmd_can_execute"]},
	{"name": "-right", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+right", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "room_type", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "rope_averagelight", "type": "cvar", "help": "Makes ropes use average of cubemap lighting instead of max intensity.", "flags": ["cl"]},
	{"name": "rope_collide", "type": "cvar", "help": "Collide rope with the world", "flags": ["cl"]},
	{"name": "rope_min_pixel_diameter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "rope_rendersolid", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_shake", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_smooth", "type": "cvar", "help": "Do an antialiasing effect on ropes", "flags": ["cl"]},
	{"name": "rope_smooth_enlarge", "type": "cvar", "help": "How much to enlarge ropes in screen space for antialiasing effect", "flags": ["cl"]},
	{"name": "rope_smooth_maxalpha", "type": "cvar", "help": "Alpha for rope antialiasing effect", "flags": ["cl"]},
	{"name": "rope_smooth_maxalphawidth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_smooth_minalpha", "type": "cvar", "help": "Alpha for rope antialiasing effect", "flags": ["cl"]},
	{"name": "rope_smooth_minwidth", "type": "cvar", "help": "When using smoothing, this is the min screenspace width it lets a rope shrink to", "flags": ["cl"]},
	{"name": "rope_solid_maxalpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_solid_maxwidth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_solid_minalpha", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_solid_minwidth", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "rope_subdiv", "type": "cvar", "help": "Rope subdivision amount", "flags": ["cl"]},
	{"name": "rope_wind_dist", "type": "cvar", "help": "Don't use CPU applying small wind gusts to ropes when they're past this distance.", "flags": ["cl"]},
	{"name": "round_start_reset_duck", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "round_start_reset_speed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "safezonex", "type": "cvar", "help": "The percentage of the screen width that is considered safe from overscan", "flags": ["a","cl"]},
	{"name": "safezoney", "type": "cvar", "help": "The percentage of the screen height that is considered safe from overscan", "flags": ["a","cl"]},
	{"name": "save", "type": "command", "help": "Saves current game.", "flags": ["norecord"]},
	{"name": "save_async", "type": "cvar", "help": "", "flags": []},
	{"name": "save_asyncdelay", "type": "cvar", "help": "For testing, adds this many milliseconds of delay to the save operation.", "flags": []},
	{"name": "save_console", "type": "cvar", "help": "Autosave on the PC behaves like it does on the consoles.", "flags": []},
	{"name": "save_disable", "type": "cvar", "help": "", "flags": []},
	{"name": "save_finish_async", "type": "command", "help": "", "flags": ["norecord"]},
	{"name": "save_history_count", "type": "cvar", "help": "Keep this many old copies in history of autosaves and quicksaves.", "flags": []},
	{"name": "save_huddelayframes", "type": "cvar", "help": "Number of frames to defer for drawing the Saving message.", "flags": []},
	{"name": "save_screenshot", "type": "cvar", "help": "0 = none, 1 = non-autosave, 2 = always", "flags": []},
	{"name": "save_spew", "type": "cvar", "help": "", "flags": []},
	{"name": "say", "type": "command", "help": "Display player message", "flags": ["cl"]},
	{"name": "scandemo", "type": "command", "help": "Scan a recorded demo file (.dem ) for specific game events and dump data.", "flags": ["norecord"]},
	{"name": "scene_async_prefetch_spew", "type": "cvar", "help": "Display async .ani file loading info.", "flags": ["sv"]},
	{"name": "scene_clientflex", "type": "cvar", "help": "Do client side flex animation.", "flags": ["rep","cl"]},
	{"name": "scene_clientplayback", "type": "cvar", "help": "Play all vcds on the clients.", "flags": ["sv"]},
	{"name": "scene_flush", "type": "command", "help": "Flush all .vcds from the cache and reload from disk.", "flags": ["sv"]},
	{"name": "scene_forcecombined", "type": "cvar", "help": "When playing back, force use of combined .wav files even in english.", "flags": ["sv"]},
	{"name": "scene_maxcaptionradius", "type": "cvar", "help": "Only show closed captions if recipient is within this many units of speaking actor (0==disabled).", "flags": ["sv"]},
	{"name": "scene_playvcd", "type": "command", "help": "Play the given VCD as an instanced scripted scene.", "flags": ["sv","cheat"]},
	{"name": "scene_print", "type": "cvar", "help": "When playing back a scene, print timing and event info to console.", "flags": ["rep","cl"]},
	{"name": "scene_showlook", "type": "cvar", "help": "When playing back, show the directions of look events.", "flags": ["a","sv"]},
	{"name": "scene_showmoveto", "type": "cvar", "help": "When moving, show the end location.", "flags": ["a","sv"]},
	{"name": "scene_showunlock", "type": "cvar", "help": "Show when a vcd is playing but normal AI is running.", "flags": ["a","sv"]},
	{"name": "scene_useactorpitch", "type": "cvar", "help": "Uses the actor speech pitch when determining the sound pitch.", "flags": ["sv"]},
	{"name": "scene_vcdautosave", "type": "cvar", "help": "Create a savegame before VCD playback", "flags": ["cl"]},
	{"name": "+score", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-score", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "scr_centertime", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "screenshot", "type": "command", "help": "Take a screenshot.", "flags": ["clientcmd_can_execute"]},
	{"name": "sdl_double_click_size", "type": "cvar", "help": "", "flags": []},
	{"name": "sdl_double_click_time", "type": "cvar", "help": "", "flags": []},
	{"name": "sdr_spew_level", "type": "cvar", "help": "verbosity level for SteamNetSockets spew", "flags": []},
	{"name": "sensitivity", "type": "cvar", "help": "Mouse sensitivity.", "flags": ["a","cl"]},
	{"name": "sentry_consent_give", "type": "command", "help": "Tells sentry we have given consent to upload crash dumps", "flags": ["cl"]},
	{"name": "sentry_consent_revoke", "type": "command", "help": "Tells sentry we have revoked consent to upload crash dumps", "flags": ["cl"]},
	{"name": "server_game_time", "type": "command", "help": "Gives the game time in seconds (server's curtime)", "flags": ["sv"]},
	{"name": "servercfgfile", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "setang", "type": "command", "help": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setang_exact", "type": "command", "help": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setinfo", "type": "command", "help": "Adds a new user info value", "flags": ["clientcmd_can_execute"]},
	{"name": "setmodel", "type": "command", "help": "Changes's player's model", "flags": ["sv","cheat"]},
	{"name": "setpos", "type": "command", "help": "Move player to specified origin (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setpos_exact", "type": "command", "help": "Move player to an exact specified origin (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "setpos_player", "type": "command", "help": "Move specified player to specified origin (must have sv_cheats).", "flags": ["sv","cheat"]},
	{"name": "sfm_record_hz", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "shake", "type": "command", "help": "Shake the screen.", "flags": ["sv","cheat"]},
	{"name": "shake_show", "type": "cvar", "help": "Displays a list of the active screen shakes.", "flags": ["cl"]},
	{"name": "shake_stop", "type": "command", "help": "Stops all active screen shakes.\n", "flags": ["cheat","cl"]},
	{"name": "shake_testpunch", "type": "command", "help": "Test a punch-style screen shake.\n", "flags": ["cheat","cl"]},
	{"name": "show_main_menu", "type": "command", "help": "Show the main menu", "flags": ["cl"]},
	{"name": "-showbudget", "type": "command", "help": "", "flags": []},
	{"name": "+showbudget", "type": "command", "help": "", "flags": []},
	{"name": "-showbudget_texture", "type": "command", "help": "", "flags": []},
	{"name": "+showbudget_texture", "type": "command", "help": "", "flags": []},
	{"name": "-showbudget_texture_global", "type": "command", "help": "", "flags": []},
	{"name": "+showbudget_texture_global", "type": "command", "help": "", "flags": []},
	{"name": "showconsole", "type": "command", "help": "Show the console.", "flags": ["norecord"]},
	{"name": "showpanel", "type": "command", "help": "Shows a viewport panel <name>", "flags": ["cl"]},
	{"name": "showparticlecounts", "type": "cvar", "help": "Display number of particles drawn per frame", "flags": ["cl"]},
	{"name": "+showscores", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-showscores", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-showtimes", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "+showtimes", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "showtriggers", "type": "cvar", "help": "Shows trigger brushes", "flags": ["sv"]},
	{"name": "showtriggers_toggle", "type": "command", "help": "Toggle show triggers", "flags": ["sv"]},
	{"name": "-showvprof", "type": "command", "help": "Hide VProf UI", "flags": []},
	{"name": "+showvprof", "type": "command", "help": "Show VProf UI", "flags": []},
	{"name": "singlestep", "type": "cvar", "help": "Run engine in single step mode ( set next to 1 to advance a frame )", "flags": ["cheat"]},
	{"name": "sk_autoaim_mode", "type": "cvar", "help": "", "flags": ["a","rep","cl"]},
	{"name": "sk_player_arm", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_chest", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_head", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_leg", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sk_player_stomach", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "skill", "type": "cvar", "help": "Game skill level (1-3).", "flags": ["a"]},
	{"name": "skybox_disablereflection", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "skybox_swap", "type": "command", "help": "Swap through the skyboxes in our queue", "flags": ["sv","cheat"]},
	{"name": "sleep_when_meeting_framerate", "type": "cvar", "help": "Sleep instead of spinning if we're meeting the desired framerate.", "flags": []},
	{"name": "slot0", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot1", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot10", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot11", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot12", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot13", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot2", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot3", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot4", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot5", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot6", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot7", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot8", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "slot9", "type": "command", "help": "", "flags": ["server_can_execute","cl"]},
	{"name": "smoothstairs", "type": "cvar", "help": "Smooth player eye z coordinate when traversing stairs.", "flags": ["rep","cl"]},
	{"name": "snapto", "type": "command", "help": "", "flags": ["cl"]},
	{"name": "snd_async_flush", "type": "command", "help": "Flush all unlocked async audio data", "flags": []},
	{"name": "snd_async_fullyasync", "type": "cvar", "help": "All playback is fully async (sound doesn't play until data arrives).", "flags": []},
	{"name": "snd_async_minsize", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_async_showmem", "type": "command", "help": "Show async memory stats", "flags": []},
	{"name": "snd_async_showmem_music", "type": "command", "help": "Show async memory stats for just non-streamed music", "flags": []},
	{"name": "snd_async_showmem_summary", "type": "command", "help": "Show brief async memory stats", "flags": []},
	{"name": "snd_async_spew_blocking", "type": "cvar", "help": "Spew message to console any time async sound loading blocks on file i/o.", "flags": []},
	{"name": "snd_async_stream_fail", "type": "cvar", "help": "Spew stream pool failures.", "flags": []},
	{"name": "snd_async_stream_purges", "type": "cvar", "help": "Spew stream pool purges.", "flags": []},
	{"name": "snd_async_stream_recover_from_exhausted_stream", "type": "cvar", "help": "If 1, recovers when the stream is exhausted when playing PCM sounds (prevents music or ambiance sounds to stop if too many sounds are played). Set to 0, to stop the sound otherwise.", "flags": []},
	{"name": "snd_async_stream_spew", "type": "cvar", "help": "Spew streaming info ( 0=Off, 1=streams, 2=buffers", "flags": []},
	{"name": "snd_async_stream_spew_delayed_start_filter", "type": "cvar", "help": "Filter used to spew sounds that starts late. Use an empty string \"\" to display all sounds. By default only the VO are displayed.", "flags": []},
	{"name": "snd_async_stream_spew_delayed_start_time", "type": "cvar", "help": "Spew any asynchronous sound that starts with more than N milliseconds delay. By default spew when there is more than 500 ms delay.", "flags": []},
	{"name": "snd_async_stream_spew_exhausted_buffer", "type": "cvar", "help": "If 1, spews warnings when the buffer is exhausted (recommended). Set to 0 for no spew (for debugging purpose only).", "flags": []},
	{"name": "snd_async_stream_spew_exhausted_buffer_time", "type": "cvar", "help": "Number of milliseconds between each exhausted buffer spew.", "flags": []},
	{"name": "snd_async_stream_static_alloc", "type": "cvar", "help": "If 1, spews allocations on the static alloc pool. Set to 0 for no spew.", "flags": []},
	{"name": "snd_cache_memsize", "type": "cvar", "help": "Audio Source data cache max memory size (in mb)", "flags": []},
	{"name": "snd_cull_duplicates", "type": "cvar", "help": "If nonzero, aggressively cull duplicate sounds during mixing. The number specifies the number of duplicates allowed to be played.", "flags": []},
	{"name": "snd_debug_gaincurve", "type": "cvar", "help": "Visualize sound gain fall off", "flags": []},
	{"name": "snd_debug_gaincurvevol", "type": "cvar", "help": "Visualize sound gain fall off", "flags": []},
	{"name": "snd_debug_panlaw", "type": "cvar", "help": "Visualize panning crossfade curves", "flags": ["cheat"]},
	{"name": "snd_defer_trace", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_delay_for_choreo_enabled", "type": "cvar", "help": "Enables update of delay for choreo to compensate for IO latency.\n", "flags": []},
	{"name": "snd_delay_for_choreo_reset_after_N_milliseconds", "type": "cvar", "help": "Resets the choreo latency after N milliseconds of VO not playing. Default is 500 ms.\n", "flags": []},
	{"name": "snd_delay_sound_shift", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_disable_mixer_duck", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_disable_mixer_solo", "type": "cvar", "help": "\n", "flags": ["cheat"]},
	{"name": "snd_dsp_cancel_old_preset_after_N_milliseconds", "type": "cvar", "help": "Number of milliseconds after an unused previous preset is not considered valid for the start of a cross-fade.", "flags": []},
	{"name": "snd_dsp_optimization", "type": "cvar", "help": "Turns optimization on for DSP effects if set to 1 (default). 0 to turn the optimization off.", "flags": []},
	{"name": "snd_dsp_spew_changes", "type": "cvar", "help": "Spews major changes to the dsp or presets if set to 1. 0 to turn the spew off (default).", "flags": []},
	{"name": "snd_dsp_test1", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_dsp_test2", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_duckerattacktime", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_duckerreleasetime", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_duckerthreshold", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_ducking_off", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_ducktovolume", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_dump_filepaths", "type": "command", "help": "", "flags": []},
	{"name": "snd_dumpclientsounds", "type": "command", "help": "Dump sounds to console", "flags": ["cheat"]},
	{"name": "snd_dvar_dist_max", "type": "cvar", "help": "Play full 'far' sound at this distance", "flags": ["cheat"]},
	{"name": "snd_dvar_dist_min", "type": "cvar", "help": "Play full 'near' sound at this distance", "flags": ["cheat"]},
	{"name": "snd_filter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_find_channel", "type": "cvar", "help": "Scan every channel to find the corresponding sound.\n", "flags": []},
	{"name": "snd_foliage_db_loss", "type": "cvar", "help": "foliage dB loss per 1200 units", "flags": ["cheat"]},
	{"name": "snd_front_headphone_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual front left/right headphones.", "flags": []},
	{"name": "snd_front_stereo_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual front left/right speakers.", "flags": []},
	{"name": "snd_front_surround_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual front left/right speakers.", "flags": []},
	{"name": "snd_gain", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_gain_max", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_gain_min", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_getmixer", "type": "command", "help": "Get data related to mix group matching string", "flags": []},
	{"name": "snd_headphone_pan_exponent", "type": "command", "help": "Specifies the exponent for the pan xfade from phone to phone if the \"exp\" pan law is being used.", "flags": []},
	{"name": "snd_headphone_pan_radial_weight", "type": "command", "help": "Apply cos(angle) * weight before pan law", "flags": []},
	{"name": "snd_hrtf_async", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_benchmark", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_distance_behind", "type": "cvar", "help": "HRTF calculations will calculate the player as being this far behind the camera. Valid values are between 0 and 300.\n", "flags": ["a"]},
	{"name": "snd_hrtf_lerp_max_distance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_hrtf_lerp_method", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_lerp_min_distance", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_hrtf_passthrough", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_hrtf_voice_delay", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_hrtf_volume", "type": "cvar", "help": "Controls volume of HRTF sounds", "flags": ["cheat"]},
	{"name": "snd_hwcompat", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_list", "type": "cvar", "help": "lists all sounds played that match substring filter arg. \"\" = none, \"*\" = all\n", "flags": ["cheat"]},
	{"name": "snd_mainmenu_music_break_time_max", "type": "cvar", "help": "Minimum amount of time to pause between playing main menu music", "flags": ["cheat","cl"]},
	{"name": "snd_mainmenu_music_break_time_min", "type": "cvar", "help": "Minimum amount of time to pause between playing main menu music", "flags": ["cheat","cl"]},
	{"name": "snd_mainmusic_hrtf", "type": "cvar", "help": "Makes main menu music sound like a radio", "flags": []},
	{"name": "snd_mainmusic_hrtf_transition_speed", "type": "cvar", "help": "Makes main menu music sound like a radio", "flags": []},
	{"name": "snd_max_same_sounds", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_max_same_weapon_sounds", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_menumusic_volume", "type": "cvar", "help": "Relative volume of the main menu music\n", "flags": ["a"]},
	{"name": "snd_mergemethod", "type": "cvar", "help": "Sound merge method (0 == sum and clip, 1 == max, 2 == avg).", "flags": []},
	{"name": "snd_mix_async", "type": "cvar", "help": "Sets sound to get mixed asynchronously on a different thread\n", "flags": ["a"]},
	{"name": "snd_mix_async_frequency", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_directivity", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_dry_volume", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_occlusion", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_optimization", "type": "cvar", "help": "Turns optimization on for mixing if set to 1 (default). 0 to turn the optimization off.", "flags": []},
	{"name": "snd_mix_soundchar_enabled", "type": "cvar", "help": "Turns sound char on for mixing if set to 1 (default). 0 to turn the sound char off and use default behavior (spatial instead of doppler, directional, etc...).", "flags": []},
	{"name": "snd_mix_spatial_blend", "type": "cvar", "help": "Ratio to use to blend spatialized (3d) audio with mono input", "flags": ["a"]},
	{"name": "snd_mix_spatial_blend_override", "type": "cvar", "help": "Allows snd_mix_spatial_blend to override provided blend values", "flags": ["a"]},
	{"name": "snd_mix_test1", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mix_test2", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_mixahead", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "snd_mixerMasterDSP", "type": "cvar", "help": "\n", "flags": ["cheat"]},
	{"name": "snd_mixerMasterLevel", "type": "cvar", "help": "\n", "flags": ["cheat"]},
	{"name": "snd_musicvolume", "type": "cvar", "help": "Overall music volume\n", "flags": ["a"]},
	{"name": "snd_mute_losefocus", "type": "cvar", "help": "Percentage of volume reduced when game is not in focus", "flags": ["a"]},
	{"name": "snd_noextraupdate", "type": "cvar", "help": "\n", "flags": []},
	{"name": "snd_obscured_gain_dB", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_bounces", "type": "cvar", "help": "", "flags": ["cheat","rep"]},
	{"name": "snd_occlusion_eq_high", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_eq_low", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_eq_mid", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_no_eq_scale", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_occlusion_rays", "type": "cvar", "help": "", "flags": ["cheat","rep"]},
	{"name": "snd_op_test_convar", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_pause_all", "type": "cvar", "help": "Specifies to pause all sounds and not just voice", "flags": ["cheat"]},
	{"name": "snd_pitchquality", "type": "cvar", "help": "Whether to use high quality pitch shifters\n", "flags": ["a"]},
	{"name": "snd_playsounds", "type": "command", "help": "Play sounds from the game sounds txt file at a given location", "flags": ["cheat","server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "snd_pre_gain_dist_falloff", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_prefetch_common", "type": "cvar", "help": "Prefetch common sounds from directories specified in scripts/sound_prefetch.txt", "flags": []},
	{"name": "snd_print_channel_by_guid", "type": "command", "help": "Prints the content of a channel from its guid. snd_print_channel_by_guid <guid>.", "flags": ["cheat"]},
	{"name": "snd_print_channel_by_index", "type": "command", "help": "Prints the content of a channel from its index. snd_print_channel_by_index <index>.", "flags": ["cheat"]},
	{"name": "snd_print_channels", "type": "command", "help": "Prints all the active channel.", "flags": ["cheat"]},
	{"name": "snd_print_dsp_effect", "type": "command", "help": "Prints the content of a dsp effect.", "flags": []},
	{"name": "snd_profile", "type": "cvar", "help": "", "flags": ["demo"]},
	{"name": "snd_rear_headphone_position", "type": "command", "help": "Specifies the position  (in degrees) of the virtual rear left/right headphones.", "flags": []},
	{"name": "snd_rear_speaker_scale", "type": "cvar", "help": "How much to scale rear speaker contribution to front stereo output", "flags": ["cheat"]},
	{"name": "snd_rear_stereo_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual rear left/right speakers.", "flags": []},
	{"name": "snd_rear_surround_speaker_position", "type": "command", "help": "Specifies the position (in degrees) of the virtual rear left/right speakers.", "flags": []},
	{"name": "snd_refdb", "type": "cvar", "help": "Reference dB at snd_refdist", "flags": ["cheat"]},
	{"name": "snd_refdist", "type": "cvar", "help": "Reference distance for snd_refdb", "flags": ["cheat"]},
	{"name": "snd_report_format_sound", "type": "cvar", "help": "If set to 1, report all sound formats.\n", "flags": ["cheat"]},
	{"name": "snd_report_loop_sound", "type": "cvar", "help": "If set to 1, report all sounds that just looped.\n", "flags": ["cheat"]},
	{"name": "snd_report_start_sound", "type": "cvar", "help": "If set to 1, report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example). Use snd_showstart to see the sounds that are really played.\n", "flags": ["cheat"]},
	{"name": "snd_report_stop_sound", "type": "cvar", "help": "If set to 1, report all sounds stopped with S_StopSound().\n", "flags": ["cheat"]},
	{"name": "snd_report_verbose_error", "type": "cvar", "help": "If set to 1, report more error found when playing sounds.\n", "flags": ["cheat"]},
	{"name": "snd_restart", "type": "command", "help": "Restart sound system.", "flags": []},
	{"name": "snd_ricochets", "type": "cvar", "help": "Toggles the ricochet sounds on impacts.", "flags": ["a","cl"]},
	{"name": "snd_set_master_volume", "type": "command", "help": "Sets the master volume for a channel. snd_set_master_volume <guid> <mastervolume>.", "flags": ["cheat"]},
	{"name": "snd_setmixer", "type": "command", "help": "Set named Mixgroup of current mixer to mix vol, mute, solo.", "flags": ["cheat"]},
	{"name": "snd_setmixlayer", "type": "command", "help": "Set named Mixgroup of named mix layer to mix vol, mute, solo.", "flags": ["cheat"]},
	{"name": "snd_setmixlayer_amount", "type": "command", "help": "Set named mix layer mix amount.", "flags": ["cheat"]},
	{"name": "snd_setsoundparam", "type": "command", "help": "Set a sound paramater", "flags": ["server_can_execute","clientcmd_can_execute","cl"]},
	{"name": "snd_show", "type": "cvar", "help": "Show sounds info\n", "flags": ["cheat"]},
	{"name": "snd_show_channel_count", "type": "cvar", "help": "Show the current count of channel types.", "flags": []},
	{"name": "snd_show_filter", "type": "cvar", "help": "Limit debug sounds to those containing this substring\n", "flags": ["cheat"]},
	{"name": "snd_show_print", "type": "cvar", "help": "Print to console the sounds that are normally printed on screen only. 1 = print to console and to screen; 2 = print only to console\n", "flags": ["cheat"]},
	{"name": "snd_showmixer", "type": "cvar", "help": "Toggles showing the sound mixer every frame.\n", "flags": ["cheat"]},
	{"name": "snd_showmixgroupcontext", "type": "cvar", "help": "0 - OFF\n, 1 - Show mixgroup context of entity making sound\n2 - Show all mixgroup matches\n3 - Show all mixgroup matches with current soundmixer for entity\n", "flags": ["cheat"]},
	{"name": "snd_showstart", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_allow_dynamic_chantype", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_exec_when_paused", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_flush_operators", "type": "command", "help": "Flush and re-parse the sound operator system", "flags": ["cheat"]},
	{"name": "snd_sos_list_operator_updates", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_print_operators", "type": "command", "help": "Prints a list of currently available operators", "flags": []},
	{"name": "snd_sos_show_block_debug", "type": "cvar", "help": "Spew data about the list of block entries.", "flags": ["cheat"]},
	{"name": "snd_sos_show_client_rcv", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_client_xmit", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "snd_sos_show_entry_match_free", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_show_operator_entry_filter", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_init", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_parse", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_prestart", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_shutdown", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_start", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_stop_entry", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_operator_updates", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_opvar_list", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_show_queuetotrack", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_server_xmit", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "snd_sos_show_source_info", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_sos_show_startqueue", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "snd_sos_show_track_list", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_soundmixer", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_soundmixer_flush", "type": "command", "help": "Reload soundmixers.txt file.", "flags": ["cheat"]},
	{"name": "snd_soundmixer_list_mix_groups", "type": "command", "help": "List all mix groups to dev console.", "flags": []},
	{"name": "snd_soundmixer_list_mix_layers", "type": "command", "help": "List all mix layers to dev console.", "flags": []},
	{"name": "snd_soundmixer_list_mixers", "type": "command", "help": "List all mixers to dev console.", "flags": []},
	{"name": "snd_soundmixer_parse_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_soundmixer_set_trigger_factor", "type": "command", "help": "Set named mix layer / mix group, trigger amount.", "flags": ["cheat"]},
	{"name": "snd_soundmixer_version", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_spatialize_roundrobin", "type": "cvar", "help": "Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized per frame.", "flags": []},
	{"name": "snd_spew_dsp_process", "type": "cvar", "help": "Spews text every time a DSP effect is applied if set to 1. 0 to turn the spew off (default).", "flags": []},
	{"name": "snd_stereo_speaker_pan_exponent", "type": "command", "help": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.", "flags": []},
	{"name": "snd_stereo_speaker_pan_radial_weight", "type": "command", "help": "Apply cos(angle) * weight before pan law", "flags": []},
	{"name": "snd_store_filepaths", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_surround_speaker_pan_exponent", "type": "command", "help": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.", "flags": []},
	{"name": "snd_surround_speaker_pan_radial_weight", "type": "command", "help": "Apply cos(angle) * weight before pan law", "flags": []},
	{"name": "snd_surround_speakers", "type": "cvar", "help": "0 = Headphones, 2 = Stereo speakers, 4 = Quad, 5 = 5.1 Surround\n", "flags": ["a"]},
	{"name": "snd_thread_mode", "type": "cvar", "help": "Run the sound on a thread (independent of mix): 0 = no thread, 1 = sync thread, 2 = async thread", "flags": []},
	{"name": "snd_thread_updaterate", "type": "cvar", "help": "Number of async thread updates per second", "flags": []},
	{"name": "snd_visualize", "type": "cvar", "help": "Show sounds location in world\n", "flags": ["cheat"]},
	{"name": "snd_vol_no_xfade", "type": "cvar", "help": "If current and target volumes are close, don't cross-fade.", "flags": []},
	{"name": "snd_vol_xfade_incr_max", "type": "cvar", "help": "Never change volume by more than +/-N units per frame during cross-fade.", "flags": []},
	{"name": "snd_vol_xfade_speed_multiplier_for_doppler", "type": "cvar", "help": "Doppler effect is extremely sensible to volume variation. To reduce the pops, the cross-fade has to be very slow.", "flags": []},
	{"name": "snd_vol_xfade_time", "type": "cvar", "help": "Channel volume cross-fade time in seconds.", "flags": []},
	{"name": "snd_volume_ambient", "type": "cvar", "help": "Overall ambient volume\n", "flags": ["a"]},
	{"name": "snd_volume_footsteps", "type": "cvar", "help": "Overall footsteps volume\n", "flags": ["a"]},
	{"name": "snd_volume_menumusic", "type": "cvar", "help": "Relative volume of the main menu music\n", "flags": ["a"]},
	{"name": "snd_volume_music", "type": "cvar", "help": "Overall music volume\n", "flags": ["a"]},
	{"name": "snd_volume_music_multiplier_inoverlay", "type": "cvar", "help": "Music/ambient volume multiplier when Steam Overlay is active", "flags": ["a"]},
	{"name": "snd_volume_physics", "type": "cvar", "help": "Overall Physics volume\n", "flags": ["a"]},
	{"name": "snd_volume_ui", "type": "cvar", "help": "Overall UI volume\n", "flags": ["a"]},
	{"name": "snd_volume_weapon", "type": "cvar", "help": "Overall weapon volume\n", "flags": ["a"]},
	{"name": "snd_volume_weapon_localplayer", "type": "cvar", "help": "Weapon volume of the local player\n", "flags": ["a"]},
	{"name": "snd_vox_captiontrace", "type": "cvar", "help": "Shows sentence name for sentences which are set not to show captions.", "flags": []},
	{"name": "snd_vox_globaltimeout", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_vox_sectimetout", "type": "cvar", "help": "", "flags": []},
	{"name": "snd_vox_seqtimetout", "type": "cvar", "help": "", "flags": []},
	{"name": "sndplaydelay", "type": "command", "help": "", "flags": []},
	{"name": "sound_device_list", "type": "command", "help": "Lists all available audio devices.", "flags": []},
	{"name": "sound_device_override", "type": "cvar", "help": "ID of the sound device to use", "flags": ["a"]},
	{"name": "soundfade", "type": "command", "help": "Fade client volume.", "flags": ["server_can_execute"]},
	{"name": "soundinfo", "type": "command", "help": "Describe the current sound device.", "flags": []},
	{"name": "soundlist", "type": "command", "help": "List all known sounds.", "flags": []},
	{"name": "soundpatch_captionlength", "type": "cvar", "help": "How long looping soundpatch captions should display for.", "flags": ["rep","cl"]},
	{"name": "soundscape_debug", "type": "cvar", "help": "When on, draws lines to all env_soundscape entities.Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.", "flags": ["sv","cheat"]},
	{"name": "soundscape_dumpclient", "type": "command", "help": "Dumps the client's soundscape data.\n", "flags": ["cheat","cl"]},
	{"name": "soundscape_fadetime", "type": "cvar", "help": "Time to crossfade sound effects between soundscapes", "flags": ["cheat"]},
	{"name": "soundscape_flush", "type": "command", "help": "Flushes the server & client side soundscapes", "flags": ["sv"]},
	{"name": "soundscape_message", "type": "cvar", "help": "", "flags": []},
	{"name": "soundscape_radius_debug", "type": "cvar", "help": "Prints current volume of radius sounds", "flags": ["cheat"]},
	{"name": "speak", "type": "command", "help": "Play a constructed sentence.", "flags": []},
	{"name": "spec_allow_roaming", "type": "cvar", "help": "If nonzero, allow free-roaming spectator camera.", "flags": ["sv","cheat","rep"]},
	{"name": "spec_freeze_deathanim_time", "type": "cvar", "help": "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_distance_max", "type": "cvar", "help": "Maximum random distance from the target to stop when framing them in observer freeze cam.", "flags": ["cheat","cl"]},
	{"name": "spec_freeze_distance_min", "type": "cvar", "help": "Minimum random distance from the target to stop when framing them in observer freeze cam.", "flags": ["cheat","cl"]},
	{"name": "spec_freeze_panel_extended_time", "type": "cvar", "help": "Time spent with the freeze panel still up after observer freeze cam is done.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_target_fov", "type": "cvar", "help": "The target FOV that the deathcam should use.", "flags": ["cheat","rep","cl"]},
	{"name": "spec_freeze_target_fov_long", "type": "cvar", "help": "The target FOV that the deathcam should use when the cam zoom far away on the target.", "flags": ["cheat","rep","cl"]},
	{"name": "spec_freeze_time", "type": "cvar", "help": "Time spend frozen in observer freeze cam.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_time_lock", "type": "cvar", "help": "Time players are prevented from skipping the freeze cam", "flags": ["sv","rep"]},
	{"name": "spec_freeze_traveltime", "type": "cvar", "help": "Time taken to zoom in to frame a target in observer freeze cam.", "flags": ["rep","cl"]},
	{"name": "spec_freeze_traveltime_long", "type": "cvar", "help": "Time taken to zoom in to frame a target in observer freeze cam when they are far away.", "flags": ["cheat","rep","cl"]},
	{"name": "spec_lock_to_accountid", "type": "cvar", "help": "As an observer, lock the spectate target to the given accountid.", "flags": ["cl"]},
	{"name": "spec_pos", "type": "command", "help": "dump position and angles to the console", "flags": ["cl"]},
	{"name": "spec_replay_message_time", "type": "cvar", "help": "How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time", "flags": ["rep"]},
	{"name": "spec_replay_on_death", "type": "cvar", "help": "When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players", "flags": ["rep"]},
	{"name": "spec_replay_rate_base", "type": "cvar", "help": "Base time scale of Killer Replay.Experimental.", "flags": ["rep"]},
	{"name": "spec_replay_rate_limit", "type": "cvar", "help": "Minimum allowable pause between replay requests in seconds", "flags": ["rep"]},
	{"name": "spec_track", "type": "cvar", "help": "Tracks an entity in spec mode", "flags": ["cl"]},
	{"name": "-speed", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+speed", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "ss_enable", "type": "cvar", "help": "Enables Split Screen support. Play Single Player now launches into split screen mode. NO ONLINE SUPPORT", "flags": ["cl"]},
	{"name": "ss_force_primary_fullscreen", "type": "cvar", "help": "If enabled, all splitscreen users will only see the first user's screen full screen", "flags": ["cl"]},
	{"name": "ss_pip_bottom_offset", "type": "cvar", "help": "PIP offset vector from the bottom of the screen", "flags": ["cl"]},
	{"name": "ss_pip_right_offset", "type": "cvar", "help": "PIP offset vector from the right of the screen", "flags": ["cl"]},
	{"name": "ss_pipscale", "type": "cvar", "help": "Scale of the PIP aspect ratio to our resolution.", "flags": ["cl"]},
	{"name": "ss_pipsplit", "type": "cvar", "help": "If enabled, use PIP instead of splitscreen. (Only works for 2 players)", "flags": ["cl"]},
	{"name": "ss_reloadletterbox", "type": "command", "help": "ss_reloadletterbox", "flags": ["cl"]},
	{"name": "ss_splitmode", "type": "cvar", "help": "Two player split screen mode (0 - recommended settings base on the width, 1 - horizontal, 2 - vertical (only allowed in widescreen)", "flags": ["a","cl"]},
	{"name": "ss_verticalsplit", "type": "cvar", "help": "Two player split screen uses vertical split (do not set this directly, use ss_splitmode instead).", "flags": ["cl"]},
	{"name": "ss_voice_hearpartner", "type": "cvar", "help": "Route voice between splitscreen players on same system.", "flags": []},
	{"name": "startdemos", "type": "command", "help": "Play demos in demo sequence.", "flags": ["norecord"]},
	{"name": "startmovie", "type": "command", "help": "Start recording movie frames.", "flags": ["norecord"]},
	{"name": "startupmenu", "type": "command", "help": "Opens initial menu screen and loads the background bsp, but only if no other level is being loaded, and we're not in developer mode.", "flags": ["clientcmd_can_execute"]},
	{"name": "stat_memory", "type": "command", "help": "Dump memory stats", "flags": []},
	{"name": "status", "type": "command", "help": "Display map and connection status.", "flags": []},
	{"name": "step_spline", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "stick_cam_correct_pitch", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "stick_cam_input_cancel_threshold", "type": "cvar", "help": "Threshold of mouse_y input to cancel correct pitch", "flags": ["cheat","rep","cl"]},
	{"name": "stick_cam_min_rotation_rate", "type": "cvar", "help": "The rotation rate with which to rotate the player's up vector", "flags": ["rep","cl"]},
	{"name": "stick_cam_over_the_top_threshold", "type": "cvar", "help": "How far up/down the player must look to trigger pitch instead of roll correction", "flags": ["rep","cl"]},
	{"name": "stick_cam_pitch_rate", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "stick_cam_pitch_vs_roll_good_angle_threshold", "type": "cvar", "help": "When not overpitched in the target orientation, how close to straight up/down we have to be looking to trigger the pitch transition", "flags": ["rep","cl"]},
	{"name": "stick_cam_roll_rate", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "stop", "type": "command", "help": "Finish recording demo.", "flags": ["norecord"]},
	{"name": "stopdemo", "type": "command", "help": "Stop playing back a demo.", "flags": ["norecord"]},
	{"name": "stopsound", "type": "command", "help": "", "flags": []},
	{"name": "stopsoundscape", "type": "command", "help": "Stops all soundscape processing and fades current looping sounds", "flags": []},
	{"name": "+strafe", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-strafe", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "stringtable_alwaysrebuilddictionaries", "type": "cvar", "help": "Rebuild dictionary file on every level load\n", "flags": []},
	{"name": "stringtable_showsizes", "type": "cvar", "help": "Show sizes of string tables when building for signon\n", "flags": []},
	{"name": "stringtable_usedictionaries", "type": "cvar", "help": "Use dictionaries for string table networking\n", "flags": []},
	{"name": "stringtabledictionary", "type": "command", "help": "Create dictionary for current strings.", "flags": []},
	{"name": "studio_queue_mode", "type": "cvar", "help": "", "flags": []},
	{"name": "stuffcmds", "type": "command", "help": "Parses and stuffs command line + commands to command buffer.", "flags": []},
	{"name": "suitvolume", "type": "cvar", "help": "", "flags": ["a","sv"]},
	{"name": "surfaceprop", "type": "command", "help": "Reports the surface properties at the cursor", "flags": ["sv","cheat"]},
	{"name": "sv_accelerate", "type": "cvar", "help": "Linear acceleration when on the ground.", "flags": ["cheat"]},
	{"name": "sv_airaccelerate", "type": "cvar", "help": "Linear acceleration when in the air.", "flags": ["cheat"]},
	{"name": "sv_allow_legacy_cmd_execution_from_client", "type": "cvar", "help": "Enables old concommand execution behavior allowing remote clients to run any command not explicitly flagged as disallowed.", "flags": []},
	{"name": "sv_allow_lobby_connect_only", "type": "cvar", "help": "If set, players may only join this server from matchmaking lobby, may not connect directly.", "flags": []},
	{"name": "sv_allow_logic_convar", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_allow_mobile_portal_teleportation", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_allow_mobile_portals", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_allow_pas_attenutation_in_singleplayer", "type": "cvar", "help": "Toggles allowing CPASAttenuationFilter for singleplayer games.", "flags": ["sv"]},
	{"name": "sv_allowdownload", "type": "cvar", "help": "Allow clients to download files", "flags": []},
	{"name": "sv_allowupload", "type": "cvar", "help": "Allow clients to upload customizations files", "flags": []},
	{"name": "sv_autosave", "type": "cvar", "help": "Set to 1 to autosave game on level transition. Does not affect autosave triggers.", "flags": []},
	{"name": "sv_benchmark_autovprofrecord", "type": "cvar", "help": "If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark.vprof.", "flags": ["sv"]},
	{"name": "sv_benchmark_force_start", "type": "command", "help": "Force start the benchmark. This is only for debugging. It's better to set sv_benchmark to 1 and restart the level.", "flags": ["sv"]},
	{"name": "sv_benchmark_numticks", "type": "cvar", "help": "If > 0, then it only runs the benchmark for this # of ticks.", "flags": ["sv"]},
	{"name": "sv_bonus_challenge", "type": "cvar", "help": "Set to values other than 0 to select a bonus map challenge type.", "flags": ["sv","rep"]},
	{"name": "sv_bounce", "type": "cvar", "help": "Bounce multiplier for when physically simulated objects collide with other objects.", "flags": ["cheat"]},
	{"name": "sv_bowie_maneuver_threshold", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_cacheencodedents", "type": "cvar", "help": "If set to 1, does an optimization to prevent extra SendTable_Encode calls.", "flags": []},
	{"name": "sv_cheats", "type": "cvar", "help": "Allow cheats on server", "flags": ["nf","rep"]},
	{"name": "sv_clearhinthistory", "type": "command", "help": "Clear memory of server side hints displayed to the player.", "flags": ["sv"]},
	{"name": "sv_client_cmdrate_difference", "type": "cvar", "help": "cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate.", "flags": ["rep"]},
	{"name": "sv_client_event_data_ratelimit_bytes", "type": "cvar", "help": "Max bytes per window for client listen event data.", "flags": ["rep"]},
	{"name": "sv_client_keyvalues_data_ratelimit_bytes", "type": "cvar", "help": "Max bytes per window for client keyvalue data.", "flags": ["rep"]},
	{"name": "sv_client_max_interp_ratio", "type": "cvar", "help": "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect.", "flags": ["rep"]},
	{"name": "sv_client_min_interp_ratio", "type": "cvar", "help": "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected).\n              -1 = let clients set cl_interp_ratio to anything\n any other value = set minimum value for cl_interp_ratio", "flags": ["rep"]},
	{"name": "sv_client_predict", "type": "cvar", "help": "This can be used to force the value of cl_predict for connected clients (only while they are connected).\n   -1 = let clients set cl_predict to anything\n    0 = force cl_predict to 0\n    1 = force cl_predict to 1", "flags": ["rep"]},
	{"name": "sv_client_voice_data_ratelimit_bytes", "type": "cvar", "help": "Max bytes per window for client voice data.", "flags": ["rep"]},
	{"name": "sv_clockcorrection_msecs", "type": "cvar", "help": "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount", "flags": ["sv"]},
	{"name": "sv_consistency", "type": "cvar", "help": "Whether the server enforces file consistency for critical files", "flags": ["rep"]},
	{"name": "sv_contact", "type": "cvar", "help": "Contact email for server sysop", "flags": ["nf"]},
	{"name": "sv_dc_friends_reqd", "type": "cvar", "help": "Set this to 0 to allow direct connects to a game in progress even if no presents are present", "flags": ["sv"]},
	{"name": "sv_debug_dumpportalhole_nextcheck", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_debug_physicsshadowclones", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_debug_player_use", "type": "cvar", "help": "Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success", "flags": ["rep","cl"]},
	{"name": "sv_debugmanualmode", "type": "cvar", "help": "Make sure entities correctly report whether or not their network data has changed.", "flags": []},
	{"name": "sv_debugtempentities", "type": "cvar", "help": "Show temp entity bandwidth usage.", "flags": []},
	{"name": "sv_delta_entity_full_buffer_size", "type": "cvar", "help": "Buffer size for delta entities", "flags": []},
	{"name": "sv_deltaprint", "type": "cvar", "help": "Print accumulated CalcDelta profiling data (only if sv_deltatime is on)", "flags": []},
	{"name": "sv_deltatime", "type": "cvar", "help": "Enable profiling of CalcDelta calls", "flags": []},
	{"name": "sv_disable_pas", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "sv_downloadlist_include_navfile", "type": "cvar", "help": "Include map nav files in the download list for clients.", "flags": []},
	{"name": "sv_downloadurl", "type": "cvar", "help": "Location from which clients can download missing files", "flags": ["rep"]},
	{"name": "sv_drowning_damage_initial", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_drowning_damage_max", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_dump_class_info", "type": "command", "help": "Dump server class infos.", "flags": []},
	{"name": "sv_dump_class_table", "type": "command", "help": "Dump server class table matching the pattern (substr).", "flags": []},
	{"name": "sv_dump_entity_factories", "type": "command", "help": "Lists all server entity factory names.", "flags": ["sv"]},
	{"name": "sv_dump_entity_namespaces", "type": "command", "help": "Lists all server entity namespaces.", "flags": ["sv"]},
	{"name": "sv_dump_entity_sizes", "type": "command", "help": "Print sizeof(entclass)", "flags": ["sv"]},
	{"name": "sv_dump_portalsimulator_collision", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_dump_portalsimulator_holeshapes", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_dump_serialized_entities_mem", "type": "command", "help": "Dump serialized entity allocations stats.", "flags": []},
	{"name": "sv_dumpstringtables", "type": "cvar", "help": "", "flags": ["cheat"]},
	{"name": "sv_duplicate_playernames_ok", "type": "cvar", "help": "When enabled player names won't have the (#) in front of their names its the same as another player.", "flags": ["rep"]},
	{"name": "sv_enable_delta_packing", "type": "cvar", "help": "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.", "flags": []},
	{"name": "sv_enableoldqueries", "type": "cvar", "help": "Enable support for old style (HL1) server queries", "flags": []},
	{"name": "sv_env_entity_makers_enabled", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_extra_client_connect_time", "type": "cvar", "help": "Seconds after client connect during which extra frames are buffered to prevent non-delta'd update", "flags": []},
	{"name": "sv_extract_ammo_from_dropped_weapons", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_filterban", "type": "cvar", "help": "Set packet filtering by IP mode", "flags": []},
	{"name": "sv_findsoundname", "type": "command", "help": "Find sound names which reference the specified wave files.", "flags": ["cheat"]},
	{"name": "sv_footstep_sound_frequency", "type": "cvar", "help": "How frequent to hear the player's step sound or how fast they appear to be running from first person.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_force_enable_paint_in_map", "type": "cvar", "help": "Forcefully allocates paintmaps in maps that don't have 'Paint in map' set.", "flags": ["cheat","rep"]},
	{"name": "sv_force_transmit_ents", "type": "cvar", "help": "Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however).", "flags": ["sv"]},
	{"name": "sv_force_transmit_players", "type": "cvar", "help": "Will transmit players to all clients regardless of PVS checks.", "flags": ["sv"]},
	{"name": "sv_forcepreload", "type": "cvar", "help": "Force server side preloading.", "flags": ["a"]},
	{"name": "sv_friction", "type": "cvar", "help": "Friction on the ground.", "flags": ["cheat"]},
	{"name": "sv_fullsyncclones", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_func_bhop_time_limit", "type": "cvar", "help": "How many seconds the player is allowed to remain grounded on a func_bhop before being teleported.", "flags": ["sv","cheat"]},
	{"name": "sv_func_bhop_vis", "type": "cvar", "help": "Visualize when the player has reached the landing limit for a func_bhop entity.", "flags": ["sv","cheat"]},
	{"name": "sv_futbol_floor_exit_angle", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_gameinstructor_disable", "type": "cvar", "help": "Force all clients to disable their game instructors.", "flags": ["rep","cl"]},
	{"name": "sv_gravity", "type": "cvar", "help": "World gravity.", "flags": ["cheat"]},
	{"name": "sv_health_approach_enabled", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_health_approach_speed", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_hibernate_ms", "type": "cvar", "help": "# of milliseconds to sleep per frame while hibernating", "flags": []},
	{"name": "sv_hibernate_postgame_delay", "type": "cvar", "help": "# of seconds to wait after final client leaves before hibernating.", "flags": []},
	{"name": "sv_hibernate_punt_tv_clients", "type": "cvar", "help": "When enabled will punt all GOTV clients during hibernation", "flags": []},
	{"name": "sv_hibernate_when_empty", "type": "cvar", "help": "Puts the server into extremely low CPU usage mode when no clients connected", "flags": []},
	{"name": "sv_highlight_distance", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_highlight_duration", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_infinite_ammo", "type": "cvar", "help": "Player's active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the magazine.", "flags": ["rep","cl"]},
	{"name": "sv_interval_per_tick", "type": "cvar", "help": "Changes the interval per tick of the engine. Interval per tick is 1/tickrate, so 100 tickrate = 0.01.\nA value of 0 uses the gamemode's default tickrate.", "flags": ["cheat"]},
	{"name": "sv_ladder_angle", "type": "cvar", "help": "Cos of angle of incidence to ladder perpendicular for applying ladder_dampen.", "flags": ["cheat"]},
	{"name": "sv_ladder_dampen", "type": "cvar", "help": "Amount to dampen perpendicular movement on a ladder.", "flags": ["cheat"]},
	{"name": "sv_lagcompensateself", "type": "cvar", "help": "Player can lag compensate themselves.", "flags": ["sv","cheat"]},
	{"name": "sv_lagcompensationforcerestore", "type": "cvar", "help": "Don't test validity of a lag comp restore, just do it.", "flags": ["sv","cheat"]},
	{"name": "sv_lan", "type": "cvar", "help": "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )", "flags": []},
	{"name": "sv_log_http_record_before_any_listeners", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_log_onefile", "type": "cvar", "help": "Log server information to only one file.", "flags": ["a"]},
	{"name": "sv_logbans", "type": "cvar", "help": "Log server bans in the server logs.", "flags": ["a"]},
	{"name": "sv_logblocks", "type": "cvar", "help": "If true when log when a query is blocked (can cause very large log files)", "flags": []},
	{"name": "sv_logdownloadlist", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_logecho", "type": "cvar", "help": "Echo log information to the console.", "flags": ["a"]},
	{"name": "sv_logfile", "type": "cvar", "help": "Log server information in the log file.", "flags": ["a"]},
	{"name": "sv_logflush", "type": "cvar", "help": "Flush the log file to disk on each write (slow).", "flags": ["a"]},
	{"name": "sv_logsdir", "type": "cvar", "help": "Folder in the game directory where server logs will be stored.", "flags": ["a"]},
	{"name": "sv_logsecret", "type": "cvar", "help": "If set then include this secret when doing UDP logging (will use 0x53 as packet type, not usual 0x52)", "flags": []},
	{"name": "sv_logsocket", "type": "cvar", "help": "Uses a specific outgoing socket for sv udp logging", "flags": []},
	{"name": "sv_logsocket2", "type": "cvar", "help": "Uses a specific outgoing socket for second source of sv udp logging", "flags": []},
	{"name": "sv_logsocket2_substr", "type": "cvar", "help": "Uses a substring match for second source of sv udp logging", "flags": []},
	{"name": "sv_massreport", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_master_share_game_socket", "type": "cvar", "help": "Use the game's socket to communicate to the master server. If this is 0, then it will create a socket on -steamport + 1 to communicate to the master server on.", "flags": []},
	{"name": "sv_max_allowed_developer", "type": "cvar", "help": "Determines maximum allowed developer.", "flags": ["rep"]},
	{"name": "sv_max_allowed_net_graph", "type": "cvar", "help": "Determines max allowed net_graph value for clients in multiplayer.", "flags": ["nf","rep","cl"]},
	{"name": "sv_max_distance_transmit_footsteps", "type": "cvar", "help": "Maximum distance to transmit footstep sound effects.", "flags": ["rep","cl"]},
	{"name": "sv_max_dropped_packets_to_process", "type": "cvar", "help": "Max dropped packets to process. Lower settings prevent lagged players from simulating too far in the past. Setting of 0 disables cap.", "flags": []},
	{"name": "sv_max_queries_sec", "type": "cvar", "help": "Maximum queries per second to respond to from a single IP address.", "flags": []},
	{"name": "sv_max_queries_sec_global", "type": "cvar", "help": "Maximum queries per second to respond to from anywhere.", "flags": []},
	{"name": "sv_max_queries_tracked_ips_max", "type": "cvar", "help": "Window over which to average queries per second averages.", "flags": []},
	{"name": "sv_max_queries_tracked_ips_prune", "type": "cvar", "help": "Window over which to average queries per second averages.", "flags": []},
	{"name": "sv_max_queries_window", "type": "cvar", "help": "Window over which to average queries per second averages.", "flags": []},
	{"name": "sv_max_usercmd_move_magnitude", "type": "cvar", "help": "Maximum move magnitude that can be requested by client.", "flags": ["sv"]},
	{"name": "sv_maxclientframes", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_maxcmdrate", "type": "cvar", "help": "(If sv_mincmdrate is > 0), this sets the maximum value for cl_cmdrate.", "flags": ["rep"]},
	{"name": "sv_maxrate", "type": "cvar", "help": "Max bandwidth rate allowed on server, 0 == unlimited", "flags": ["rep"]},
	{"name": "sv_maxreplay", "type": "cvar", "help": "Maximum replay time in seconds", "flags": []},
	{"name": "sv_maxroutable", "type": "cvar", "help": "Server upper bound on net_maxroutable that a client can use.", "flags": []},
	{"name": "sv_maxspeed", "type": "cvar", "help": "Maximum walking speed.", "flags": ["cheat"]},
	{"name": "sv_maxunlag", "type": "cvar", "help": "Maximum lag compensation in seconds", "flags": ["sv"]},
	{"name": "sv_maxupdaterate", "type": "cvar", "help": "Maximum updates per second that the server will allow", "flags": ["rep"]},
	{"name": "sv_maxuptimelimit", "type": "cvar", "help": "If set, whenever a game ends, if the server uptime exceeds this number of hours, the server will exit.", "flags": []},
	{"name": "sv_maxusrcmdprocessticks", "type": "cvar", "help": "Maximum number of client-issued usrcmd ticks that can be replayed in packet loss conditions, 0 to allow no restrictions", "flags": ["sv"]},
	{"name": "sv_maxusrcmdprocessticks_holdaim", "type": "cvar", "help": "Hold client aim for multiple server sim ticks when client-issued usrcmd contains multiple actions (0: off; 1: hold this server tick; 2+: hold multiple ticks)", "flags": ["sv"]},
	{"name": "sv_maxusrcmdprocessticks_warning", "type": "cvar", "help": "Print a warning when user commands get dropped due to insufficient usrcmd ticks allocated, number of seconds to throttle, negative disabled", "flags": ["sv"]},
	{"name": "sv_maxvelocity", "type": "cvar", "help": "Maximum speed any ballistically moving object is allowed to attain per axis.", "flags": ["cheat"]},
	{"name": "sv_memlimit", "type": "cvar", "help": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.", "flags": []},
	{"name": "sv_mincmdrate", "type": "cvar", "help": "This sets the minimum value for cl_cmdrate. 0 == unlimited.", "flags": ["rep"]},
	{"name": "sv_minrate", "type": "cvar", "help": "Min bandwidth rate allowed on server, 0 == unlimited", "flags": ["rep"]},
	{"name": "sv_minupdaterate", "type": "cvar", "help": "Minimum updates per second that the server will allow", "flags": ["rep"]},
	{"name": "sv_minuptimelimit", "type": "cvar", "help": "If set, whenever a game ends, if the server uptime is less than this number of hours, the server will continue running regardless of sv_memlimit.", "flags": []},
	{"name": "sv_multiplayer_maxtempentities", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_multiplayer_sounds", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_new_delta_bits", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_noclipaccelerate", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_noclipduringpause", "type": "cvar", "help": "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.).", "flags": ["cheat","rep","cl"]},
	{"name": "sv_noclipspeed", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_noclipspeed_duck_multiplier", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_noclipspeed_sprint_multiplier", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_occlude_players", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_paint_detection_sphere_radius", "type": "cvar", "help": "The radius of the query sphere used to find the color of a light map at a contact point in world space.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_parallel_packentities", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_parallel_send", "type": "cvar", "help": "Pack and send snapshots in parallel for smoother server tick rate at the expense of spending more CPU.", "flags": []},
	{"name": "sv_parallel_sendsnapshot", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_password", "type": "cvar", "help": "Server password for entry into multiplayer games", "flags": ["nf","prot","norecord"]},
	{"name": "sv_phys_props_block_movers", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_playeranimstate_transitions", "type": "cvar", "help": "Enable transitions on animstate sequence changes", "flags": ["sv"]},
	{"name": "sv_playerperfhistorycount", "type": "cvar", "help": "Number of samples to maintain in player perf history", "flags": ["sv"]},
	{"name": "sv_portal_debug_touch", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_portal_high_speed_physics_early_untouch", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_portal_new_player_trace", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_new_velocity_check", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_portal_placement_debug", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "sv_portal_placement_never_bump", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_placement_never_fail", "type": "cvar", "help": "", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_placement_on_paint", "type": "cvar", "help": "Enable/Disable placing portal on painted surfaces", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_staticcollisioncache_cachebrushes", "type": "cvar", "help": "Cache all solid brushes as polyhedrons on level load", "flags": ["rep","cl"]},
	{"name": "sv_portal_staticcollisioncache_cachestaticprops", "type": "cvar", "help": "Cache all solid static props' vcollides as polyhedrons on level load", "flags": ["rep","cl"]},
	{"name": "sv_portal_teleportation_resets_collision_events", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "sv_portal_trace_vs_displacements", "type": "cvar", "help": "Use traces against portal environment displacement geometry", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_trace_vs_holywall", "type": "cvar", "help": "Use traces against portal environment carved wall", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_trace_vs_staticprops", "type": "cvar", "help": "Use traces against portal environment static prop geometry", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_trace_vs_world", "type": "cvar", "help": "Use traces against portal environment world geometry", "flags": ["cheat","rep","cl"]},
	{"name": "sv_portal_unified_velocity", "type": "cvar", "help": "An attempt at removing patchwork velocity tranformation in portals, moving to a unified approach.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_post_teleportation_box_time", "type": "cvar", "help": "Time to use a slightly expanded box for contacts right after teleportation.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_precacheinfo", "type": "command", "help": "Show precache info.", "flags": []},
	{"name": "sv_projected_entities_use_placement_helper", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_prop_door_open_speed_scale", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_pure", "type": "command", "help": "Show user data.", "flags": []},
	{"name": "sv_pure_consensus", "type": "cvar", "help": "Minimum number of file hashes to agree to form a consensus.", "flags": []},
	{"name": "sv_pure_kick_clients", "type": "cvar", "help": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.", "flags": []},
	{"name": "sv_pure_retiretime", "type": "cvar", "help": "Seconds of server idle time to flush the sv_pure file hash cache.", "flags": []},
	{"name": "sv_pure_trace", "type": "cvar", "help": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.", "flags": []},
	{"name": "sv_pvsskipanimation", "type": "cvar", "help": "Skips SetupBones when npc's are outside the PVS", "flags": ["a","sv"]},
	{"name": "sv_querycache_stats", "type": "command", "help": "Display status of the query cache (client only)", "flags": ["sv"]},
	{"name": "sv_quota_stringcmdspersecond", "type": "cvar", "help": "How many string commands per second clients are allowed to submit, 0 to disallow all string commands", "flags": []},
	{"name": "sv_regeneration_force_on", "type": "cvar", "help": "Cheat to test regenerative health systems", "flags": ["sv","cheat"]},
	{"name": "sv_regeneration_wait_time", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_region", "type": "cvar", "help": "The region of the world to report this server in.", "flags": []},
	{"name": "sv_reliableavatardata", "type": "cvar", "help": "When enabled player avatars are exchanged via gameserver (0: off, 1: players, 2: server)", "flags": ["rep"]},
	{"name": "sv_replaybots", "type": "cvar", "help": "If set to 1, the server records data needed to replay network stream from bot's perspective", "flags": []},
	{"name": "sv_reservation_grace", "type": "cvar", "help": "Time in seconds given for a lobby reservation.", "flags": []},
	{"name": "sv_reservation_tickrate_adjustment", "type": "cvar", "help": "Adjust server tickrate upon reservation", "flags": []},
	{"name": "sv_reservation_timeout", "type": "cvar", "help": "Time in seconds before lobby reservation expires.", "flags": []},
	{"name": "sv_script_think_interval", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_search_key", "type": "cvar", "help": "When searching for a dedicated server from lobby, restrict search to only dedicated servers having the same sv_search_key.", "flags": []},
	{"name": "sv_setsteamaccount", "type": "command", "help": "token\nSet game server account token to use for logging in to a persistent game server account", "flags": []},
	{"name": "sv_show_cull_props", "type": "cvar", "help": "Print out props that are being culled/added by recipent proxies.", "flags": []},
	{"name": "sv_show_usermessage", "type": "cvar", "help": "Shows the user messages that the server is sending to clients. Setting this to 2 will show the contents of the message", "flags": []},
	{"name": "sv_showanimstate", "type": "cvar", "help": "Show the (server) animation state for the specified entity (-1 for none).", "flags": ["sv","cheat"]},
	{"name": "sv_showanimstate_activities", "type": "cvar", "help": "Show activities in the (server) animation state display.", "flags": ["sv","cheat"]},
	{"name": "sv_showanimstate_log", "type": "cvar", "help": "1 to output sv_showanimstate to Msg(). 2 to store in AnimStateServer.log. 3 for both.", "flags": ["sv","cheat"]},
	{"name": "sv_showimpacts", "type": "cvar", "help": "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)", "flags": ["rep","cl"]},
	{"name": "sv_showladders", "type": "cvar", "help": "Show bbox and dismount points for all ladders (must be set before level load.)\n", "flags": ["sv"]},
	{"name": "sv_showlagcompensation", "type": "cvar", "help": "Show lag compensated hitboxes whenever a player is lag compensated.", "flags": ["sv","cheat"]},
	{"name": "sv_showlagcompensation_duration", "type": "cvar", "help": "Duration to show lag-compensated hitboxes", "flags": ["sv","cheat"]},
	{"name": "sv_showtags", "type": "command", "help": "Describe current gametags.", "flags": []},
	{"name": "sv_shutdown", "type": "command", "help": "Sets the server to shutdown when all games have completed", "flags": []},
	{"name": "sv_signon_dos_disconnect", "type": "cvar", "help": "Number of extra signon state confirmations required to disconnect a misbehaving client.", "flags": []},
	{"name": "sv_skyname", "type": "cvar", "help": "Current name of the skybox texture", "flags": ["a","sv","rep"]},
	{"name": "sv_sound_discardextraunreliable", "type": "cvar", "help": "", "flags": []},
	{"name": "sv_soundemitter_filecheck", "type": "command", "help": "Report missing wave files for sounds and game_sounds files.", "flags": ["cheat"]},
	{"name": "sv_soundemitter_flush", "type": "command", "help": "Flushes the sounds.txt system (server only)", "flags": ["sv","cheat"]},
	{"name": "sv_soundemitter_reload", "type": "command", "help": "Flushes the sounds.txt system", "flags": ["sv"]},
	{"name": "sv_soundemitter_spew", "type": "command", "help": "Print details about a sound.", "flags": ["cheat"]},
	{"name": "sv_soundemitter_trace", "type": "cvar", "help": "Show all EmitSound calls including their symbolic name and the actual wave file they resolved to. (-1 = for nobody, 0 = for everybody, n = for one entity)\n", "flags": ["rep","cl"]},
	{"name": "sv_soundscape_printdebuginfo", "type": "command", "help": "print soundscapes", "flags": ["sv","cheat"]},
	{"name": "sv_spec_post_death_additional_time", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_specaccelerate", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_specnoclip", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_specspeed", "type": "cvar", "help": "", "flags": ["a","sv","rep"]},
	{"name": "sv_stats", "type": "cvar", "help": "Collect CPU usage stats", "flags": []},
	{"name": "sv_steamauth_enforce", "type": "cvar", "help": "By default, player must maintain a reliable connection to Steam servers. When player Steam session drops, enforce it: 2 = instantly kick, 1 = kick at next spawn, 0 = do not kick.", "flags": []},
	{"name": "sv_steamgroup", "type": "cvar", "help": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.", "flags": ["nf"]},
	{"name": "sv_steamgroup_exclusive", "type": "cvar", "help": "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.", "flags": []},
	{"name": "sv_stepsize", "type": "cvar", "help": "Maximum instantaneous step up/down distance.", "flags": ["cheat"]},
	{"name": "sv_stopspeed", "type": "cvar", "help": "Minimum speed used to calculate slowdown due to ground friction.", "flags": ["cheat"]},
	{"name": "sv_stressbots", "type": "cvar", "help": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.", "flags": []},
	{"name": "sv_strict_notarget", "type": "cvar", "help": "If set, notarget will cause entities to never think they are in the pvs", "flags": ["sv"]},
	{"name": "sv_tags", "type": "cvar", "help": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.", "flags": ["nf"]},
	{"name": "sv_temp_baseline_string_table_buffer_size", "type": "cvar", "help": "Buffer size for writing string table baselines", "flags": []},
	{"name": "sv_teststepsimulation", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "sv_thinktimecheck", "type": "cvar", "help": "Check for thinktimes all on same timestamp.", "flags": ["sv"]},
	{"name": "sv_tickrate", "type": "command", "help": "Changes the tickrate to one of a defined set of values. Custom tickrates can be set using \"sv_interval_per_tick.\"", "flags": ["cheat"]},
	{"name": "sv_timeout", "type": "cvar", "help": "After this many seconds without a message from a client, the client is dropped", "flags": []},
	{"name": "sv_unlockedchapters", "type": "cvar", "help": "Highest unlocked game chapter.", "flags": ["a"]},
	{"name": "sv_use_find_closest_passable_space", "type": "cvar", "help": "Enables heavy-handed player teleporting stuck fix code.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_use_shadow_clones", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "sv_use_transformed_collideables", "type": "cvar", "help": "Disables traces against remote portal moving entities using transforms to bring them into local space.", "flags": ["cheat","rep","cl"]},
	{"name": "sv_usercmd_custom_random_seed", "type": "cvar", "help": "When enabled server will populate an additional random seed independent of the client", "flags": ["sv"]},
	{"name": "sv_validate_edict_change_infos", "type": "cvar", "help": "Verify that edict changeinfos are being calculated properly (used to debug local network backdoor mode).", "flags": []},
	{"name": "sv_visiblemaxplayers", "type": "cvar", "help": "Overrides the max players reported to prospective clients", "flags": []},
	{"name": "sv_voice_proximity", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_voice_proximity_minvolume", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "sv_voice_proximity_positional", "type": "cvar", "help": "", "flags": ["sv","rep"]},
	{"name": "sv_voice_proximity_use_falloff", "type": "cvar", "help": "", "flags": ["rep"]},
	{"name": "sv_voicecodec", "type": "cvar", "help": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.", "flags": ["rep"]},
	{"name": "sv_voiceenable", "type": "cvar", "help": "", "flags": ["a","nf"]},
	{"name": "sv_wateraccelerate", "type": "cvar", "help": "Linear acceleration when in water.", "flags": ["cheat"]},
	{"name": "sv_waterfriction", "type": "cvar", "help": "Friction in water.", "flags": ["cheat"]},
	{"name": "template_debug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "test_dispatcheffect", "type": "command", "help": "Test a clientside dispatch effect.\n\tUsage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>\n\tDefaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>\n", "flags": ["sv","cheat"]},
	{"name": "test_freezeframe", "type": "command", "help": "Test the freeze frame code.", "flags": ["cheat","cl"]},
	{"name": "testhudanim", "type": "command", "help": "Test a hud element animation.\n\tArguments: <anim name>\n", "flags": ["cheat","cl"]},
	{"name": "testscript_debug", "type": "cvar", "help": "Debug test scripts.", "flags": []},
	{"name": "testscript_running", "type": "cvar", "help": "Set to true when test scripts are running", "flags": []},
	{"name": "tf_clamp_airducks", "type": "cvar", "help": "Enforce a cooldown on ducking once the player has begun to unduck (not actually limited to air ducking).", "flags": ["cheat"]},
	{"name": "think_limit", "type": "cvar", "help": "Maximum think time in milliseconds, warning is printed if this is exceeded.", "flags": ["rep","cl"]},
	{"name": "thirdperson", "type": "command", "help": "Switch to thirdperson camera.", "flags": ["cheat","server_can_execute","cl"]},
	{"name": "thirdperson_mayamode", "type": "command", "help": "Switch to thirdperson Maya-like camera controls.", "flags": ["cheat","cl"]},
	{"name": "thirdperson_platformer", "type": "cvar", "help": "Player will aim in the direction they are moving.", "flags": ["cl"]},
	{"name": "thirdperson_screenspace", "type": "cvar", "help": "Movement will be relative to the camera, eg: left means screen-left", "flags": ["cl"]},
	{"name": "threadpool_affinity", "type": "cvar", "help": "Enable setting affinity", "flags": []},
	{"name": "threadpool_cycle_reserve", "type": "command", "help": "Cycles threadpool reservation by powers of 2", "flags": []},
	{"name": "threadpool_reserve", "type": "cvar", "help": "Consume the specified number of threads in the thread pool", "flags": []},
	{"name": "timedemo", "type": "command", "help": "Play a demo and report performance info.", "flags": ["norecord"]},
	{"name": "timedemo_vprofrecord", "type": "command", "help": "Play a demo and report performance info.  Also record vprof data for the span of the demo", "flags": ["norecord"]},
	{"name": "timedemoquit", "type": "command", "help": "Play a demo, report performance info, and then exit", "flags": ["norecord"]},
	{"name": "timerefresh", "type": "command", "help": "Profile the renderer.", "flags": ["cheat"]},
	{"name": "toggle", "type": "command", "help": "Toggles a convar on or off, or cycles through a set of values.", "flags": []},
	{"name": "toggle_duck", "type": "command", "help": "Toggles duck state of the player.\n", "flags": ["sv"]},
	{"name": "toggle_jump", "type": "command", "help": "Toggles jump state of the player.\n", "flags": ["sv"]},
	{"name": "toggle_speed", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "toggle_walk", "type": "command", "help": "Toggles walk state of the player. Toggle resets when unable to walk.\n", "flags": ["sv"]},
	{"name": "toggleconsole", "type": "command", "help": "Show/hide the console.", "flags": ["norecord"]},
	{"name": "trace_report", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "tracer_extra", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "traceray_cliptoworld", "type": "cvar", "help": "Limit the range of traces against entities to where the world was hit.", "flags": ["cheat","rep"]},
	{"name": "traceray_force_vphysics", "type": "cvar", "help": "0 = standard trace behavior, 1 = use vphysics for displacement collisions, 2 = use vphysics for all collisions", "flags": ["cheat","rep"]},
	{"name": "traceray_test", "type": "command", "help": "Perform a TraceRay in front of the player. Args: [startdist=64.0] [length=256.0] [size=8.0] [offset=0.0] [hittriggers=0]", "flags": ["sv","cheat"]},
	{"name": "traceray_test_exact", "type": "command", "help": "Perform a TraceRay with the specified attributes. Args: startX startY startZ endX endY endZ minsX minsY minsZ maxsX maxsY maxsZ [hittriggers=0]", "flags": ["sv","cheat"]},
	{"name": "traceray_unshrink_vphysics_brushes", "type": "cvar", "help": "Roughly account for shrunken VPhysics brush collision by expanding the trace epsilon.", "flags": ["cheat","rep"]},
	{"name": "triple_monitor_mode", "type": "cvar", "help": "Enable triple-monitor mode, restricting UI elements to the middle third of the display", "flags": ["a","cl"]},
	{"name": "tv_playcast_delay_prediction", "type": "cvar", "help": "", "flags": []},
	{"name": "tv_playcast_delay_resync", "type": "cvar", "help": "To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure", "flags": []},
	{"name": "tv_playcast_retry_timeout", "type": "cvar", "help": "In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync", "flags": []},
	{"name": "ui_posedebug_fade_in_time", "type": "cvar", "help": "Time during which a new pose activity layer is shown in green in +posedebug UI", "flags": ["cheat","norecord","cl"]},
	{"name": "ui_posedebug_fade_out_time", "type": "cvar", "help": "Time to keep a no longer active pose activity layer in red until removing it from +posedebug UI", "flags": ["cheat","norecord","cl"]},
	{"name": "ui_volume_scale", "type": "cvar", "help": "\n", "flags": []},
	{"name": "unbind", "type": "command", "help": "Unbind a key.", "flags": []},
	{"name": "unbindall", "type": "command", "help": "Unbind all keys.", "flags": []},
	{"name": "unbindallmousekeyboard", "type": "command", "help": "Unbind all mouse / keyboard keys.", "flags": []},
	{"name": "+use", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-use", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "use", "type": "command", "help": "Use a particular weapon\t\nArguments: <weapon_name>", "flags": ["sv","print"]},
	{"name": "+use_or_reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-use_or_reload", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "use_server_portal_particles", "type": "cvar", "help": "", "flags": ["rep","cl"]},
	{"name": "user", "type": "command", "help": "Show user data.", "flags": []},
	{"name": "users", "type": "command", "help": "Show user info for players on server.", "flags": []},
	{"name": "v_centermove", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_centerspeed", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "v_view_height", "type": "cvar", "help": "Sets the player's view height.", "flags": ["cheat","rep","cl"]},
	{"name": "v_view_height_dead", "type": "cvar", "help": "Sets the player's view height when dead.", "flags": ["cheat","rep","cl"]},
	{"name": "v_view_height_ducked", "type": "cvar", "help": "Set's the player's view height when ducked.", "flags": ["cheat","rep","cl"]},
	{"name": "vcollide_wireframe", "type": "cvar", "help": "Render physics collision models (models, static props, ragdolls) in wireframe", "flags": ["cl"]},
	{"name": "version", "type": "command", "help": "Print version info string.", "flags": []},
	{"name": "vgui_drawfocus", "type": "cvar", "help": "Report which panel is under the mouse.", "flags": []},
	{"name": "vgui_drawkeyfocus", "type": "cvar", "help": "Report which panel has keyboard focus.", "flags": []},
	{"name": "-vgui_drawtree", "type": "command", "help": "", "flags": []},
	{"name": "vgui_drawtree", "type": "cvar", "help": "Draws the vgui panel hiearchy to the specified depth level.", "flags": ["cheat"]},
	{"name": "+vgui_drawtree", "type": "command", "help": "", "flags": []},
	{"name": "vgui_drawtree_bounds", "type": "cvar", "help": "Show panel bounds.", "flags": []},
	{"name": "vgui_drawtree_clear", "type": "command", "help": "", "flags": []},
	{"name": "vgui_drawtree_draw_selected", "type": "cvar", "help": "Highlight the selected panel", "flags": []},
	{"name": "vgui_drawtree_freeze", "type": "cvar", "help": "Set to 1 to stop updating the vgui_drawtree view.", "flags": []},
	{"name": "vgui_drawtree_hidden", "type": "cvar", "help": "Draw the hidden panels.", "flags": []},
	{"name": "vgui_drawtree_panelalpha", "type": "cvar", "help": "Show the panel alpha values in the vgui_drawtree view.", "flags": []},
	{"name": "vgui_drawtree_panelptr", "type": "cvar", "help": "Show the panel pointer values in the vgui_drawtree view.", "flags": []},
	{"name": "vgui_drawtree_popupsonly", "type": "cvar", "help": "Draws the vgui popup list in hierarchy(1) or most recently used(2) order.", "flags": []},
	{"name": "vgui_drawtree_render_order", "type": "cvar", "help": "List the vgui_drawtree panels in render order.", "flags": []},
	{"name": "vgui_drawtree_scheme", "type": "cvar", "help": "Show scheme file for each panel", "flags": []},
	{"name": "vgui_drawtree_visible", "type": "cvar", "help": "Draw the visible panels.", "flags": []},
	{"name": "vgui_dump_panels", "type": "command", "help": "vgui_dump_panels [visible]", "flags": []},
	{"name": "vgui_message_dialog_modal", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "vgui_spew_fonts", "type": "command", "help": "", "flags": []},
	{"name": "vgui_togglepanel", "type": "command", "help": "show/hide vgui panel by name.", "flags": []},
	{"name": "view_punch_decay", "type": "cvar", "help": "Decay factor exponent for view punch", "flags": ["cheat","rep","cl"]},
	{"name": "view_recoil_tracking", "type": "cvar", "help": "How closely the view tracks with the aim punch from weapon recoil", "flags": ["cheat","rep","cl"]},
	{"name": "viewanim_addkeyframe", "type": "command", "help": "", "flags": ["cheat","cl"]},
	{"name": "viewanim_create", "type": "command", "help": "viewanim_create", "flags": ["cl"]},
	{"name": "viewanim_load", "type": "command", "help": "load animation from file", "flags": ["cl"]},
	{"name": "viewanim_reset", "type": "command", "help": "reset view angles!", "flags": ["cheat","cl"]},
	{"name": "viewanim_save", "type": "command", "help": "Save current animation to file", "flags": ["cl"]},
	{"name": "viewanim_test", "type": "command", "help": "test view animation", "flags": ["cl"]},
	{"name": "viewmodel_offset_x", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "viewmodel_offset_y", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "viewmodel_offset_z", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "viewmodel_recoil", "type": "cvar", "help": "Amount of weapon recoil/aimpunch to display on viewmodel", "flags": ["a","cl"]},
	{"name": "vis_force", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "vismon_poll_frequency", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "vismon_trace_limit", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "vm_debug", "type": "cvar", "help": "", "flags": ["cheat","cl"]},
	{"name": "vm_draw_addon", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "vm_draw_always", "type": "cvar", "help": "1 - Always draw view models, 2 - Never draw view models.  Should be done before map launches.", "flags": ["cheat","cl"]},
	{"name": "voice_all_icons", "type": "cvar", "help": "Draw all players' voice icons", "flags": ["cl"]},
	{"name": "voice_buffer_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_caster_enable", "type": "cvar", "help": "Toggle voice transmit and receive for casters. 0 = no caster, account number of caster to enable.", "flags": ["a"]},
	{"name": "voice_caster_scale", "type": "cvar", "help": "Caster Volume 0.0-1.0", "flags": ["a"]},
	{"name": "voice_clientdebug", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "voice_debugfeedback", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_debugfeedbackfrom", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_enable", "type": "cvar", "help": "Toggle voice transmit and receive.", "flags": ["a"]},
	{"name": "voice_enable_toggle", "type": "command", "help": "Toggles voice_enable convar.", "flags": []},
	{"name": "voice_fadeouttime", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_forcemicrecord", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "voice_gain_downward_multiplier", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_gain_max", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_gain_rate", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_gain_target", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_head_icon_height", "type": "cvar", "help": "Voice icons are this many inches over player eye positions", "flags": ["cl"]},
	{"name": "voice_head_icon_size", "type": "cvar", "help": "Size of voice icon over player heads in inches", "flags": ["cl"]},
	{"name": "voice_icons_method", "type": "cvar", "help": "0 = classic style, 1 = particles, 2 = integrated into target ID", "flags": ["cl"]},
	{"name": "voice_inputfromfile", "type": "cvar", "help": "Get voice input from 'voice_input.wav' rather than from the microphone.", "flags": []},
	{"name": "voice_local_icon", "type": "cvar", "help": "Draw local player's voice icon", "flags": ["cl"]},
	{"name": "voice_loopback", "type": "cvar", "help": "", "flags": ["user"]},
	{"name": "voice_minimum_gain", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_modenable", "type": "cvar", "help": "Enable/disable voice in this mod.", "flags": ["a","clientcmd_can_execute","cl"]},
	{"name": "voice_overdrive", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_overdrivefadetime", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_player_speaking_delay_threshold", "type": "cvar", "help": "", "flags": ["sv","cheat"]},
	{"name": "voice_player_volume", "type": "command", "help": "", "flags": []},
	{"name": "voice_positional", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "voice_positional_seconds_after_death", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_profile", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_recordtofile", "type": "cvar", "help": "Record mic data and decompressed voice data into 'voice_micdata.wav' and 'voice_decompressed.wav'", "flags": []},
	{"name": "voice_scale", "type": "cvar", "help": "Overall volume of voice over IP 0.0-1.0", "flags": ["a"]},
	{"name": "voice_serverdebug", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "voice_showchannels", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_showincoming", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_steal", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_system_enable", "type": "cvar", "help": "Toggle voice system.", "flags": ["a"]},
	{"name": "voice_threshold", "type": "cvar", "help": "", "flags": ["a","cl"]},
	{"name": "voice_thresold_delay", "type": "cvar", "help": "", "flags": []},
	{"name": "voice_vox", "type": "cvar", "help": "", "flags": ["a","clientcmd_can_execute"]},
	{"name": "voice_writevoices", "type": "cvar", "help": "Saves each speaker's voice data into separate .wav files\n", "flags": []},
	{"name": "voice_xsend_debug", "type": "cvar", "help": "", "flags": []},
	{"name": "-voicerecord", "type": "command", "help": "", "flags": []},
	{"name": "+voicerecord", "type": "command", "help": "", "flags": []},
	{"name": "voicerecord_toggle", "type": "command", "help": "", "flags": []},
	{"name": "volume", "type": "cvar", "help": "Sound volume\n", "flags": ["a"]},
	{"name": "vox_reload", "type": "command", "help": "Reload sentences.txt file", "flags": ["cheat"]},
	{"name": "voxeltree_box", "type": "command", "help": "View entities in the voxel-tree inside box <Vector(min), Vector(max)>.", "flags": ["sv","cheat"]},
	{"name": "voxeltree_playerview", "type": "command", "help": "View entities in the voxel-tree at the player position.", "flags": ["sv","cheat"]},
	{"name": "voxeltree_sphere", "type": "command", "help": "View entities in the voxel-tree inside sphere <Vector(center), float(radius)>.", "flags": ["sv","cheat"]},
	{"name": "voxeltree_view", "type": "command", "help": "View entities in the voxel-tree.", "flags": ["sv","cheat"]},
	{"name": "vphys_sleep_timeout", "type": "command", "help": "set sleep timeout: large values mean stuff won't ever sleep", "flags": []},
	{"name": "vprof", "type": "command", "help": "Toggle VProf profiler", "flags": []},
	{"name": "vprof_child", "type": "command", "help": "", "flags": []},
	{"name": "vprof_counters", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_counters_show_minmax", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_dump_counters", "type": "command", "help": "Dump vprof counters to the console", "flags": []},
	{"name": "vprof_dump_groupnames", "type": "command", "help": "Write the names of all of the vprof groups to the console.", "flags": []},
	{"name": "vprof_dump_oninterval", "type": "cvar", "help": "Interval (in seconds) at which vprof will batch up data and dump it to the console.", "flags": []},
	{"name": "vprof_dump_spikes", "type": "cvar", "help": "Framerate at which vprof will begin to dump spikes to the console. 0 = disabled, negative to reset after dump", "flags": []},
	{"name": "vprof_dump_spikes_budget_group", "type": "cvar", "help": "Budget gtNode to start report from when doing a dump spikes", "flags": []},
	{"name": "vprof_dump_spikes_hiearchy", "type": "cvar", "help": "Set to 1 to get a hierarchy report whith vprof_dump_spikes", "flags": []},
	{"name": "vprof_dump_spikes_node", "type": "cvar", "help": "Node to start report from when doing a dump spikes", "flags": []},
	{"name": "vprof_dump_spikes_terse", "type": "cvar", "help": "Whether to use most terse output", "flags": []},
	{"name": "vprof_generate_report", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_AI", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_AI_only", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_budget", "type": "command", "help": "Generate a report to the console based on budget group.", "flags": []},
	{"name": "vprof_generate_report_hierarchy", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_generate_report_hierarchy_per_frame_and_count_only", "type": "command", "help": "Generate a minimal hiearchical report to the console.", "flags": []},
	{"name": "vprof_generate_report_map_load", "type": "command", "help": "Generate a report to the console.", "flags": []},
	{"name": "vprof_graph", "type": "cvar", "help": "Draw the vprof graph.", "flags": []},
	{"name": "vprof_graphheight", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "vprof_graphwidth", "type": "cvar", "help": "", "flags": ["a"]},
	{"name": "vprof_nextsibling", "type": "command", "help": "", "flags": []},
	{"name": "vprof_off", "type": "command", "help": "Turn off VProf profiler", "flags": []},
	{"name": "vprof_on", "type": "command", "help": "Turn on VProf profiler", "flags": []},
	{"name": "vprof_parent", "type": "command", "help": "", "flags": []},
	{"name": "vprof_playback_average", "type": "command", "help": "Average the next N frames.", "flags": []},
	{"name": "vprof_playback_start", "type": "command", "help": "Start playing back a recorded .vprof file.", "flags": []},
	{"name": "vprof_playback_step", "type": "command", "help": "While playing back a .vprof file, step to the next tick.", "flags": []},
	{"name": "vprof_playback_stepback", "type": "command", "help": "While playing back a .vprof file, step to the previous tick.", "flags": []},
	{"name": "vprof_playback_stop", "type": "command", "help": "Stop playing back a recorded .vprof file.", "flags": []},
	{"name": "vprof_prevsibling", "type": "command", "help": "", "flags": []},
	{"name": "vprof_record_start", "type": "command", "help": "Start recording vprof data for playback later.", "flags": []},
	{"name": "vprof_record_stop", "type": "command", "help": "Stop recording vprof data", "flags": []},
	{"name": "vprof_render_stats", "type": "cvar", "help": "Draws render stats info to the screen", "flags": []},
	{"name": "vprof_reset", "type": "command", "help": "Reset the stats in VProf profiler", "flags": []},
	{"name": "vprof_reset_peaks", "type": "command", "help": "Reset just the peak time in VProf profiler", "flags": []},
	{"name": "vprof_scope_entity_gamephys", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "vprof_scope_entity_thinks", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "vprof_server_spike_threshold", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_server_thread", "type": "cvar", "help": "", "flags": []},
	{"name": "vprof_think_limit", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "vprof_to_csv", "type": "command", "help": "Convert a recorded .vprof file to .csv.", "flags": []},
	{"name": "+walk", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-walk", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "water_jump_debug", "type": "cvar", "help": "", "flags": ["sv","cheat","rep"]},
	{"name": "weapon_reload_script_current", "type": "command", "help": "Reloads weapon script for the current weapon.\n", "flags": ["sv"]},
	{"name": "weapon_reload_scripts", "type": "command", "help": "Reloads all weapon scripts.\n", "flags": ["sv"]},
	{"name": "weapon_showproficiency", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "whitelistcmd", "type": "command", "help": "Runs a whitelisted command.", "flags": []},
	{"name": "writeid", "type": "command", "help": "Writes a list of permanently-banned user IDs to banned_user.cfg.", "flags": []},
	{"name": "writeip", "type": "command", "help": "Save the ban list to banned_ip.cfg.", "flags": []},
	{"name": "xc_crouch_debounce", "type": "cvar", "help": "", "flags": ["sv"]},
	{"name": "z_ragdoll_impact_strength", "type": "cvar", "help": "", "flags": ["cl"]},
	{"name": "-zoom", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+zoom", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+zoom_in", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-zoom_in", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "-zoom_out", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "+zoom_out", "type": "command", "help": "", "flags": ["clientcmd_can_execute","cl"]},
	{"name": "zoom_sensitivity_ratio_joystick", "type": "cvar", "help": "Additional controller sensitivity scale factor applied when FOV is zoomed in.", "flags": ["a","cl","ss"]},
	{"name": "zoom_sensitivity_ratio_mouse", "type": "cvar", "help": "Additional mouse sensitivity scale factor applied when FOV is zoomed in.", "flags": ["a","cl","ss"]}
]
